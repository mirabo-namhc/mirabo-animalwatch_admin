{"ast":null,"code":"import cache from \"@common/utils/cache\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nexport const slice = createSlice({\n  name: \"auth\",\n  initialState: {\n    mode: null,\n    role: null,\n    token: cache.get(\"token\"),\n    data: {}\n  },\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.token = action.payload && action.payload.accessToken;\n      state.role = action.payload && action.payload.role;\n      state.mode = action.payload && action.payload.mode;\n      cache.set(\"token\", state.token);\n      cache.set(\"refreshToken\", action.payload.refreshToken);\n    },\n    logoutSuccess: state => {\n      state.authUser = null;\n      state.token = null;\n      cache.remove(\"token\");\n    },\n    setMode: (state, action) => {\n      state.mode = action.payload;\n    },\n    setRole: (state, action) => {\n      state.role = action.payload;\n    },\n    setData: (state, action) => {\n      state.data = action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  loginSuccess,\n  logoutSuccess,\n  setMode,\n  setRole,\n  setData\n} = slice.actions;\n\n// Get value from state\nexport const authStore = state => state.auth;\nexport default slice.reducer;","map":{"version":3,"mappings":"AAAA,OAAOA,KAAK,MAAM,qBAAqB;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,KAAK,GAAGD,WAAW,CAAC;EAC/BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAEP,KAAK,CAACQ,GAAG,CAAC,OAAO,CAAC;IACzBC,IAAI,EAAE,CAAC;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAY,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO,IAAID,MAAM,CAACC,OAAO,CAACC,WAAW;MAC1DH,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO,IAAID,MAAM,CAACC,OAAO,CAACR,IAAI;MAClDM,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO,IAAID,MAAM,CAACC,OAAO,CAACT,IAAI;MAClDL,KAAK,CAACgB,GAAG,CAAC,OAAO,EAAEJ,KAAK,CAACL,KAAK,CAAC;MAC/BP,KAAK,CAACgB,GAAG,CAAC,cAAc,EAAEH,MAAM,CAACC,OAAO,CAACG,YAAY,CAAC;IACxD,CAAC;IACDC,aAAa,EAAGN,KAAK,IAAK;MACxBA,KAAK,CAACO,QAAQ,GAAG,IAAI;MACrBP,KAAK,CAACL,KAAK,GAAG,IAAI;MAClBP,KAAK,CAACoB,MAAM,CAAC,OAAO,CAAC;IACvB,CAAC;IACDC,OAAO,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDQ,OAAO,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDS,OAAO,EAAE,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACH,IAAI,GAAGI,MAAM,CAACC,OAAO;IAC7B;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEH,YAAY;EAAEO,aAAa;EAAEG,OAAO;EAAEC,OAAO;EAAEC;AAAQ,CAAC,GACrErB,KAAK,CAACsB,OAAO;;AAEf;AACA,OAAO,MAAMC,SAAS,GAAIb,KAAK,IAAKA,KAAK,CAACc,IAAI;AAE9C,eAAexB,KAAK,CAACyB,OAAO","names":["cache","createSlice","slice","name","initialState","mode","role","token","get","data","reducers","loginSuccess","state","action","payload","accessToken","set","refreshToken","logoutSuccess","authUser","remove","setMode","setRole","setData","actions","authStore","auth","reducer"],"sources":["/home/huynd/animalwatch_admin/src/store/slices/authSlice.js"],"sourcesContent":["import cache from \"@common/utils/cache\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const slice = createSlice({\n  name: \"auth\",\n  initialState: {\n    mode: null,\n    role: null,\n    token: cache.get(\"token\"),\n    data: {},\n  },\n  reducers: {\n    loginSuccess: (state, action) => {\n      state.token = action.payload && action.payload.accessToken;\n      state.role = action.payload && action.payload.role;\n      state.mode = action.payload && action.payload.mode;\n      cache.set(\"token\", state.token);\n      cache.set(\"refreshToken\", action.payload.refreshToken);\n    },\n    logoutSuccess: (state) => {\n      state.authUser = null;\n      state.token = null;\n      cache.remove(\"token\");\n    },\n    setMode: (state, action) => {\n      state.mode = action.payload;\n    },\n    setRole: (state, action) => {\n      state.role = action.payload;\n    },\n    setData: (state, action) => {\n      state.data = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { loginSuccess, logoutSuccess, setMode, setRole, setData } =\n  slice.actions;\n\n// Get value from state\nexport const authStore = (state) => state.auth;\n\nexport default slice.reducer;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}