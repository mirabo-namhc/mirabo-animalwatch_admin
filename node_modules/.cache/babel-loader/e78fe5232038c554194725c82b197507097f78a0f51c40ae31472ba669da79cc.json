{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { t } from \"i18next\";\nimport { Button, Card, Col, Image, Row, Tag } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport useRenderForm from \"@common/hooks/useRenderFormDetail\";\nimport { userApi } from \"@services/apis/user\";\nimport { authStore, setData } from \"@store/slices/authSlice\";\nimport { IMAGE_URL } from \"@common/config/endpoint\";\nimport { formateValue } from \"@common/utils/format\";\nfunction AccountTable() {\n  _s();\n  var _value$role;\n  const {\n    data\n  } = useSelector(authStore);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    value\n  } = useFetch(() => userApi.getProfile());\n  const columnsData = [{\n    title: \"\",\n    src: `${IMAGE_URL}${value === null || value === void 0 ? void 0 : value.avatar}/original.jpg`,\n    propertyImg: {\n      height: 140,\n      width: 140\n    }\n  }, {\n    title: t(\"account.fullName\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : value.fullname)\n  }, {\n    title: t(\"account.email\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : value.email)\n  }, {\n    title: t(\"account.role\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : (_value$role = value.role) === null || _value$role === void 0 ? void 0 : _value$role.roleName)\n  }, {\n    title: t(\"account.address\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : value.address)\n  }, {\n    title: t(\"account.description\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : value.description)\n  }];\n  const columns = useRenderForm(columnsData, value);\n  useEffect(() => {\n    dispatch(setData(value));\n  }, [value]);\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"flex gap-30\"\n  }, columns), /*#__PURE__*/React.createElement(Row, {\n    justify: \"end\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => navigate(PATH_URL.MANAGER_ACCOUNT.FORM, {\n      state: data\n    })\n  }, t(\"account.buttonEdit\")))));\n}\n_s(AccountTable, \"PnVA42eQRAlY7hcW3UpeEhrgngc=\", false, function () {\n  return [useSelector, useDispatch, useNavigate, useFetch, useRenderForm];\n});\n_c = AccountTable;\nexport default AccountTable;\nvar _c;\n$RefreshReg$(_c, \"AccountTable\");","map":{"version":3,"mappings":"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","names":["React","useEffect","t","Button","Card","Col","Image","Row","Tag","useDispatch","useSelector","useNavigate","PATH_URL","useFetch","useRenderForm","userApi","authStore","setData","IMAGE_URL","formateValue","AccountTable","data","dispatch","navigate","value","getProfile","columnsData","title","src","avatar","propertyImg","height","width","text","fullname","email","role","roleName","address","description","columns","className","justify","type","onClick","MANAGER_ACCOUNT","FORM","state"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/account/Account.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { t } from \"i18next\";\nimport { Button, Card, Col, Image, Row, Tag } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport PATH_URL from \"@common/config/pathURL\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport useRenderForm from \"@common/hooks/useRenderFormDetail\";\nimport { userApi } from \"@services/apis/user\";\nimport { authStore, setData } from \"@store/slices/authSlice\";\nimport { IMAGE_URL } from \"@common/config/endpoint\";\nimport { formateValue } from \"@common/utils/format\";\n\nfunction AccountTable() {\n  const { data } = useSelector(authStore);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { value } = useFetch(() => userApi.getProfile());\n\n  const columnsData = [\n    {\n      title: \"\",\n      src: `${IMAGE_URL}${value?.avatar}/original.jpg`,\n      propertyImg: { height: 140, width: 140 },\n    },\n    {\n      title: t(\"account.fullName\"),\n      text: formateValue(value?.fullname),\n    },\n    {\n      title: t(\"account.email\"),\n      text: formateValue(value?.email),\n    },\n    {\n      title: t(\"account.role\"),\n      text: formateValue(value?.role?.roleName),\n    },\n    {\n      title: t(\"account.address\"),\n      text: formateValue(value?.address),\n    },\n    {\n      title: t(\"account.description\"),\n      text: formateValue(value?.description),\n    },\n  ];\n\n  const columns = useRenderForm(columnsData, value);\n\n  useEffect(() => {\n    dispatch(setData(value));\n  }, [value]);\n\n  return (\n    <div>\n      <Card>\n        <Row className=\"flex gap-30\">{columns}</Row>\n        <Row justify=\"end\">\n          <Button\n            type=\"primary\"\n            onClick={() =>\n              navigate(PATH_URL.MANAGER_ACCOUNT.FORM, { state: data })\n            }\n          >\n            {t(\"account.buttonEdit\")}\n          </Button>\n        </Row>\n      </Card>\n    </div>\n  );\n}\n\nexport default AccountTable;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}