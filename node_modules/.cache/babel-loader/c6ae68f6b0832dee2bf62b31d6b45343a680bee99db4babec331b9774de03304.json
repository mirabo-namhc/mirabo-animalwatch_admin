{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, message, Modal, Tag } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { t } from \"i18next\";\nimport ComTable from \"@components/common/ComTable\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport { adminApi } from \"@services/apis/admin\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport { sortDataTable } from \"@common/utils/sortHelper\";\nimport { formatDateTimeTable } from \"@common/utils/dateHelper\";\nfunction AdminList() {\n  _s();\n  var _value$paginate;\n  const navigate = useNavigate();\n  const [refetch, setRefetch] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\"\n  });\n  const {\n    loading,\n    value\n  } = useFetch(ourRequest => adminApi.getAdmins(pagination, ourRequest), [pagination, refetch]);\n  const handleCreate = () => {\n    navigate(PATH_URL.MANAGER_ADMIN.CREATE);\n  };\n  const handleSearch = keyWord => {\n    setPagination(curState => ({\n      ...curState,\n      keyword: keyWord === null || keyWord === void 0 ? void 0 : keyWord.trim(),\n      page: 1\n    }));\n  };\n  const handleChangeTable = (currentPage, totalItemPerPage) => {\n    setPagination(curState => ({\n      ...curState,\n      page: currentPage,\n      limit: totalItemPerPage\n    }));\n  };\n  const handleEditAdmin = (e, adminData) => {\n    e.stopPropagation();\n    navigate(PATH_URL.MANAGER_ADMIN.EDIT, {\n      state: adminData\n    });\n  };\n  const handleDeleteAdmin = adminId => {\n    adminApi.deleteAdmin({\n      id: adminId\n    }).then(() => {\n      setRefetch(`deleteUser-${adminId}`);\n      message.success(t(\"managementAdmin.message.delAdminSuccess\"));\n    }).catch(() => {\n      message.error(t(\"managementAdmin.message.delAdminErr\"));\n    });\n  };\n  const handleDetailShow = adminData => {\n    navigate(`${PATH_URL.MANAGER_ADMIN.DETAIL}`, {\n      state: adminData\n    });\n  };\n  const confirm = adminId => {\n    Modal.confirm({\n      icon: /*#__PURE__*/React.createElement(ExclamationCircleOutlined, null),\n      centered: true,\n      content: t(\"managementAdmin.modal.textConfirm\"),\n      okText: t(\"managementAdmin.modal.textYes\"),\n      cancelText: t(\"managementAdmin.modal.textNo\"),\n      onOk: () => handleDeleteAdmin(adminId)\n    });\n  };\n  const columns = [{\n    title: \"ID\",\n    dataIndex: \"id\",\n    sorter: (a, b) => sortDataTable(a, b),\n    sortDirections: [\"ascend\"],\n    align: \"center\"\n  }, {\n    title: t(\"managementAdmin.list.username\"),\n    dataIndex: \"fullname\",\n    align: \"center\"\n  }, {\n    title: t(\"managementAdmin.list.createdAt\"),\n    dataIndex: \"createdAt\",\n    align: \"center\",\n    render: createdAt => /*#__PURE__*/React.createElement(\"span\", null, formatDateTimeTable(createdAt))\n  }, {\n    title: t(\"managementAdmin.list.email\"),\n    dataIndex: \"email\",\n    align: \"center\"\n  }, {\n    title: t(\"managementAdmin.list.operation\"),\n    align: \"center\",\n    render: admin => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"full-height full-width\"\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: e => {\n        e.stopPropagation();\n        confirm(admin.id);\n      }\n    }, t(\"managementAdmin.list.btnDel\")))\n  }];\n  const totalPage = value === null || value === void 0 ? void 0 : (_value$paginate = value.paginate) === null || _value$paginate === void 0 ? void 0 : _value$paginate.totalPage;\n  const paginationProps = {\n    position: [\"bottomRight\"],\n    total: totalPage * 10,\n    current: pagination.page,\n    showSizeChanger: true,\n    onChange: handleChangeTable\n  };\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(ComTable, {\n    title: t(\"managementAdmin.title\"),\n    loading: loading,\n    columns: columns,\n    data: value === null || value === void 0 ? void 0 : value.data,\n    pagination: paginationProps,\n    onAddTable: handleCreate,\n    onSearch: handleSearch,\n    onClickRow: handleDetailShow\n  }));\n}\n_s(AdminList, \"UkKvejPPORBGsg0BwaNxca7vNuQ=\", false, function () {\n  return [useNavigate, useFetch];\n});\n_c = AdminList;\nexport default AdminList;\nvar _c;\n$RefreshReg$(_c, \"AdminList\");","map":{"version":3,"mappings":"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","names":["React","useState","Button","message","Modal","Tag","useNavigate","ExclamationCircleOutlined","t","ComTable","useFetch","adminApi","PATH_URL","sortDataTable","formatDateTimeTable","AdminList","navigate","refetch","setRefetch","pagination","setPagination","page","limit","keyword","loading","value","ourRequest","getAdmins","handleCreate","MANAGER_ADMIN","CREATE","handleSearch","keyWord","curState","trim","handleChangeTable","currentPage","totalItemPerPage","handleEditAdmin","e","adminData","stopPropagation","EDIT","state","handleDeleteAdmin","adminId","deleteAdmin","id","then","success","catch","error","handleDetailShow","DETAIL","confirm","icon","centered","content","okText","cancelText","onOk","columns","title","dataIndex","sorter","a","b","sortDirections","align","render","createdAt","admin","className","type","onClick","totalPage","paginate","paginationProps","position","total","current","showSizeChanger","onChange","data","onAddTable","onSearch","onClickRow"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/admin/AdminList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, message, Modal, Tag } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { t } from \"i18next\";\n\nimport ComTable from \"@components/common/ComTable\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport { adminApi } from \"@services/apis/admin\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport { sortDataTable } from \"@common/utils/sortHelper\";\nimport { formatDateTimeTable } from \"@common/utils/dateHelper\";\n\nfunction AdminList() {\n  const navigate = useNavigate();\n\n  const [refetch, setRefetch] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\",\n  });\n\n  const { loading, value } = useFetch(\n    (ourRequest) => adminApi.getAdmins(pagination, ourRequest),\n    [pagination, refetch],\n  );\n\n  const handleCreate = () => {\n    navigate(PATH_URL.MANAGER_ADMIN.CREATE);\n  };\n\n  const handleSearch = (keyWord) => {\n    setPagination((curState) => ({\n      ...curState,\n      keyword: keyWord?.trim(),\n      page: 1,\n    }));\n  };\n\n  const handleChangeTable = (currentPage, totalItemPerPage) => {\n    setPagination((curState) => ({\n      ...curState,\n      page: currentPage,\n      limit: totalItemPerPage,\n    }));\n  };\n\n  const handleEditAdmin = (e, adminData) => {\n    e.stopPropagation();\n    navigate(PATH_URL.MANAGER_ADMIN.EDIT, { state: adminData });\n  };\n\n  const handleDeleteAdmin = (adminId) => {\n    adminApi\n      .deleteAdmin({ id: adminId })\n      .then(() => {\n        setRefetch(`deleteUser-${adminId}`);\n        message.success(t(\"managementAdmin.message.delAdminSuccess\"));\n      })\n      .catch(() => {\n        message.error(t(\"managementAdmin.message.delAdminErr\"));\n      });\n  };\n\n  const handleDetailShow = (adminData) => {\n    navigate(`${PATH_URL.MANAGER_ADMIN.DETAIL}`, { state: adminData });\n  };\n\n  const confirm = (adminId) => {\n    Modal.confirm({\n      icon: <ExclamationCircleOutlined />,\n      centered: true,\n      content: t(\"managementAdmin.modal.textConfirm\"),\n      okText: t(\"managementAdmin.modal.textYes\"),\n      cancelText: t(\"managementAdmin.modal.textNo\"),\n      onOk: () => handleDeleteAdmin(adminId),\n    });\n  };\n\n  const columns = [\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      sorter: (a, b) => sortDataTable(a, b),\n      sortDirections: [\"ascend\"],\n      align: \"center\",\n    },\n    {\n      title: t(\"managementAdmin.list.username\"),\n      dataIndex: \"fullname\",\n      align: \"center\",\n    },\n    {\n      title: t(\"managementAdmin.list.createdAt\"),\n      dataIndex: \"createdAt\",\n      align: \"center\",\n      render: (createdAt) => <span>{formatDateTimeTable(createdAt)}</span>,\n    },\n    {\n      title: t(\"managementAdmin.list.email\"),\n      dataIndex: \"email\",\n      align: \"center\",\n    },\n    {\n      title: t(\"managementAdmin.list.operation\"),\n      align: \"center\",\n      render: (admin) => (\n        <div className=\"full-height full-width\">\n          <Button\n            type=\"primary\"\n            onClick={(e) => {\n              e.stopPropagation();\n              confirm(admin.id);\n            }}\n          >\n            {t(\"managementAdmin.list.btnDel\")}\n          </Button>\n        </div>\n      ),\n    },\n  ];\n\n  const totalPage = value?.paginate?.totalPage;\n  const paginationProps = {\n    position: [\"bottomRight\"],\n    total: totalPage * 10,\n    current: pagination.page,\n    showSizeChanger: true,\n    onChange: handleChangeTable,\n  };\n\n  return (\n    <div>\n      <ComTable\n        title={t(\"managementAdmin.title\")}\n        loading={loading}\n        columns={columns}\n        data={value?.data}\n        pagination={paginationProps}\n        onAddTable={handleCreate}\n        onSearch={handleSearch}\n        onClickRow={handleDetailShow}\n      />\n    </div>\n  );\n}\n\nexport default AdminList;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}