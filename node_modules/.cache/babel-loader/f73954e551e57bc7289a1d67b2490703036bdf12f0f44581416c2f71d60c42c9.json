{"ast":null,"code":"var _s = $RefreshSig$();\nimport { Button, Card, Form, Row, message } from \"antd\";\nimport { useForm, useWatch } from \"antd/es/form/Form\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport { COLDEF, TYPE_FIELD } from \"@common/constant/form\";\nimport { renderFieldForm } from \"@common/utils/renderFieldForm\";\nimport { levelApi } from \"@services/apis/level\";\nimport { validate } from \"@validate/index\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nfunction LevelForm() {\n  _s();\n  var _state$users;\n  const {\n    t\n  } = useTranslation();\n  const [form] = useForm();\n  const {\n    state\n  } = useLocation();\n  const isDetailPage = window.location.href.includes(\"detail\");\n  const [loading, setLoading] = useState(false);\n  const [dataColor, setDataColor] = useState((state === null || state === void 0 ? void 0 : state.color) || \"\");\n  const listUserSelect = useWatch(\"userId\", form);\n  const navigate = useNavigate();\n  const initialValues = {\n    ...state,\n    userId: state === null || state === void 0 ? void 0 : (_state$users = state.users) === null || _state$users === void 0 ? void 0 : _state$users.map(item => {\n      return {\n        key: item === null || item === void 0 ? void 0 : item.id,\n        value: item === null || item === void 0 ? void 0 : item.id,\n        label: item === null || item === void 0 ? void 0 : item.username\n      };\n    }),\n    color: (state === null || state === void 0 ? void 0 : state.color) || \"\"\n  };\n  const handleCancel = () => {\n    navigate(PATH_URL.MANAGER_LEVEL.INDEX);\n  };\n  const showTitle = () => {\n    return state ? t(\"levelManagement.titleEdit\") : t(\"levelManagement.titleCreate\");\n  };\n  const dataForm = [{\n    colwidth: COLDEF,\n    type: TYPE_FIELD.INPUT,\n    name: \"name\",\n    maxLength: 20,\n    label: t(\"levelManagement.list.title\"),\n    readOnly: isDetailPage,\n    style: {\n      textTransform: \"uppercase\"\n    },\n    rules: [{\n      required: true,\n      message: \"\"\n    }, {\n      max: 20,\n      message: t(\"validate.maxCharacter\", {\n        number: 20\n      })\n    }, {\n      validator: (rule, value) => {\n        if (!value || value.trim() === \"\") {\n          return Promise.reject(t(\"validate.notEmpty\", {\n            fieldName: t(\"levelManagement.list.title\")\n          }));\n        }\n        const pattern = /^[A-Za-z\\u3040-\\u30FF\\u4E00-\\u9FFF\\s]+$/;\n        if (!pattern.test(value)) {\n          return Promise.reject(t(\"validate.msgNoNumberNoCharacters\"));\n        }\n        return Promise.resolve();\n      }\n    }]\n  }, {\n    type: TYPE_FIELD.COLOR_PICKER,\n    name: \"color\",\n    label: t(\"levelManagement.list.background\"),\n    defaultValue: null,\n    disabledAlpha: true,\n    setDataColor,\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"validate.notEmpty\", {\n      fieldName: t(\"levelManagement.list.background\")\n    }))]\n  }];\n  const handleFinish = async values => {\n    if (state) {\n      try {\n        setLoading(true);\n        await levelApi.putLevel(state === null || state === void 0 ? void 0 : state.id, {\n          ...values,\n          name: values.name.toUpperCase(),\n          color: dataColor\n        });\n        message.success(t(\"levelManagement.message.editSuccess\"));\n        handleCancel();\n      } catch (error) {\n        message.error(t(\"levelManagement.message.editError\"));\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      try {\n        setLoading(true);\n        await levelApi.postLevel({\n          ...values,\n          name: values.name.toUpperCase(),\n          color: dataColor\n        });\n        message.success(t(\"levelManagement.message.createSuccess\"));\n        handleCancel();\n      } catch (error) {\n        message.error(t(\"levelManagement.message.createError\"));\n        message.error(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  useEffect(() => {\n    form.validateFields([\"userId\"]);\n  }, [listUserSelect]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"course-form form-default\"\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    className: \"full-width header-table\"\n  }, /*#__PURE__*/React.createElement(\"h3\", null, showTitle())), /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    colon: false,\n    layout: \"vertical\",\n    initialValues: state ? initialValues : {},\n    onFinish: handleFinish,\n    autoComplete: \"off\"\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [48, 8]\n  }, renderFieldForm(dataForm)), /*#__PURE__*/React.createElement(Row, {\n    className: \"flex jc-center gap-20 mt-15 full-width\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    className: \"fw-600 cancel-btn\",\n    onClick: handleCancel\n  }, t(\"form.btnBack\")), /*#__PURE__*/React.createElement(Button, {\n    loading: loading,\n    disabled: loading,\n    className: \"fw-600 submit-btn\",\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, state ? t(\"form.btnEdit\") : t(\"form.btnCreate\"))))));\n}\n_s(LevelForm, \"Ob8KazvsoK3MUr4vXKHGFT+12GU=\", false, function () {\n  return [useTranslation, useForm, useLocation, useWatch, useNavigate];\n});\n_c = LevelForm;\nLevelForm.propTypes = {};\nexport default LevelForm;\nvar _c;\n$RefreshReg$(_c, \"LevelForm\");","map":{"version":3,"mappings":";AAAA,SAASA,MAAM,EAAEC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAEC,OAAO,QAAQ,MAAM;AACvD,SAASC,OAAO,EAAEC,QAAQ,QAAQ,mBAAmB;AACrD,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,eAAe;AAE9C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,MAAM,EAAEC,UAAU,QAAQ,uBAAuB;AAC1D,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAE3D,SAASC,SAAS,GAAG;EAAA;EAAA;EACnB,MAAM;IAAEC;EAAE,CAAC,GAAGV,cAAc,EAAE;EAC9B,MAAM,CAACW,IAAI,CAAC,GAAGhB,OAAO,EAAE;EACxB,MAAM;IAAEiB;EAAM,CAAC,GAAGL,WAAW,EAAE;EAC/B,MAAMM,YAAY,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAAC,QAAQ,CAAC;EAC5D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAACa,MAAK,aAALA,KAAK,uBAALA,KAAK,CAAEU,KAAK,KAAI,EAAE,CAAC;EAC9D,MAAMC,cAAc,GAAG3B,QAAQ,CAAC,QAAQ,EAAEe,IAAI,CAAC;EAC/C,MAAMa,QAAQ,GAAGhB,WAAW,EAAE;EAE9B,MAAMiB,aAAa,GAAG;IACpB,GAAGb,KAAK;IACRc,MAAM,EAAEd,KAAK,aAALA,KAAK,uCAALA,KAAK,CAAEe,KAAK,iDAAZf,aAAcgB,GAAG,CAAEC,IAAI,IAAK;MAClC,OAAO;QAAEC,GAAG,EAAED,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,EAAE;QAAEC,KAAK,EAAEH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,EAAE;QAAEE,KAAK,EAAEJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK;MAAS,CAAC;IAClE,CAAC,CAAC;IACFZ,KAAK,EAAEV,MAAK,aAALA,KAAK,uBAALA,KAAK,CAAEU,KAAK,KAAI;EACzB,CAAC;EAED,MAAMa,YAAY,GAAG,MAAM;IACzBX,QAAQ,CAACvB,QAAQ,CAACmC,aAAa,CAACC,KAAK,CAAC;EACxC,CAAC;EAED,MAAMC,SAAS,GAAG,MAAM;IACtB,OAAO1B,KAAK,GACRF,CAAC,CAAC,2BAA2B,CAAC,GAC9BA,CAAC,CAAC,6BAA6B,CAAC;EACtC,CAAC;EAED,MAAM6B,QAAQ,GAAG,CACf;IACEC,QAAQ,EAAEtC,MAAM;IAChBuC,IAAI,EAAEtC,UAAU,CAACuC,KAAK;IACtBC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAE,EAAE;IACbX,KAAK,EAAEvB,CAAC,CAAC,4BAA4B,CAAC;IACtCmC,QAAQ,EAAEhC,YAAY;IACtBiC,KAAK,EAAE;MAAEC,aAAa,EAAE;IAAY,CAAC;IACrCC,KAAK,EAAE,CACL;MACEC,QAAQ,EAAE,IAAI;MACdvD,OAAO,EAAE;IACX,CAAC,EACD;MACEwD,GAAG,EAAE,EAAE;MACPxD,OAAO,EAAEgB,CAAC,CAAC,uBAAuB,EAAE;QAAEyC,MAAM,EAAE;MAAG,CAAC;IACpD,CAAC,EACD;MACEC,SAAS,EAAE,CAACC,IAAI,EAAErB,KAAK,KAAK;QAC1B,IAAI,CAACA,KAAK,IAAIA,KAAK,CAACsB,IAAI,EAAE,KAAK,EAAE,EAAE;UACjC,OAAOC,OAAO,CAACC,MAAM,CACnB9C,CAAC,CAAC,mBAAmB,EAAE;YACrB+C,SAAS,EAAE/C,CAAC,CAAC,4BAA4B;UAC3C,CAAC,CAAC,CACH;QACH;QAEA,MAAMgD,OAAO,GAAG,yCAAyC;QACzD,IAAI,CAACA,OAAO,CAACC,IAAI,CAAC3B,KAAK,CAAC,EAAE;UACxB,OAAOuB,OAAO,CAACC,MAAM,CAAC9C,CAAC,CAAC,kCAAkC,CAAC,CAAC;QAC9D;QACA,OAAO6C,OAAO,CAACK,OAAO,EAAE;MAC1B;IACF,CAAC;EAEL,CAAC,EACD;IACEnB,IAAI,EAAEtC,UAAU,CAAC0D,YAAY;IAC7BlB,IAAI,EAAE,OAAO;IACbV,KAAK,EAAEvB,CAAC,CAAC,iCAAiC,CAAC;IAC3CoD,YAAY,EAAE,IAAI;IAClBC,aAAa,EAAE,IAAI;IACnB1C,YAAY;IACZ2B,KAAK,EAAE,CACL;MACEC,QAAQ,EAAE,IAAI;MACdvD,OAAO,EAAE;IACX,CAAC,EACDY,QAAQ,CAAC0D,KAAK,CACZtD,CAAC,CAAC,mBAAmB,EAAE;MACrB+C,SAAS,EAAE/C,CAAC,CAAC,iCAAiC;IAChD,CAAC,CAAC,CACH;EAEL,CAAC,CACF;EAED,MAAMuD,YAAY,GAAG,MAAOC,MAAM,IAAK;IACrC,IAAItD,KAAK,EAAE;MACT,IAAI;QACFO,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMd,QAAQ,CAAC8D,QAAQ,CAACvD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,EAAE,EAAE;UACjC,GAAGmC,MAAM;UACTvB,IAAI,EAAEuB,MAAM,CAACvB,IAAI,CAACyB,WAAW,EAAE;UAC/B9C,KAAK,EAAEF;QACT,CAAC,CAAC;QACF1B,OAAO,CAAC2E,OAAO,CAAC3D,CAAC,CAAC,qCAAqC,CAAC,CAAC;QACzDyB,YAAY,EAAE;MAChB,CAAC,CAAC,OAAOmC,KAAK,EAAE;QACd5E,OAAO,CAAC4E,KAAK,CAAC5D,CAAC,CAAC,mCAAmC,CAAC,CAAC;MACvD,CAAC,SAAS;QACRS,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,MAAM;MACL,IAAI;QACFA,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMd,QAAQ,CAACkE,SAAS,CAAC;UACvB,GAAGL,MAAM;UACTvB,IAAI,EAAEuB,MAAM,CAACvB,IAAI,CAACyB,WAAW,EAAE;UAC/B9C,KAAK,EAAEF;QACT,CAAC,CAAC;QACF1B,OAAO,CAAC2E,OAAO,CAAC3D,CAAC,CAAC,uCAAuC,CAAC,CAAC;QAC3DyB,YAAY,EAAE;MAChB,CAAC,CAAC,OAAOmC,KAAK,EAAE;QACd5E,OAAO,CAAC4E,KAAK,CAAC5D,CAAC,CAAC,qCAAqC,CAAC,CAAC;QACvDhB,OAAO,CAAC4E,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,SAAS;QACRnD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;EACF,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACda,IAAI,CAAC6D,cAAc,CAAC,CAAC,QAAQ,CAAC,CAAC;EACjC,CAAC,EAAE,CAACjD,cAAc,CAAC,CAAC;EAEpB,oBACE1B;IAAK4E,SAAS,EAAC;EAA0B,gBACvC5E,oBAACJ,GAAG;IAACiF,KAAK,EAAC,QAAQ;IAACD,SAAS,EAAC;EAAyB,gBACrD5E,gCAAKyC,SAAS,EAAE,CAAM,CAClB,eAENzC,oBAACN,IAAI,qBACHM,oBAACL,IAAI;IACHmB,IAAI,EAAEA,IAAK;IACXgE,KAAK,EAAE,KAAM;IACbC,MAAM,EAAC,UAAU;IACjBnD,aAAa,EAAEb,KAAK,GAAGa,aAAa,GAAG,CAAC,CAAE;IAC1CoD,QAAQ,EAAEZ,YAAa;IACvBa,YAAY,EAAC;EAAK,gBAElBjF,oBAACJ,GAAG;IAACsF,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;EAAE,GAAE3E,eAAe,CAACmC,QAAQ,CAAC,CAAO,eACvD1C,oBAACJ,GAAG;IAACgF,SAAS,EAAC;EAAwC,gBACrD5E,oBAACP,MAAM;IACLmD,IAAI,EAAC,SAAS;IACdgC,SAAS,EAAC,mBAAmB;IAC7BO,OAAO,EAAE7C;EAAa,GAErBzB,CAAC,CAAC,cAAc,CAAC,CACX,eACTb,oBAACP,MAAM;IACL4B,OAAO,EAAEA,OAAQ;IACjB+D,QAAQ,EAAE/D,OAAQ;IAClBuD,SAAS,EAAC,mBAAmB;IAC7BhC,IAAI,EAAC,SAAS;IACdyC,QAAQ,EAAC;EAAQ,GAEhBtE,KAAK,GAAGF,CAAC,CAAC,cAAc,CAAC,GAAGA,CAAC,CAAC,gBAAgB,CAAC,CACzC,CACL,CACD,CACF,CACH;AAEV;AAAA,GAnKSD,SAAS;EAAA,QACFT,cAAc,EACbL,OAAO,EACJY,WAAW,EAINX,QAAQ,EACdY,WAAW;AAAA;AAAA,KARrBC,SAAS;AAqKlBA,SAAS,CAAC0E,SAAS,GAAG,CAAC,CAAC;AAExB,eAAe1E,SAAS;AAAA;AAAA","names":["Button","Card","Form","Row","message","useForm","useWatch","React","useEffect","useState","useTranslation","PATH_URL","COLDEF","TYPE_FIELD","renderFieldForm","levelApi","validate","useLocation","useNavigate","LevelForm","t","form","state","isDetailPage","window","location","href","includes","loading","setLoading","dataColor","setDataColor","color","listUserSelect","navigate","initialValues","userId","users","map","item","key","id","value","label","username","handleCancel","MANAGER_LEVEL","INDEX","showTitle","dataForm","colwidth","type","INPUT","name","maxLength","readOnly","style","textTransform","rules","required","max","number","validator","rule","trim","Promise","reject","fieldName","pattern","test","resolve","COLOR_PICKER","defaultValue","disabledAlpha","empty","handleFinish","values","putLevel","toUpperCase","success","error","postLevel","validateFields","className","align","colon","layout","onFinish","autoComplete","gutter","onClick","disabled","htmlType","propTypes"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/level/LevelForm.jsx"],"sourcesContent":["import { Button, Card, Form, Row, message } from \"antd\";\nimport { useForm, useWatch } from \"antd/es/form/Form\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport PATH_URL from \"@common/config/pathURL\";\nimport { COLDEF, TYPE_FIELD } from \"@common/constant/form\";\nimport { renderFieldForm } from \"@common/utils/renderFieldForm\";\nimport { levelApi } from \"@services/apis/level\";\nimport { validate } from \"@validate/index\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nfunction LevelForm() {\n  const { t } = useTranslation();\n  const [form] = useForm();\n  const { state } = useLocation();\n  const isDetailPage = window.location.href.includes(\"detail\");\n  const [loading, setLoading] = useState(false);\n  const [dataColor, setDataColor] = useState(state?.color || \"\");\n  const listUserSelect = useWatch(\"userId\", form);\n  const navigate = useNavigate();\n\n  const initialValues = {\n    ...state,\n    userId: state?.users?.map((item) => {\n      return { key: item?.id, value: item?.id, label: item?.username };\n    }),\n    color: state?.color || \"\",\n  };\n\n  const handleCancel = () => {\n    navigate(PATH_URL.MANAGER_LEVEL.INDEX);\n  };\n\n  const showTitle = () => {\n    return state\n      ? t(\"levelManagement.titleEdit\")\n      : t(\"levelManagement.titleCreate\");\n  };\n\n  const dataForm = [\n    {\n      colwidth: COLDEF,\n      type: TYPE_FIELD.INPUT,\n      name: \"name\",\n      maxLength: 20,\n      label: t(\"levelManagement.list.title\"),\n      readOnly: isDetailPage,\n      style: { textTransform: \"uppercase\" },\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        {\n          max: 20,\n          message: t(\"validate.maxCharacter\", { number: 20 }),\n        },\n        {\n          validator: (rule, value) => {\n            if (!value || value.trim() === \"\") {\n              return Promise.reject(\n                t(\"validate.notEmpty\", {\n                  fieldName: t(\"levelManagement.list.title\"),\n                }),\n              );\n            }\n\n            const pattern = /^[A-Za-z\\u3040-\\u30FF\\u4E00-\\u9FFF\\s]+$/;\n            if (!pattern.test(value)) {\n              return Promise.reject(t(\"validate.msgNoNumberNoCharacters\"));\n            }\n            return Promise.resolve();\n          },\n        },\n      ],\n    },\n    {\n      type: TYPE_FIELD.COLOR_PICKER,\n      name: \"color\",\n      label: t(\"levelManagement.list.background\"),\n      defaultValue: null,\n      disabledAlpha: true,\n      setDataColor,\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        validate.empty(\n          t(\"validate.notEmpty\", {\n            fieldName: t(\"levelManagement.list.background\"),\n          }),\n        ),\n      ],\n    },\n  ];\n\n  const handleFinish = async (values) => {\n    if (state) {\n      try {\n        setLoading(true);\n        await levelApi.putLevel(state?.id, {\n          ...values,\n          name: values.name.toUpperCase(),\n          color: dataColor,\n        });\n        message.success(t(\"levelManagement.message.editSuccess\"));\n        handleCancel();\n      } catch (error) {\n        message.error(t(\"levelManagement.message.editError\"));\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      try {\n        setLoading(true);\n        await levelApi.postLevel({\n          ...values,\n          name: values.name.toUpperCase(),\n          color: dataColor,\n        });\n        message.success(t(\"levelManagement.message.createSuccess\"));\n        handleCancel();\n      } catch (error) {\n        message.error(t(\"levelManagement.message.createError\"));\n        message.error(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    form.validateFields([\"userId\"]);\n  }, [listUserSelect]);\n\n  return (\n    <div className=\"course-form form-default\">\n      <Row align=\"middle\" className=\"full-width header-table\">\n        <h3>{showTitle()}</h3>\n      </Row>\n\n      <Card>\n        <Form\n          form={form}\n          colon={false}\n          layout=\"vertical\"\n          initialValues={state ? initialValues : {}}\n          onFinish={handleFinish}\n          autoComplete=\"off\"\n        >\n          <Row gutter={[48, 8]}>{renderFieldForm(dataForm)}</Row>\n          <Row className=\"flex jc-center gap-20 mt-15 full-width\">\n            <Button\n              type=\"default\"\n              className=\"fw-600 cancel-btn\"\n              onClick={handleCancel}\n            >\n              {t(\"form.btnBack\")}\n            </Button>\n            <Button\n              loading={loading}\n              disabled={loading}\n              className=\"fw-600 submit-btn\"\n              type=\"primary\"\n              htmlType=\"submit\"\n            >\n              {state ? t(\"form.btnEdit\") : t(\"form.btnCreate\")}\n            </Button>\n          </Row>\n        </Form>\n      </Card>\n    </div>\n  );\n}\n\nLevelForm.propTypes = {};\n\nexport default LevelForm;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}