{"ast":null,"code":"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Radio } from \"antd\";\nfunction MyRadio(_ref) {\n  let {\n    label,\n    name,\n    radioValues,\n    rules,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Form.Item, {\n    label: label,\n    name: name,\n    rules: rules\n  }, /*#__PURE__*/React.createElement(Radio.Group, {\n    onChange: onChange\n  }, radioValues.map(radio => /*#__PURE__*/React.createElement(Radio, {\n    key: radio.key,\n    value: radio.value\n  }, radio.label))));\n}\n_c = MyRadio;\nMyRadio.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  rules: PropTypes.array,\n  radioValues: PropTypes.array,\n  onChange: PropTypes.func\n};\nexport default MyRadio;\nvar _c;\n$RefreshReg$(_c, \"MyRadio\");","map":{"version":3,"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAElC,SAASC,OAAO,OAAgD;EAAA,IAA/C;IAAEC,KAAK;IAAEC,IAAI;IAAEC,WAAW;IAAEC,KAAK;IAAEC;EAAS,CAAC;EAC5D,oBACET,oBAACE,IAAI,CAACQ,IAAI;IAACL,KAAK,EAAEA,KAAM;IAACC,IAAI,EAAEA,IAAK;IAACE,KAAK,EAAEA;EAAM,gBAChDR,oBAACG,KAAK,CAACQ,KAAK;IAACF,QAAQ,EAAEA;EAAS,GAC7BF,WAAW,CAACK,GAAG,CAAEC,KAAK,iBACrBb,oBAACG,KAAK;IAACW,GAAG,EAAED,KAAK,CAACC,GAAI;IAACC,KAAK,EAAEF,KAAK,CAACE;EAAM,GACvCF,KAAK,CAACR,KAAK,CAEf,CAAC,CACU,CACJ;AAEhB;AAAA,KAZSD,OAAO;AAchBA,OAAO,CAACY,SAAS,GAAG;EAClBX,KAAK,EAAEJ,SAAS,CAACgB,MAAM;EACvBX,IAAI,EAAEL,SAAS,CAACgB,MAAM;EACtBT,KAAK,EAAEP,SAAS,CAACiB,KAAK;EACtBX,WAAW,EAAEN,SAAS,CAACiB,KAAK;EAC5BT,QAAQ,EAAER,SAAS,CAACkB;AACtB,CAAC;AAED,eAAef,OAAO;AAAA;AAAA","names":["React","PropTypes","Form","Radio","MyRadio","label","name","radioValues","rules","onChange","Item","Group","map","radio","key","value","propTypes","string","array","func"],"sources":["/home/huynd/animalwatch_admin/src/components/form/MyRadio.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Radio } from \"antd\";\n\nfunction MyRadio({ label, name, radioValues, rules, onChange }) {\n  return (\n    <Form.Item label={label} name={name} rules={rules}>\n      <Radio.Group onChange={onChange}>\n        {radioValues.map((radio) => (\n          <Radio key={radio.key} value={radio.value}>\n            {radio.label}\n          </Radio>\n        ))}\n      </Radio.Group>\n    </Form.Item>\n  );\n}\n\nMyRadio.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  rules: PropTypes.array,\n  radioValues: PropTypes.array,\n  onChange: PropTypes.func,\n};\n\nexport default MyRadio;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}