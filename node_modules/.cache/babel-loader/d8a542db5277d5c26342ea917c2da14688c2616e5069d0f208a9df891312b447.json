{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Form, Input } from \"antd\";\nfunction MyTextArea(_ref) {\n  let {\n    label,\n    name,\n    placeholder,\n    subLabel = \" \",\n    subMessages,\n    rules,\n    disabled,\n    hideField,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Col, {\n    hidden: hideField\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: name,\n    label: label,\n    rules: rules,\n    className: \"form-item-input\"\n  }, /*#__PURE__*/React.createElement(Input.TextArea, _extends({\n    rows: 5\n  }, props, {\n    disabled: disabled,\n    placeholder: placeholder,\n    autoSize: false\n  }))), subMessages && /*#__PURE__*/React.createElement(Form.Item, {\n    label: subLabel,\n    className: \"sub-mesage\"\n  }, subMessages.map((message, index) => /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-5 fz-12\",\n    key: index\n  }, message))));\n}\n_c = MyTextArea;\nMyTextArea.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n  subLabel: PropTypes.string,\n  subMessages: PropTypes.array,\n  rules: PropTypes.array,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  hideField: PropTypes.bool\n};\nexport default MyTextArea;\nvar _c;\n$RefreshReg$(_c, \"MyTextArea\");","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,GAAG,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAEvC,SAASC,UAAU,OAUhB;EAAA,IAViB;IAClBC,KAAK;IACLC,IAAI;IACJC,WAAW;IACXC,QAAQ,GAAG,GAAG;IACdC,WAAW;IACXC,KAAK;IACLC,QAAQ;IACRC,SAAS;IACT,GAAGC;EACL,CAAC;EACC,oBACEd,oBAACE,GAAG;IAACa,MAAM,EAAEF;EAAU,gBACrBb,oBAACG,IAAI,CAACa,IAAI;IACRT,IAAI,EAAEA,IAAK;IACXD,KAAK,EAAEA,KAAM;IACbK,KAAK,EAAEA,KAAM;IACbM,SAAS,EAAC;EAAiB,gBAE3BjB,oBAACI,KAAK,CAACc,QAAQ;IACbC,IAAI,EAAE;EAAE,GACJL,KAAK;IACTF,QAAQ,EAAEA,QAAS;IACnBJ,WAAW,EAAEA,WAAY;IACzBY,QAAQ,EAAE;EAAM,GAChB,CACQ,EACXV,WAAW,iBACVV,oBAACG,IAAI,CAACa,IAAI;IAACV,KAAK,EAAEG,QAAS;IAACQ,SAAS,EAAC;EAAY,GAC/CP,WAAW,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC9BvB;IAAGiB,SAAS,EAAC,YAAY;IAACO,GAAG,EAAED;EAAM,GAClCD,OAAO,CAEX,CAAC,CAEL,CACG;AAEV;AAAA,KAtCSjB,UAAU;AAwCnBA,UAAU,CAACoB,SAAS,GAAG;EACrBnB,KAAK,EAAEL,SAAS,CAACyB,MAAM;EACvBnB,IAAI,EAAEN,SAAS,CAACyB,MAAM;EACtBlB,WAAW,EAAEP,SAAS,CAACyB,MAAM;EAC7BjB,QAAQ,EAAER,SAAS,CAACyB,MAAM;EAC1BhB,WAAW,EAAET,SAAS,CAAC0B,KAAK;EAC5BhB,KAAK,EAAEV,SAAS,CAAC0B,KAAK;EACtBV,SAAS,EAAEhB,SAAS,CAACyB,MAAM;EAC3Bd,QAAQ,EAAEX,SAAS,CAAC2B,IAAI;EACxBf,SAAS,EAAEZ,SAAS,CAAC2B;AACvB,CAAC;AAED,eAAevB,UAAU;AAAA;AAAA","names":["React","PropTypes","Col","Form","Input","MyTextArea","label","name","placeholder","subLabel","subMessages","rules","disabled","hideField","props","hidden","Item","className","TextArea","rows","autoSize","map","message","index","key","propTypes","string","array","bool"],"sources":["/home/huynd/animalwatch_admin/src/components/form/MyTextArea.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Form, Input } from \"antd\";\n\nfunction MyTextArea({\n  label,\n  name,\n  placeholder,\n  subLabel = \" \",\n  subMessages,\n  rules,\n  disabled,\n  hideField,\n  ...props\n}) {\n  return (\n    <Col hidden={hideField}>\n      <Form.Item\n        name={name}\n        label={label}\n        rules={rules}\n        className=\"form-item-input\"\n      >\n        <Input.TextArea\n          rows={5}\n          {...props}\n          disabled={disabled}\n          placeholder={placeholder}\n          autoSize={false}\n        />\n      </Form.Item>\n      {subMessages && (\n        <Form.Item label={subLabel} className=\"sub-mesage\">\n          {subMessages.map((message, index) => (\n            <p className=\"mt-5 fz-12\" key={index}>\n              {message}\n            </p>\n          ))}\n        </Form.Item>\n      )}\n    </Col>\n  );\n}\n\nMyTextArea.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n  subLabel: PropTypes.string,\n  subMessages: PropTypes.array,\n  rules: PropTypes.array,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  hideField: PropTypes.bool,\n};\n\nexport default MyTextArea;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}