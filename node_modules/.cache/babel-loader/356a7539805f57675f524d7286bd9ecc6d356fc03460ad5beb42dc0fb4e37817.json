{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { MyComponents } from \"@components/form\";\nimport { giftCodeApi } from \"@services/apis/giftcode\";\nimport { validate } from \"@validate/index\";\nimport { Button, Card, Form, Row, message } from \"antd\";\nimport dayjs from \"dayjs\";\nimport { t } from \"i18next\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nfunction GiftCodeForm() {\n  _s();\n  const [form] = Form.useForm();\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = values => {\n    setLoading(true);\n    if (!state) {\n      giftCodeApi.postGiftCode({\n        ...values,\n        quantity: parseInt(values.quantity, 10)\n      }).then(() => {\n        message.success(t(\"managementGiftCode.validate.createSuccess\"));\n        navigate(\"..\");\n      }).catch(() => {\n        message.error(t(\"managementGiftCode.validate.createErr\"));\n      }).finally(() => setLoading(false));\n      return;\n    }\n    giftCodeApi.putGiftCode({\n      giftCodeId: state.id,\n      expirationDate: values.expirationDate\n    }).then(() => {\n      message.success(t(\"managementGiftCode.validate.editSuccess\"));\n      navigate(\"..\");\n    }).catch(err => {\n      message.error(t(\"managementGiftCode.validate.editErr\"));\n      throw new Error(err);\n    }).finally(() => setLoading(false));\n  };\n  const disabledDate = current => {\n    // Can not select days before today and today\n    return current && current < dayjs().endOf(\"day\");\n  };\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    className: \"full-width header-table\"\n  }, /*#__PURE__*/React.createElement(\"h1\", null, state ? t(\"managementGiftCode.editGiftCode\") : t(\"managementGiftCode.createGiftCode\"))), /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"vertical\",\n    colon: false,\n    initialValues: {\n      expirationDate: state !== null && state !== void 0 && state.expirationDate ? dayjs(state === null || state === void 0 ? void 0 : state.expirationDate) : null\n    },\n    onFinish: handleSubmit\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [48, 8]\n  }, !state && /*#__PURE__*/React.createElement(MyComponents.TextField, {\n    name: \"quantity\",\n    label: t(\"managementGiftCode.form.quantity\"),\n    colwidth: 12,\n    onChange: e => validate.numberPreventInput(e.target.value, form, \"quantity\"),\n    rules: [validate.empty(t(\"managementGiftCode.validate.notEmpty\", {\n      fieldName: t(\"managementGiftCode.form.quantity\")\n    })), {\n      required: true,\n      message: \"\"\n    }, {\n      max: 2,\n      message: t(\"validate.maxCharacter\", {\n        number: 2\n      })\n    }],\n    maxLength: 2\n  }), /*#__PURE__*/React.createElement(MyComponents.DatePicker, {\n    name: \"expirationDate\",\n    className: \"full-width\",\n    label: t(\"managementGiftCode.form.expirationDate\"),\n    colwidth: state ? 24 : 12,\n    inputReadOnly: true,\n    disableDate: disabledDate\n  })), /*#__PURE__*/React.createElement(Row, {\n    justify: \"end\",\n    className: \"flex gap-20\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    onClick: () => navigate(\"..\")\n  }, t(\"managementGiftCode.form.btnBack\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    disabled: loading\n  }, state ? t(\"managementGiftCode.form.btnEdit\") : t(\"managementGiftCode.form.btnSubmit\"))))));\n}\n_s(GiftCodeForm, \"C0SRezgbnkWMgh20WPyUzeV7ubA=\", false, function () {\n  return [Form.useForm, useNavigate, useLocation];\n});\n_c = GiftCodeForm;\nGiftCodeForm.propTypes = {};\nexport default GiftCodeForm;\nvar _c;\n$RefreshReg$(_c, \"GiftCodeForm\");","map":{"version":3,"mappings":"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","names":["React","useState","MyComponents","giftCodeApi","validate","Button","Card","Form","Row","message","dayjs","t","useLocation","useNavigate","GiftCodeForm","form","useForm","navigate","state","loading","setLoading","handleSubmit","values","postGiftCode","quantity","parseInt","then","success","catch","error","finally","putGiftCode","giftCodeId","id","expirationDate","err","Error","disabledDate","current","endOf","align","className","layout","colon","initialValues","onFinish","gutter","TextField","name","label","colwidth","onChange","e","numberPreventInput","target","value","rules","empty","fieldName","required","max","number","maxLength","DatePicker","inputReadOnly","disableDate","justify","type","onClick","htmlType","disabled","propTypes"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/giftcode/GiftCodeForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { MyComponents } from \"@components/form\";\r\nimport { giftCodeApi } from \"@services/apis/giftcode\";\r\nimport { validate } from \"@validate/index\";\r\nimport { Button, Card, Form, Row, message } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport { t } from \"i18next\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nfunction GiftCodeForm() {\r\n  const [form] = Form.useForm();\r\n  const navigate = useNavigate();\r\n  const { state } = useLocation();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = (values) => {\r\n    setLoading(true);\r\n    if (!state) {\r\n      giftCodeApi\r\n        .postGiftCode({\r\n          ...values,\r\n          quantity: parseInt(values.quantity, 10),\r\n        })\r\n        .then(() => {\r\n          message.success(t(\"managementGiftCode.validate.createSuccess\"));\r\n          navigate(\"..\");\r\n        })\r\n        .catch(() => {\r\n          message.error(t(\"managementGiftCode.validate.createErr\"));\r\n        })\r\n        .finally(() => setLoading(false));\r\n      return;\r\n    }\r\n    giftCodeApi\r\n      .putGiftCode({\r\n        giftCodeId: state.id,\r\n        expirationDate: values.expirationDate,\r\n      })\r\n      .then(() => {\r\n        message.success(t(\"managementGiftCode.validate.editSuccess\"));\r\n        navigate(\"..\");\r\n      })\r\n      .catch((err) => {\r\n        message.error(t(\"managementGiftCode.validate.editErr\"));\r\n        throw new Error(err);\r\n      })\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    // Can not select days before today and today\r\n    return current && current < dayjs().endOf(\"day\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row align=\"middle\" className=\"full-width header-table\">\r\n        <h1>\r\n          {state\r\n            ? t(\"managementGiftCode.editGiftCode\")\r\n            : t(\"managementGiftCode.createGiftCode\")}\r\n        </h1>\r\n      </Row>\r\n      <Card>\r\n        <Form\r\n          form={form}\r\n          layout=\"vertical\"\r\n          colon={false}\r\n          initialValues={{\r\n            expirationDate: state?.expirationDate\r\n              ? dayjs(state?.expirationDate)\r\n              : null,\r\n          }}\r\n          onFinish={handleSubmit}\r\n        >\r\n          <Row gutter={[48, 8]}>\r\n            {!state && (\r\n              <MyComponents.TextField\r\n                name=\"quantity\"\r\n                label={t(\"managementGiftCode.form.quantity\")}\r\n                colwidth={12}\r\n                onChange={(e) =>\r\n                  validate.numberPreventInput(e.target.value, form, \"quantity\")\r\n                }\r\n                rules={[\r\n                  validate.empty(\r\n                    t(\"managementGiftCode.validate.notEmpty\", {\r\n                      fieldName: t(\"managementGiftCode.form.quantity\"),\r\n                    }),\r\n                  ),\r\n                  {\r\n                    required: true,\r\n                    message: \"\",\r\n                  },\r\n                  {\r\n                    max: 2,\r\n                    message: t(\"validate.maxCharacter\", { number: 2 }),\r\n                  },\r\n                ]}\r\n                maxLength={2}\r\n              />\r\n            )}\r\n\r\n            <MyComponents.DatePicker\r\n              name=\"expirationDate\"\r\n              className=\"full-width\"\r\n              label={t(\"managementGiftCode.form.expirationDate\")}\r\n              colwidth={state ? 24 : 12}\r\n              inputReadOnly\r\n              disableDate={disabledDate}\r\n            />\r\n          </Row>\r\n\r\n          <Row justify=\"end\" className=\"flex gap-20\">\r\n            <Button type=\"default\" onClick={() => navigate(\"..\")}>\r\n              {t(\"managementGiftCode.form.btnBack\")}\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              loading={loading}\r\n              disabled={loading}\r\n            >\r\n              {state\r\n                ? t(\"managementGiftCode.form.btnEdit\")\r\n                : t(\"managementGiftCode.form.btnSubmit\")}\r\n            </Button>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nGiftCodeForm.propTypes = {};\r\n\r\nexport default GiftCodeForm;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}