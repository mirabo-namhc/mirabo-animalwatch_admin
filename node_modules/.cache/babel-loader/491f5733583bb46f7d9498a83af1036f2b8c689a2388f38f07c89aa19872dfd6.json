{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AvtDefault from \"@assets/imgs/avt-default.jpg\";\nimport { notificationApi } from \"@services/apis/notification\";\nimport { message } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { ChatList } from \"react-chat-elements\";\nimport { useParams } from \"react-router-dom\";\nfunction ChatListData(props) {\n  _s();\n  const {\n    listChat,\n    openChatRep,\n    newMess\n  } = props;\n  const [dataSource, setDataSource] = useState();\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(1);\n  const params = useParams();\n  const convertData = list => {\n    var _list$data;\n    const result = list === null || list === void 0 ? void 0 : (_list$data = list.data) === null || _list$data === void 0 ? void 0 : _list$data.map(item => {\n      var _item$user, _item$user2;\n      return {\n        avatar: (item === null || item === void 0 ? void 0 : (_item$user = item.user) === null || _item$user === void 0 ? void 0 : _item$user.avatar) === null ? AvtDefault : `https://dev01jfjfbccblob01.blob.core.windows.net/fileupload/${item === null || item === void 0 ? void 0 : (_item$user2 = item.user) === null || _item$user2 === void 0 ? void 0 : _item$user2.avatar}/original.jpg`,\n        title: item.user.fullname,\n        subtitle: item.content,\n        date: item.createdAt,\n        id: item.user.id\n      };\n    });\n    return result;\n  };\n  const handleReplaceElm = (arr, object, newObject) => {\n    const i = arr.findIndex(x => x.id === object.id);\n    arr[i] = {\n      ...arr[i],\n      subtitle: newObject === null || newObject === void 0 ? void 0 : newObject.text,\n      date: newObject === null || newObject === void 0 ? void 0 : newObject.date\n    };\n    return arr;\n  };\n  const getListChat = async paging => {\n    const payload = {\n      ...paging,\n      notificationId: params.id\n    };\n    const res = await notificationApi.getNotificationChatList(payload);\n    const result = convertData(res);\n    setDataSource(result);\n    return result;\n  };\n  const handleLoadMore = async () => {\n    if (!hasMore) return; // Không còn dữ liệu để tải\n    try {\n      const newData = await getListChat({\n        page,\n        limit: 10\n      });\n      setPage(page + 1);\n      setDataSource([...dataSource, ...newData]);\n      setHasMore(newData.length > 0);\n    } catch (error) {\n      message.error(error);\n    }\n  };\n  const handleScroll = e => {\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight\n    } = e.target;\n    if (scrollHeight - scrollTop === clientHeight) {\n      handleLoadMore();\n    }\n  };\n  useEffect(() => {\n    if (listChat) {\n      setPage(page + 1);\n      const data = convertData(listChat);\n      // fake data source\n      // const dataFake = [...data, ...data];\n      // setDataSource(dataFake);\n      setDataSource(data);\n    }\n    getListChat();\n  }, []);\n  useEffect(() => {\n    if (newMess) {\n      const updateChats = handleReplaceElm(dataSource || [], newMess, newMess);\n      setDataSource(updateChats);\n    }\n  }, [newMess]);\n  return /*#__PURE__*/React.createElement(\"div\", null, dataSource && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-list-div\",\n    onScroll: handleScroll\n  }, /*#__PURE__*/React.createElement(ChatList, {\n    className: \"chat-list\",\n    onClick: _ref => {\n      let {\n        ...item\n      } = _ref;\n      return openChatRep(item);\n    },\n    dataSource: dataSource,\n    onScroll: handleScroll\n  })));\n}\n_s(ChatListData, \"4gqHxWWzZw03Bwmxf0lmD2SJ1EM=\", false, function () {\n  return [useParams];\n});\n_c = ChatListData;\nChatListData.propTypes = {\n  listChat: PropTypes.object,\n  openChatRep: PropTypes.func,\n  newMess: PropTypes.object\n};\nexport default ChatListData;\nvar _c;\n$RefreshReg$(_c, \"ChatListData\");","map":{"version":3,"mappings":"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","names":["React","useEffect","useState","AvtDefault","notificationApi","message","PropTypes","ChatList","useParams","ChatListData","props","listChat","openChatRep","newMess","dataSource","setDataSource","hasMore","setHasMore","page","setPage","params","convertData","list","result","data","map","item","avatar","user","title","fullname","subtitle","content","date","createdAt","id","handleReplaceElm","arr","object","newObject","i","findIndex","x","text","getListChat","paging","payload","notificationId","res","getNotificationChatList","handleLoadMore","newData","limit","length","error","handleScroll","e","scrollTop","clientHeight","scrollHeight","target","updateChats","className","onScroll","onClick","_ref","propTypes","func"],"sources":["/home/huynd/animalwatch_admin/src/pages/notification/ChatListData.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AvtDefault from \"@assets/imgs/avt-default.jpg\";\r\nimport { notificationApi } from \"@services/apis/notification\";\r\nimport { message } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ChatList } from \"react-chat-elements\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction ChatListData(props) {\r\n  const { listChat, openChatRep, newMess } = props;\r\n  const [dataSource, setDataSource] = useState();\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const params = useParams();\r\n\r\n  const convertData = (list) => {\r\n    const result = list?.data?.map((item) => {\r\n      return {\r\n        avatar:\r\n          item?.user?.avatar === null\r\n            ? AvtDefault\r\n            : `https://dev01jfjfbccblob01.blob.core.windows.net/fileupload/${item?.user?.avatar}/original.jpg`,\r\n        title: item.user.fullname,\r\n        subtitle: item.content,\r\n        date: item.createdAt,\r\n        id: item.user.id,\r\n      };\r\n    });\r\n\r\n    return result;\r\n  };\r\n\r\n  const handleReplaceElm = (arr, object, newObject) => {\r\n    const i = arr.findIndex((x) => x.id === object.id);\r\n    arr[i] = {\r\n      ...arr[i],\r\n      subtitle: newObject?.text,\r\n      date: newObject?.date,\r\n    };\r\n    return arr;\r\n  };\r\n\r\n  const getListChat = async (paging) => {\r\n    const payload = {\r\n      ...paging,\r\n      notificationId: params.id,\r\n    };\r\n    const res = await notificationApi.getNotificationChatList(payload);\r\n    const result = convertData(res);\r\n    setDataSource(result);\r\n    return result;\r\n  };\r\n\r\n  const handleLoadMore = async () => {\r\n    if (!hasMore) return; // Không còn dữ liệu để tải\r\n    try {\r\n      const newData = await getListChat({ page, limit: 10 });\r\n      setPage(page + 1);\r\n      setDataSource([...dataSource, ...newData]);\r\n      setHasMore(newData.length > 0);\r\n    } catch (error) {\r\n      message.error(error);\r\n    }\r\n  };\r\n\r\n  const handleScroll = (e) => {\r\n    const { scrollTop, clientHeight, scrollHeight } = e.target;\r\n    if (scrollHeight - scrollTop === clientHeight) {\r\n      handleLoadMore();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (listChat) {\r\n      setPage(page + 1);\r\n      const data = convertData(listChat);\r\n      // fake data source\r\n      // const dataFake = [...data, ...data];\r\n      // setDataSource(dataFake);\r\n      setDataSource(data);\r\n    }\r\n    getListChat();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (newMess) {\r\n      const updateChats = handleReplaceElm(dataSource || [], newMess, newMess);\r\n\r\n      setDataSource(updateChats);\r\n    }\r\n  }, [newMess]);\r\n\r\n  return (\r\n    <div>\r\n      {dataSource && (\r\n        <div className=\"chat-list-div\" onScroll={handleScroll}>\r\n          <ChatList\r\n            className=\"chat-list\"\r\n            onClick={({ ...item }) => openChatRep(item)}\r\n            dataSource={dataSource}\r\n            onScroll={handleScroll}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nChatListData.propTypes = {\r\n  listChat: PropTypes.object,\r\n  openChatRep: PropTypes.func,\r\n  newMess: PropTypes.object,\r\n};\r\n\r\nexport default ChatListData;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}