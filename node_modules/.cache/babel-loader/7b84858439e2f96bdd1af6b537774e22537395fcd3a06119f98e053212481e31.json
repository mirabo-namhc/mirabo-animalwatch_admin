{"ast":null,"code":"import React from \"react\";\nimport { Button, Card, Radio, Space } from \"antd\";\nimport { t } from \"i18next\";\nimport PropTypes from \"prop-types\";\nfunction FilterDropdown(_ref) {\n  let {\n    field,\n    items,\n    onSetPagination,\n    close,\n    confirm,\n    selectedKeys,\n    setSelectedKeys,\n    clearFilters\n  } = _ref;\n  const handleOk = () => {\n    onSetPagination(curState => ({\n      ...curState,\n      [field]: selectedKeys\n    }));\n    confirm();\n    close();\n  };\n  const resetFilter = () => {\n    onSetPagination(curState => ({\n      ...curState,\n      [field]: null\n    }));\n    clearFilters();\n    close();\n  };\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"card-dropdown\",\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"text\",\n      className: \"full-width\",\n      onClick: resetFilter,\n      disabled: !selectedKeys[0]\n    }, t(\"events.list.btnReset\")), /*#__PURE__*/React.createElement(Button, {\n      type: \"text\",\n      className: \"full-width\",\n      onClick: handleOk\n    }, \"Ok\")]\n  }, /*#__PURE__*/React.createElement(Radio.Group, {\n    onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n    value: selectedKeys[0]\n  }, /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\"\n  }, items.map(type => /*#__PURE__*/React.createElement(Radio, {\n    value: type.value,\n    key: type.key\n  }, type.label)))));\n}\n_c = FilterDropdown;\nFilterDropdown.propTypes = {\n  field: PropTypes.string,\n  items: PropTypes.array,\n  onSetPagination: PropTypes.func,\n  close: PropTypes.func,\n  confirm: PropTypes.func,\n  setSelectedKeys: PropTypes.func,\n  selectedKeys: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  clearFilters: PropTypes.func\n};\nexport default FilterDropdown;\nvar _c;\n$RefreshReg$(_c, \"FilterDropdown\");","map":{"version":3,"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,MAAM;AACjD,SAASC,CAAC,QAAQ,SAAS;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,cAAc,OASpB;EAAA,IATqB;IACtBC,KAAK;IACLC,KAAK;IACLC,eAAe;IACfC,KAAK;IACLC,OAAO;IACPC,YAAY;IACZC,eAAe;IACfC;EACF,CAAC;EACC,MAAMC,QAAQ,GAAG,MAAM;IACrBN,eAAe,CAAEO,QAAQ,KAAM;MAC7B,GAAGA,QAAQ;MACX,CAACT,KAAK,GAAGK;IACX,CAAC,CAAC,CAAC;IACHD,OAAO,EAAE;IACTD,KAAK,EAAE;EACT,CAAC;EAED,MAAMO,WAAW,GAAG,MAAM;IACxBR,eAAe,CAAEO,QAAQ,KAAM;MAC7B,GAAGA,QAAQ;MACX,CAACT,KAAK,GAAG;IACX,CAAC,CAAC,CAAC;IACHO,YAAY,EAAE;IACdJ,KAAK,EAAE;EACT,CAAC;EAED,oBACEX,oBAACE,IAAI;IACHiB,SAAS,EAAC,eAAe;IACzBC,OAAO,EAAE,cACPpB,oBAACC,MAAM;MACLoB,IAAI,EAAC,MAAM;MACXF,SAAS,EAAC,YAAY;MACtBG,OAAO,EAAEJ,WAAY;MACrBK,QAAQ,EAAE,CAACV,YAAY,CAAC,CAAC;IAAE,GAE1BR,CAAC,CAAC,sBAAsB,CAAC,CACnB,eACTL,oBAACC,MAAM;MAACoB,IAAI,EAAC,MAAM;MAACF,SAAS,EAAC,YAAY;MAACG,OAAO,EAAEN;IAAS,QAEpD;EACT,gBAEFhB,oBAACG,KAAK,CAACqB,KAAK;IACVC,QAAQ,EAAGC,CAAC,IACVZ,eAAe,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,GAAG,CAACF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,EAAE,CACvD;IACDA,KAAK,EAAEf,YAAY,CAAC,CAAC;EAAE,gBAEvBb,oBAACI,KAAK;IAACyB,SAAS,EAAC;EAAU,GACxBpB,KAAK,CAACqB,GAAG,CAAET,IAAI,iBACdrB,oBAACG,KAAK;IAACyB,KAAK,EAAEP,IAAI,CAACO,KAAM;IAACG,GAAG,EAAEV,IAAI,CAACU;EAAI,GACrCV,IAAI,CAACW,KAAK,CAEd,CAAC,CACI,CACI,CACT;AAEX;AAAA,KA7DSzB,cAAc;AA+DvBA,cAAc,CAAC0B,SAAS,GAAG;EACzBzB,KAAK,EAAEF,SAAS,CAAC4B,MAAM;EACvBzB,KAAK,EAAEH,SAAS,CAAC6B,KAAK;EACtBzB,eAAe,EAAEJ,SAAS,CAAC8B,IAAI;EAC/BzB,KAAK,EAAEL,SAAS,CAAC8B,IAAI;EACrBxB,OAAO,EAAEN,SAAS,CAAC8B,IAAI;EACvBtB,eAAe,EAAER,SAAS,CAAC8B,IAAI;EAC/BvB,YAAY,EAAEP,SAAS,CAAC+B,SAAS,CAAC,CAAC/B,SAAS,CAAC4B,MAAM,EAAE5B,SAAS,CAAC6B,KAAK,CAAC,CAAC;EACtEpB,YAAY,EAAET,SAAS,CAAC8B;AAC1B,CAAC;AAED,eAAe7B,cAAc;AAAA;AAAA","names":["React","Button","Card","Radio","Space","t","PropTypes","FilterDropdown","field","items","onSetPagination","close","confirm","selectedKeys","setSelectedKeys","clearFilters","handleOk","curState","resetFilter","className","actions","type","onClick","disabled","Group","onChange","e","target","value","direction","map","key","label","propTypes","string","array","func","oneOfType"],"sources":["/home/huynd/animalwatch_admin/src/components/table/PopupFilter.jsx"],"sourcesContent":["import React from \"react\";\nimport { Button, Card, Radio, Space } from \"antd\";\nimport { t } from \"i18next\";\nimport PropTypes from \"prop-types\";\n\nfunction FilterDropdown({\n  field,\n  items,\n  onSetPagination,\n  close,\n  confirm,\n  selectedKeys,\n  setSelectedKeys,\n  clearFilters,\n}) {\n  const handleOk = () => {\n    onSetPagination((curState) => ({\n      ...curState,\n      [field]: selectedKeys,\n    }));\n    confirm();\n    close();\n  };\n\n  const resetFilter = () => {\n    onSetPagination((curState) => ({\n      ...curState,\n      [field]: null,\n    }));\n    clearFilters();\n    close();\n  };\n\n  return (\n    <Card\n      className=\"card-dropdown\"\n      actions={[\n        <Button\n          type=\"text\"\n          className=\"full-width\"\n          onClick={resetFilter}\n          disabled={!selectedKeys[0]}\n        >\n          {t(\"events.list.btnReset\")}\n        </Button>,\n        <Button type=\"text\" className=\"full-width\" onClick={handleOk}>\n          Ok\n        </Button>,\n      ]}\n    >\n      <Radio.Group\n        onChange={(e) =>\n          setSelectedKeys(e.target.value ? [e.target.value] : [])\n        }\n        value={selectedKeys[0]}\n      >\n        <Space direction=\"vertical\">\n          {items.map((type) => (\n            <Radio value={type.value} key={type.key}>\n              {type.label}\n            </Radio>\n          ))}\n        </Space>\n      </Radio.Group>\n    </Card>\n  );\n}\n\nFilterDropdown.propTypes = {\n  field: PropTypes.string,\n  items: PropTypes.array,\n  onSetPagination: PropTypes.func,\n  close: PropTypes.func,\n  confirm: PropTypes.func,\n  setSelectedKeys: PropTypes.func,\n  selectedKeys: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  clearFilters: PropTypes.func,\n};\n\nexport default FilterDropdown;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}