{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { notificationApi } from \"@services/apis/notification\";\nimport PropTypes from \"prop-types\";\nimport { useParams } from \"react-router-dom\";\nimport NotiDetailData from \"./NotiDetailData\";\nimport NotificationForm from \"./NotificationForm\";\nfunction NotificationDetail(props) {\n  _s();\n  const {\n    isEditMode\n  } = props;\n  const params = useParams();\n  const [listChat, setListChat] = useState();\n  const [value, setValue] = useState();\n  const [isEditNotification, setIsEditNotification] = useState(false);\n  const getListChat = async () => {\n    const conditions = {\n      notificationId: params.id\n    };\n    const res = await notificationApi.getNotificationChatList(conditions);\n    setListChat(res);\n  };\n  const showEditForm = () => {\n    setIsEditNotification(true);\n  };\n  useEffect(() => {\n    setIsEditNotification(false);\n    getListChat();\n  }, [value]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notification\"\n  }, isEditNotification ? /*#__PURE__*/React.createElement(NotificationForm, {\n    isCreate: false,\n    data: listChat\n  }) : listChat && /*#__PURE__*/React.createElement(NotiDetailData, {\n    showEditForm: showEditForm,\n    listChat: listChat\n  }));\n}\n_s(NotificationDetail, \"JzmLDrrgp9+06nzQZ8BZbjTEYEE=\", false, function () {\n  return [useParams];\n});\n_c = NotificationDetail;\nNotificationDetail.propTypes = {\n  isEditMode: PropTypes.bool\n};\nexport default NotificationDetail;\nvar _c;\n$RefreshReg$(_c, \"NotificationDetail\");","map":{"version":3,"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,gBAAgB,MAAM,oBAAoB;AAEjD,SAASC,kBAAkB,CAACC,KAAK,EAAE;EAAA;EACjC,MAAM;IAAEC;EAAW,CAAC,GAAGD,KAAK;EAC5B,MAAME,MAAM,GAAGN,SAAS,EAAE;EAC1B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,EAAE;EAC1C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,EAAE;EACpC,MAAM,CAACc,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAMgB,WAAW,GAAG,YAAY;IAC9B,MAAMC,UAAU,GAAG;MACjBC,cAAc,EAAET,MAAM,CAACU;IACzB,CAAC;IACD,MAAMC,GAAG,GAAG,MAAMnB,eAAe,CAACoB,uBAAuB,CAACJ,UAAU,CAAC;IACrEN,WAAW,CAACS,GAAG,CAAC;EAClB,CAAC;EAED,MAAME,YAAY,GAAG,MAAM;IACzBP,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdgB,qBAAqB,CAAC,KAAK,CAAC;IAC5BC,WAAW,EAAE;EACf,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EACX,oBACEd;IAAKyB,SAAS,EAAC;EAAc,GAC1BT,kBAAkB,gBACjBhB,oBAACO,gBAAgB;IAACmB,QAAQ,EAAE,KAAM;IAACC,IAAI,EAAEf;EAAS,EAAG,GAErDA,QAAQ,iBACNZ,oBAACM,cAAc;IAACkB,YAAY,EAAEA,YAAa;IAACZ,QAAQ,EAAEA;EAAS,EAElE,CACG;AAEV;AAAA,GAjCSJ,kBAAkB;EAAA,QAEVH,SAAS;AAAA;AAAA,KAFjBG,kBAAkB;AAkC3BA,kBAAkB,CAACoB,SAAS,GAAG;EAC7BlB,UAAU,EAAEN,SAAS,CAACyB;AACxB,CAAC;AAED,eAAerB,kBAAkB;AAAA;AAAA","names":["React","useEffect","useState","notificationApi","PropTypes","useParams","NotiDetailData","NotificationForm","NotificationDetail","props","isEditMode","params","listChat","setListChat","value","setValue","isEditNotification","setIsEditNotification","getListChat","conditions","notificationId","id","res","getNotificationChatList","showEditForm","className","isCreate","data","propTypes","bool"],"sources":["/home/huynd/animalwatch_admin/src/pages/notification/NotificationDetail.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { notificationApi } from \"@services/apis/notification\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NotiDetailData from \"./NotiDetailData\";\r\nimport NotificationForm from \"./NotificationForm\";\r\n\r\nfunction NotificationDetail(props) {\r\n  const { isEditMode } = props;\r\n  const params = useParams();\r\n  const [listChat, setListChat] = useState();\r\n  const [value, setValue] = useState();\r\n  const [isEditNotification, setIsEditNotification] = useState(false);\r\n  const getListChat = async () => {\r\n    const conditions = {\r\n      notificationId: params.id,\r\n    };\r\n    const res = await notificationApi.getNotificationChatList(conditions);\r\n    setListChat(res);\r\n  };\r\n\r\n  const showEditForm = () => {\r\n    setIsEditNotification(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsEditNotification(false);\r\n    getListChat();\r\n  }, [value]);\r\n  return (\r\n    <div className=\"notification\">\r\n      {isEditNotification ? (\r\n        <NotificationForm isCreate={false} data={listChat} />\r\n      ) : (\r\n        listChat && (\r\n          <NotiDetailData showEditForm={showEditForm} listChat={listChat} />\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nNotificationDetail.propTypes = {\r\n  isEditMode: PropTypes.bool,\r\n};\r\n\r\nexport default NotificationDetail;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}