{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DownloadOutlined, ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation } from \"react-router-dom\";\nimport { Avatar, Button, Modal, Tag } from \"antd\";\nimport ComTable from \"@components/common/ComTable\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport { eventApi } from \"@services/apis/eventApi\";\nimport { IMAGE_URL } from \"@common/config/endpoint\";\nimport { headerCsvUserJoin } from \"@common/constant/eventConst\";\nimport { formatDateTimeTable } from \"@common/utils/dateHelper\";\nimport { DATE_FORMAT_DISPLAY } from \"@common/constant/date\";\nimport { exportCSVFile, formateDataCsvUserJoin } from \"@common/utils/csv\";\nfunction EventUserJoin() {\n  _s();\n  var _value$data3;\n  const location = useLocation();\n  const {\n    t\n  } = useTranslation();\n  const {\n    state\n  } = location;\n  const [refetch, setRefetch] = useState(\"\");\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const isDrawEvent = state.type === 1;\n  const propsBtnAdd = {\n    type: \"primary\",\n    disabled: Boolean(!selectedRowKeys.length)\n  };\n  const {\n    loading,\n    value\n  } = useFetch(() => eventApi.getUsersJoinEvent(state === null || state === void 0 ? void 0 : state.id), [state === null || state === void 0 ? void 0 : state.id, refetch]);\n  const onSelectChange = newSelectedRowKeys => {\n    setSelectedRowKeys(newSelectedRowKeys);\n  };\n  const handleJoinUser = () => {\n    const payload = {\n      id: state === null || state === void 0 ? void 0 : state.id,\n      listUserEventId: selectedRowKeys\n    };\n    eventApi.potUserEventJoin(payload).then(() => {\n      setSelectedRowKeys([]);\n      setRefetch(`updateStatus-${Math.random(1 * 100)}`);\n    }).catch(err => console.log(err));\n  };\n  const handleDownloadCsv = () => {\n    var _value$data;\n    // filter user winPrize\n    const fileName = `${state === null || state === void 0 ? void 0 : state.title} ${t(\"userJoined\")}`;\n    const formatUserWinPrize = value === null || value === void 0 ? void 0 : (_value$data = value.data) === null || _value$data === void 0 ? void 0 : _value$data.filter(user => user === null || user === void 0 ? void 0 : user.status);\n    const dataFormation = formateDataCsvUserJoin(formatUserWinPrize, isDrawEvent);\n    const {\n      status,\n      ...rest\n    } = headerCsvUserJoin;\n    exportCSVFile(isDrawEvent ? headerCsvUserJoin : rest, dataFormation, fileName);\n  };\n  const confirm = () => {\n    Modal.confirm({\n      width: 500,\n      icon: /*#__PURE__*/React.createElement(ExclamationCircleOutlined, null),\n      centered: true,\n      content: t(\"events.modal.textConfirmJoinEvent\"),\n      okText: t(\"events.modal.textYes\"),\n      cancelText: t(\"events.modal.textNo\"),\n      onOk: handleJoinUser\n    });\n  };\n  const downloadCsv = () => {\n    var _value$data2;\n    return /*#__PURE__*/React.createElement(Button, {\n      className: \"ml-5\",\n      icon: /*#__PURE__*/React.createElement(DownloadOutlined, null),\n      disabled: !(value !== null && value !== void 0 && (_value$data2 = value.data) !== null && _value$data2 !== void 0 && _value$data2.length),\n      onClick: handleDownloadCsv\n    }, \"CSV\");\n  };\n  const rowSelection = {\n    selectedRowKeys,\n    preserveSelectedRowKeys: true,\n    onChange: onSelectChange,\n    getCheckboxProps: record => {\n      const rowIndex = value.data.filter(item => item.status);\n      return {\n        disabled: rowIndex.includes(record)\n      };\n    }\n  };\n  const columns = [{\n    title: \"ID\",\n    dataIndex: \"user\",\n    align: \"center\",\n    width: 100,\n    render: user => /*#__PURE__*/React.createElement(\"span\", null, user === null || user === void 0 ? void 0 : user.id)\n  }, {\n    title: t(\"events.list.avatar\"),\n    dataIndex: \"user\",\n    align: \"center\",\n    render: user => /*#__PURE__*/React.createElement(Avatar, {\n      src: `${IMAGE_URL}${user === null || user === void 0 ? void 0 : user.avatar}/original.jpg`\n    })\n  }, {\n    title: t(\"events.list.userName\"),\n    dataIndex: \"user\",\n    align: \"center\",\n    render: user => /*#__PURE__*/React.createElement(\"span\", null, user === null || user === void 0 ? void 0 : user.username)\n  }, {\n    title: t(\"events.list.fullName\"),\n    dataIndex: \"fullName\",\n    align: \"center\",\n    width: 300\n  }, {\n    title: t(\"events.list.email\"),\n    dataIndex: \"email\",\n    align: \"center\"\n  }, {\n    title: t(\"events.list.phoneNumber\"),\n    dataIndex: \"phoneNumber\",\n    align: \"center\"\n  }, {\n    title: t(\"events.list.address\"),\n    dataIndex: \"address\",\n    align: \"center\"\n  }, {\n    title: t(\"events.list.dateOfBirth\"),\n    dataIndex: \"birthday\",\n    align: \"center\",\n    render: birthday => /*#__PURE__*/React.createElement(\"span\", null, formatDateTimeTable(birthday, DATE_FORMAT_DISPLAY))\n  }, {\n    title: t(\"events.list.timesUserJoined\"),\n    dataIndex: \"eventJoineds\",\n    align: \"center\"\n  }, {\n    title: t(\"events.list.winPrize\"),\n    dataIndex: \"status\",\n    align: \"center\",\n    hidden: !isDrawEvent,\n    render: sts => /*#__PURE__*/React.createElement(Tag, {\n      color: sts ? \"gold\" : \"default\"\n    }, sts ? t(\"events.list.winPrize\") : t(\"events.list.noPrize\"))\n  }].filter(col => !col.hidden);\n  return /*#__PURE__*/React.createElement(ComTable, {\n    title: `${t(\"events.userJoinTitle\")}${value === null || value === void 0 ? void 0 : (_value$data3 = value.data) === null || _value$data3 === void 0 ? void 0 : _value$data3.length}`,\n    loading: loading,\n    columns: columns,\n    rowSelection: rowSelection,\n    iconAdd: t(\"events.list.btnWinPrize\"),\n    propsBtnAdd: propsBtnAdd,\n    maxWidth: 1500,\n    data: (value === null || value === void 0 ? void 0 : value.data) || [],\n    pagination: false,\n    onAddTable: isDrawEvent ? confirm : null,\n    groupsBtn: downloadCsv\n  });\n}\n_s(EventUserJoin, \"Ab74C228GyIHzP5vsX104Swa93o=\", false, function () {\n  return [useLocation, useTranslation, useFetch];\n});\n_c = EventUserJoin;\nEventUserJoin.propTypes = {};\nexport default EventUserJoin;\nvar _c;\n$RefreshReg$(_c, \"EventUserJoin\");","map":{"version":3,"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,gBAAgB,EAAEC,yBAAyB,QAAQ,mBAAmB;AAC/E,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,GAAG,QAAQ,MAAM;AAEjD,OAAOC,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,aAAa,EAAEC,sBAAsB,QAAQ,mBAAmB;AAEzE,SAASC,aAAa,GAAG;EAAA;EAAA;EACvB,MAAMC,QAAQ,GAAGf,WAAW,EAAE;EAC9B,MAAM;IAAEgB;EAAE,CAAC,GAAGjB,cAAc,EAAE;EAC9B,MAAM;IAAEkB;EAAM,CAAC,GAAGF,QAAQ;EAE1B,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACwB,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM0B,WAAW,GAAGL,KAAK,CAACM,IAAI,KAAK,CAAC;EAEpC,MAAMC,WAAW,GAAG;IAClBD,IAAI,EAAE,SAAS;IACfE,QAAQ,EAAEC,OAAO,CAAC,CAACN,eAAe,CAACO,MAAM;EAC3C,CAAC;EAED,MAAM;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGvB,QAAQ,CACjC,MAAMC,QAAQ,CAACuB,iBAAiB,CAACb,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEc,EAAE,CAAC,EAC3C,CAACd,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEc,EAAE,EAAEb,OAAO,CAAC,CACrB;EAED,MAAMc,cAAc,GAAIC,kBAAkB,IAAK;IAC7CZ,kBAAkB,CAACY,kBAAkB,CAAC;EACxC,CAAC;EAED,MAAMC,cAAc,GAAG,MAAM;IAC3B,MAAMC,OAAO,GAAG;MACdJ,EAAE,EAAEd,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEc,EAAE;MACbK,eAAe,EAAEhB;IACnB,CAAC;IAEDb,QAAQ,CACL8B,gBAAgB,CAACF,OAAO,CAAC,CACzBG,IAAI,CAAC,MAAM;MACVjB,kBAAkB,CAAC,EAAE,CAAC;MACtBF,UAAU,CAAE,gBAAeoB,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAE,EAAC,CAAC;IACpD,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,MAAMG,iBAAiB,GAAG,MAAM;IAAA;IAC9B;IACA,MAAMC,QAAQ,GAAI,GAAE7B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAE8B,KAAM,IAAG/B,CAAC,CAAC,YAAY,CAAE,EAAC;IACrD,MAAMgC,kBAAkB,GAAGnB,KAAK,aAALA,KAAK,sCAALA,KAAK,CAAEoB,IAAI,gDAAXpB,YAAaqB,MAAM,CAAEC,IAAI,IAAKA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,MAAM,CAAC;IACtE,MAAMC,aAAa,GAAGxC,sBAAsB,CAC1CmC,kBAAkB,EAClB1B,WAAW,CACZ;IACD,MAAM;MAAE8B,MAAM;MAAE,GAAGE;IAAK,CAAC,GAAG7C,iBAAiB;IAE7CG,aAAa,CACXU,WAAW,GAAGb,iBAAiB,GAAG6C,IAAI,EACtCD,aAAa,EACbP,QAAQ,CACT;EACH,CAAC;EAED,MAAMS,OAAO,GAAG,MAAM;IACpBpD,KAAK,CAACoD,OAAO,CAAC;MACZC,KAAK,EAAE,GAAG;MACVC,IAAI,eAAE9D,oBAACG,yBAAyB,OAAG;MACnC4D,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE3C,CAAC,CAAC,mCAAmC,CAAC;MAC/C4C,MAAM,EAAE5C,CAAC,CAAC,sBAAsB,CAAC;MACjC6C,UAAU,EAAE7C,CAAC,CAAC,qBAAqB,CAAC;MACpC8C,IAAI,EAAE5B;IACR,CAAC,CAAC;EACJ,CAAC;EAED,MAAM6B,WAAW,GAAG,MAAM;IAAA;IACxB,oBACEpE,oBAACO,MAAM;MACL8D,SAAS,EAAC,MAAM;MAChBP,IAAI,eAAE9D,oBAACE,gBAAgB,OAAI;MAC3B4B,QAAQ,EAAE,EAACI,KAAK,aAALA,KAAK,+BAALA,KAAK,CAAEoB,IAAI,yCAAXpB,aAAaF,MAAO;MAC/BsC,OAAO,EAAEpB;IAAkB,SAGpB;EAEb,CAAC;EAED,MAAMqB,YAAY,GAAG;IACnB9C,eAAe;IACf+C,uBAAuB,EAAE,IAAI;IAC7BC,QAAQ,EAAEpC,cAAc;IACxBqC,gBAAgB,EAAGC,MAAM,IAAK;MAC5B,MAAMC,QAAQ,GAAG1C,KAAK,CAACoB,IAAI,CAACC,MAAM,CAAEsB,IAAI,IAAKA,IAAI,CAACpB,MAAM,CAAC;MAEzD,OAAO;QACL3B,QAAQ,EAAE8C,QAAQ,CAACE,QAAQ,CAACH,MAAM;MACpC,CAAC;IACH;EACF,CAAC;EAED,MAAMI,OAAO,GAAG,CACd;IACE3B,KAAK,EAAE,IAAI;IACX4B,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE,QAAQ;IACfpB,KAAK,EAAE,GAAG;IACVqB,MAAM,EAAG1B,IAAI,iBAAKxD,kCAAOwD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEpB,EAAE;EACnC,CAAC,EACD;IACEgB,KAAK,EAAE/B,CAAC,CAAC,oBAAoB,CAAC;IAC9B2D,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE,QAAQ;IACfC,MAAM,EAAG1B,IAAI,iBACXxD,oBAACM,MAAM;MAAC6E,GAAG,EAAG,GAAEtE,SAAU,GAAE2C,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE4B,MAAO;IAAe;EAE5D,CAAC,EACD;IACEhC,KAAK,EAAE/B,CAAC,CAAC,sBAAsB,CAAC;IAChC2D,SAAS,EAAE,MAAM;IACjBC,KAAK,EAAE,QAAQ;IACfC,MAAM,EAAG1B,IAAI,iBAAKxD,kCAAOwD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE6B,QAAQ;EACzC,CAAC,EACD;IACEjC,KAAK,EAAE/B,CAAC,CAAC,sBAAsB,CAAC;IAChC2D,SAAS,EAAE,UAAU;IACrBC,KAAK,EAAE,QAAQ;IACfpB,KAAK,EAAE;EACT,CAAC,EACD;IACET,KAAK,EAAE/B,CAAC,CAAC,mBAAmB,CAAC;IAC7B2D,SAAS,EAAE,OAAO;IAClBC,KAAK,EAAE;EACT,CAAC,EACD;IACE7B,KAAK,EAAE/B,CAAC,CAAC,yBAAyB,CAAC;IACnC2D,SAAS,EAAE,aAAa;IACxBC,KAAK,EAAE;EACT,CAAC,EACD;IACE7B,KAAK,EAAE/B,CAAC,CAAC,qBAAqB,CAAC;IAC/B2D,SAAS,EAAE,SAAS;IACpBC,KAAK,EAAE;EACT,CAAC,EACD;IACE7B,KAAK,EAAE/B,CAAC,CAAC,yBAAyB,CAAC;IACnC2D,SAAS,EAAE,UAAU;IACrBC,KAAK,EAAE,QAAQ;IACfC,MAAM,EAAGI,QAAQ,iBACftF,kCAAOe,mBAAmB,CAACuE,QAAQ,EAAEtE,mBAAmB,CAAC;EAE7D,CAAC,EACD;IACEoC,KAAK,EAAE/B,CAAC,CAAC,6BAA6B,CAAC;IACvC2D,SAAS,EAAE,cAAc;IACzBC,KAAK,EAAE;EACT,CAAC,EACD;IACE7B,KAAK,EAAE/B,CAAC,CAAC,sBAAsB,CAAC;IAChC2D,SAAS,EAAE,QAAQ;IACnBC,KAAK,EAAE,QAAQ;IACfM,MAAM,EAAE,CAAC5D,WAAW;IACpBuD,MAAM,EAAGM,GAAG,iBACVxF,oBAACS,GAAG;MAACgF,KAAK,EAAED,GAAG,GAAG,MAAM,GAAG;IAAU,GAClCA,GAAG,GAAGnE,CAAC,CAAC,sBAAsB,CAAC,GAAGA,CAAC,CAAC,qBAAqB,CAAC;EAGjE,CAAC,CACF,CAACkC,MAAM,CAAEmC,GAAG,IAAK,CAACA,GAAG,CAACH,MAAM,CAAC;EAE9B,oBACEvF,oBAACU,QAAQ;IACP0C,KAAK,EAAG,GAAE/B,CAAC,CAAC,sBAAsB,CAAE,GAAEa,KAAK,aAALA,KAAK,uCAALA,KAAK,CAAEoB,IAAI,iDAAXpB,aAAaF,MAAO,EAAE;IAC5DC,OAAO,EAAEA,OAAQ;IACjB8C,OAAO,EAAEA,OAAQ;IACjBR,YAAY,EAAEA,YAAa;IAC3BoB,OAAO,EAAEtE,CAAC,CAAC,yBAAyB,CAAE;IACtCQ,WAAW,EAAEA,WAAY;IACzB+D,QAAQ,EAAE,IAAK;IACftC,IAAI,EAAEpB,MAAK,aAALA,KAAK,uBAALA,KAAK,CAAEoB,IAAI,KAAI,EAAG;IACxBuC,UAAU,EAAE,KAAM;IAClBC,UAAU,EAAEnE,WAAW,GAAGiC,OAAO,GAAG,IAAK;IACzCmC,SAAS,EAAE3B;EAAY,EACvB;AAEN;AAAA,GAjLSjD,aAAa;EAAA,QACHd,WAAW,EACdD,cAAc,EAYDO,QAAQ;AAAA;AAAA,KAd5BQ,aAAa;AAmLtBA,aAAa,CAAC6E,SAAS,GAAG,CAAC,CAAC;AAE5B,eAAe7E,aAAa;AAAA;AAAA","names":["React","useState","DownloadOutlined","ExclamationCircleOutlined","useTranslation","useLocation","Avatar","Button","Modal","Tag","ComTable","useFetch","eventApi","IMAGE_URL","headerCsvUserJoin","formatDateTimeTable","DATE_FORMAT_DISPLAY","exportCSVFile","formateDataCsvUserJoin","EventUserJoin","location","t","state","refetch","setRefetch","selectedRowKeys","setSelectedRowKeys","isDrawEvent","type","propsBtnAdd","disabled","Boolean","length","loading","value","getUsersJoinEvent","id","onSelectChange","newSelectedRowKeys","handleJoinUser","payload","listUserEventId","potUserEventJoin","then","Math","random","catch","err","console","log","handleDownloadCsv","fileName","title","formatUserWinPrize","data","filter","user","status","dataFormation","rest","confirm","width","icon","centered","content","okText","cancelText","onOk","downloadCsv","className","onClick","rowSelection","preserveSelectedRowKeys","onChange","getCheckboxProps","record","rowIndex","item","includes","columns","dataIndex","align","render","src","avatar","username","birthday","hidden","sts","color","col","iconAdd","maxWidth","pagination","onAddTable","groupsBtn","propTypes"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/event/EventUserJoin.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { DownloadOutlined, ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation } from \"react-router-dom\";\nimport { Avatar, Button, Modal, Tag } from \"antd\";\n\nimport ComTable from \"@components/common/ComTable\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport { eventApi } from \"@services/apis/eventApi\";\nimport { IMAGE_URL } from \"@common/config/endpoint\";\nimport { headerCsvUserJoin } from \"@common/constant/eventConst\";\nimport { formatDateTimeTable } from \"@common/utils/dateHelper\";\nimport { DATE_FORMAT_DISPLAY } from \"@common/constant/date\";\nimport { exportCSVFile, formateDataCsvUserJoin } from \"@common/utils/csv\";\n\nfunction EventUserJoin() {\n  const location = useLocation();\n  const { t } = useTranslation();\n  const { state } = location;\n\n  const [refetch, setRefetch] = useState(\"\");\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const isDrawEvent = state.type === 1;\n\n  const propsBtnAdd = {\n    type: \"primary\",\n    disabled: Boolean(!selectedRowKeys.length),\n  };\n\n  const { loading, value } = useFetch(\n    () => eventApi.getUsersJoinEvent(state?.id),\n    [state?.id, refetch],\n  );\n\n  const onSelectChange = (newSelectedRowKeys) => {\n    setSelectedRowKeys(newSelectedRowKeys);\n  };\n\n  const handleJoinUser = () => {\n    const payload = {\n      id: state?.id,\n      listUserEventId: selectedRowKeys,\n    };\n\n    eventApi\n      .potUserEventJoin(payload)\n      .then(() => {\n        setSelectedRowKeys([]);\n        setRefetch(`updateStatus-${Math.random(1 * 100)}`);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleDownloadCsv = () => {\n    // filter user winPrize\n    const fileName = `${state?.title} ${t(\"userJoined\")}`;\n    const formatUserWinPrize = value?.data?.filter((user) => user?.status);\n    const dataFormation = formateDataCsvUserJoin(\n      formatUserWinPrize,\n      isDrawEvent,\n    );\n    const { status, ...rest } = headerCsvUserJoin;\n\n    exportCSVFile(\n      isDrawEvent ? headerCsvUserJoin : rest,\n      dataFormation,\n      fileName,\n    );\n  };\n\n  const confirm = () => {\n    Modal.confirm({\n      width: 500,\n      icon: <ExclamationCircleOutlined />,\n      centered: true,\n      content: t(\"events.modal.textConfirmJoinEvent\"),\n      okText: t(\"events.modal.textYes\"),\n      cancelText: t(\"events.modal.textNo\"),\n      onOk: handleJoinUser,\n    });\n  };\n\n  const downloadCsv = () => {\n    return (\n      <Button\n        className=\"ml-5\"\n        icon={<DownloadOutlined />}\n        disabled={!value?.data?.length}\n        onClick={handleDownloadCsv}\n      >\n        CSV\n      </Button>\n    );\n  };\n\n  const rowSelection = {\n    selectedRowKeys,\n    preserveSelectedRowKeys: true,\n    onChange: onSelectChange,\n    getCheckboxProps: (record) => {\n      const rowIndex = value.data.filter((item) => item.status);\n\n      return {\n        disabled: rowIndex.includes(record),\n      };\n    },\n  };\n\n  const columns = [\n    {\n      title: \"ID\",\n      dataIndex: \"user\",\n      align: \"center\",\n      width: 100,\n      render: (user) => <span>{user?.id}</span>,\n    },\n    {\n      title: t(\"events.list.avatar\"),\n      dataIndex: \"user\",\n      align: \"center\",\n      render: (user) => (\n        <Avatar src={`${IMAGE_URL}${user?.avatar}/original.jpg`} />\n      ),\n    },\n    {\n      title: t(\"events.list.userName\"),\n      dataIndex: \"user\",\n      align: \"center\",\n      render: (user) => <span>{user?.username}</span>,\n    },\n    {\n      title: t(\"events.list.fullName\"),\n      dataIndex: \"fullName\",\n      align: \"center\",\n      width: 300,\n    },\n    {\n      title: t(\"events.list.email\"),\n      dataIndex: \"email\",\n      align: \"center\",\n    },\n    {\n      title: t(\"events.list.phoneNumber\"),\n      dataIndex: \"phoneNumber\",\n      align: \"center\",\n    },\n    {\n      title: t(\"events.list.address\"),\n      dataIndex: \"address\",\n      align: \"center\",\n    },\n    {\n      title: t(\"events.list.dateOfBirth\"),\n      dataIndex: \"birthday\",\n      align: \"center\",\n      render: (birthday) => (\n        <span>{formatDateTimeTable(birthday, DATE_FORMAT_DISPLAY)}</span>\n      ),\n    },\n    {\n      title: t(\"events.list.timesUserJoined\"),\n      dataIndex: \"eventJoineds\",\n      align: \"center\",\n    },\n    {\n      title: t(\"events.list.winPrize\"),\n      dataIndex: \"status\",\n      align: \"center\",\n      hidden: !isDrawEvent,\n      render: (sts) => (\n        <Tag color={sts ? \"gold\" : \"default\"}>\n          {sts ? t(\"events.list.winPrize\") : t(\"events.list.noPrize\")}\n        </Tag>\n      ),\n    },\n  ].filter((col) => !col.hidden);\n\n  return (\n    <ComTable\n      title={`${t(\"events.userJoinTitle\")}${value?.data?.length}`}\n      loading={loading}\n      columns={columns}\n      rowSelection={rowSelection}\n      iconAdd={t(\"events.list.btnWinPrize\")}\n      propsBtnAdd={propsBtnAdd}\n      maxWidth={1500}\n      data={value?.data || []}\n      pagination={false}\n      onAddTable={isDrawEvent ? confirm : null}\n      groupsBtn={downloadCsv}\n    />\n  );\n}\n\nEventUserJoin.propTypes = {};\n\nexport default EventUserJoin;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}