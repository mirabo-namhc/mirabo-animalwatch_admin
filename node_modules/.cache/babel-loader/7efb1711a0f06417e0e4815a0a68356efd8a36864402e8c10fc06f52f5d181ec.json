{"ast":null,"code":"var _s = $RefreshSig$();\n/* eslint-disable react/no-unstable-nested-components */\nimport React, { useState } from \"react\";\nimport { Button, Card, Form, Input, message, Row } from \"antd\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { t } from \"i18next\";\nimport TextField from \"@components/form/MyInputField\";\nimport { validate } from \"@validate/index\";\nimport { adminApi } from \"@services/apis/admin\";\nimport MySelect from \"@components/form/MySelect\";\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\nconst listStatus = [{\n  key: 1,\n  value: true,\n  label: \"活性\"\n}, {\n  key: 2,\n  value: false,\n  label: \"非活性\"\n}];\nfunction AdminForm() {\n  _s();\n  var _location$state2, _location$state3;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const handleBack = () => {\n    navigate(\"..\");\n  };\n  const handleFinish = values => {\n    var _location$state;\n    if (!((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.id)) {\n      var _values$email;\n      const payload = {\n        ...values,\n        email: values === null || values === void 0 ? void 0 : (_values$email = values.email) === null || _values$email === void 0 ? void 0 : _values$email.trim()\n      };\n      setLoading(true);\n      adminApi.postAdmin(payload).then(() => {\n        navigate(\"..\");\n        message.success(t(\"managementAdmin.message.successCreate\"));\n      }).catch(() => {\n        message.error(t(\"managementAdmin.message.errCreate\"));\n      }).then(() => setLoading(false));\n    } else {\n      const payload = {\n        ...location.state,\n        email: values === null || values === void 0 ? void 0 : values.active\n      };\n      setLoading(true);\n      adminApi.putAdmin(payload).then(() => {\n        navigate(\"..\");\n        message.success(t(\"managementAdmin.message.successUpdate\"));\n      }).catch(() => {\n        message.error(t(\"managementAdmin.message.errUpdate\"));\n      }).finally(() => {\n        setLoading(true);\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    className: \"full-width header-table\"\n  }, /*#__PURE__*/React.createElement(\"h1\", null, location.state ? t(\"managementAdmin.editAdmin\") : t(\"managementAdmin.createAdmin\"))), /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    colon: false,\n    initialValues: {\n      active: (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.active\n    },\n    onFinish: handleFinish\n  }, !((_location$state3 = location.state) !== null && _location$state3 !== void 0 && _location$state3.id) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, {\n    label: t(\"managementAdmin.form.fullName\"),\n    name: \"fullname\",\n    className: \"input-height\",\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"validate.notEmpty\", {\n      fieldName: t(\"managementAdmin.form.fullName\")\n    })), {\n      max: 128,\n      message: t(\"validate.maxCharacter\", {\n        number: 128\n      })\n    }],\n    maxLength: 128\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: t(\"managementAdmin.form.email\"),\n    name: \"email\",\n    className: \"input-height\",\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.email(t)]\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    label: t(\"managementAdmin.form.password\"),\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.validatePassword(t)]\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    className: \"input-password-default\",\n    iconRender: visible => visible ? /*#__PURE__*/React.createElement(EyeTwoTone, null) : /*#__PURE__*/React.createElement(EyeInvisibleOutlined, null)\n  }))) : /*#__PURE__*/React.createElement(MySelect, {\n    label: t(\"managementAdmin.form.status\"),\n    name: \"active\",\n    listOptions: listStatus\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex jc-center gap-20\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    onClick: handleBack\n  }, t(\"managementAdmin.form.btnBack\")), \" \", /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    disabled: loading\n  }, location.state ? t(\"managementAdmin.form.btnEdit\") : t(\"managementAdmin.form.btnCreate\"))))));\n}\n_s(AdminForm, \"nONr9JUowQJdXkfzSey2kYYi70I=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AdminForm;\nAdminForm.propTypes = {};\nexport default AdminForm;\nvar _c;\n$RefreshReg$(_c, \"AdminForm\");","map":{"version":3,"mappings":"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","names":["React","useState","Button","Card","Form","Input","message","Row","useLocation","useNavigate","t","TextField","validate","adminApi","MySelect","EyeInvisibleOutlined","EyeTwoTone","listStatus","key","value","label","AdminForm","navigate","location","loading","setLoading","handleBack","handleFinish","values","state","id","payload","email","trim","postAdmin","then","success","catch","error","active","putAdmin","finally","align","className","layout","colon","initialValues","onFinish","name","rules","required","empty","fieldName","max","number","maxLength","Item","validatePassword","Password","iconRender","visible","listOptions","type","onClick","htmlType","disabled","propTypes"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/admin/AdminForm.jsx"],"sourcesContent":["/* eslint-disable react/no-unstable-nested-components */\nimport React, { useState } from \"react\";\nimport { Button, Card, Form, Input, message, Row } from \"antd\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { t } from \"i18next\";\n\nimport TextField from \"@components/form/MyInputField\";\nimport { validate } from \"@validate/index\";\nimport { adminApi } from \"@services/apis/admin\";\nimport MySelect from \"@components/form/MySelect\";\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\n\nconst listStatus = [\n  {\n    key: 1,\n    value: true,\n    label: \"活性\",\n  },\n  {\n    key: 2,\n    value: false,\n    label: \"非活性\",\n  },\n];\n\nfunction AdminForm() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n\n  const handleBack = () => {\n    navigate(\"..\");\n  };\n\n  const handleFinish = (values) => {\n    if (!location.state?.id) {\n      const payload = {\n        ...values,\n        email: values?.email?.trim(),\n      };\n      setLoading(true);\n\n      adminApi\n        .postAdmin(payload)\n        .then(() => {\n          navigate(\"..\");\n          message.success(t(\"managementAdmin.message.successCreate\"));\n        })\n        .catch(() => {\n          message.error(t(\"managementAdmin.message.errCreate\"));\n        })\n        .then(() => setLoading(false));\n    } else {\n      const payload = {\n        ...location.state,\n        email: values?.active,\n      };\n      setLoading(true);\n\n      adminApi\n        .putAdmin(payload)\n        .then(() => {\n          navigate(\"..\");\n          message.success(t(\"managementAdmin.message.successUpdate\"));\n        })\n        .catch(() => {\n          message.error(t(\"managementAdmin.message.errUpdate\"));\n        })\n        .finally(() => {\n          setLoading(true);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <Row align=\"middle\" className=\"full-width header-table\">\n        <h1>\n          {location.state\n            ? t(\"managementAdmin.editAdmin\")\n            : t(\"managementAdmin.createAdmin\")}\n        </h1>\n      </Row>\n      <Card>\n        <Form\n          layout=\"vertical\"\n          colon={false}\n          initialValues={{\n            active: location.state?.active,\n          }}\n          onFinish={handleFinish}\n        >\n          {!location.state?.id ? (\n            <>\n              <TextField\n                label={t(\"managementAdmin.form.fullName\")}\n                name=\"fullname\"\n                className=\"input-height\"\n                rules={[\n                  { required: true, message: \"\" },\n                  validate.empty(\n                    t(\"validate.notEmpty\", {\n                      fieldName: t(\"managementAdmin.form.fullName\"),\n                    }),\n                  ),\n                  {\n                    max: 128,\n                    message: t(\"validate.maxCharacter\", { number: 128 }),\n                  },\n                ]}\n                maxLength={128}\n              />\n              <TextField\n                label={t(\"managementAdmin.form.email\")}\n                name=\"email\"\n                className=\"input-height\"\n                rules={[{ required: true, message: \"\" }, validate.email(t)]}\n              />\n              <Form.Item\n                label={t(\"managementAdmin.form.password\")}\n                name=\"password\"\n                rules={[\n                  { required: true, message: \"\" },\n                  validate.validatePassword(t),\n                ]}\n              >\n                <Input.Password\n                  className=\"input-password-default\"\n                  iconRender={(visible) =>\n                    visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\n                  }\n                />\n              </Form.Item>\n            </>\n          ) : (\n            <MySelect\n              label={t(\"managementAdmin.form.status\")}\n              name=\"active\"\n              listOptions={listStatus}\n            />\n          )}\n          <div className=\"flex jc-center gap-20\">\n            <Button type=\"default\" onClick={handleBack}>\n              {t(\"managementAdmin.form.btnBack\")}\n            </Button>{\" \"}\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              loading={loading}\n              disabled={loading}\n            >\n              {location.state\n                ? t(\"managementAdmin.form.btnEdit\")\n                : t(\"managementAdmin.form.btnCreate\")}\n            </Button>\n          </div>\n        </Form>\n      </Card>\n    </div>\n  );\n}\n\nAdminForm.propTypes = {};\n\nexport default AdminForm;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}