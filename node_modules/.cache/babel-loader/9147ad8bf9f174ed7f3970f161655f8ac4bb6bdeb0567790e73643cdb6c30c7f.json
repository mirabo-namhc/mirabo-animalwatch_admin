{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport { TYPE_CHECKPOINT } from \"@common/constant/masterData\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport ComTable from \"@components/common/ComTable\";\nimport { checkPointApi } from \"@services/apis/checkpoint\";\nimport { Button, message, Modal, Row } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nfunction CheckPointList(props) {\n  _s();\n  var _value$paginate;\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  const [refetch, setRefetch] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    take: 10,\n    keyword: \"\"\n  });\n  const {\n    loading,\n    value\n  } = useFetch(ourRequest => checkPointApi.getCheckPoints(pagination, ourRequest), [pagination, refetch]);\n  const totalPage = value === null || value === void 0 ? void 0 : (_value$paginate = value.paginate) === null || _value$paginate === void 0 ? void 0 : _value$paginate.totalPage;\n  const paginationProp = {\n    position: [\"bottomRight\"],\n    total: totalPage * pagination.take,\n    showSizeChanger: true,\n    current: pagination.page\n  };\n  const handleCreate = () => {\n    navigate(PATH_URL.CHECKPOINT.CREATE);\n  };\n  const handleChangeTable = (paginate, filter, sorter) => {\n    setPagination(curState => ({\n      ...curState,\n      page: paginate === null || paginate === void 0 ? void 0 : paginate.current,\n      take: paginate === null || paginate === void 0 ? void 0 : paginate.pageSize,\n      sort: sorter.field && `${sorter === null || sorter === void 0 ? void 0 : sorter.field}:${(sorter === null || sorter === void 0 ? void 0 : sorter.order) === \"ascend\" ? \"asc\" : \"desc\"}`\n    }));\n  };\n  const handleSearch = keyWord => {\n    setPagination(curState => ({\n      ...curState,\n      page: 1,\n      keyword: keyWord === null || keyWord === void 0 ? void 0 : keyWord.trim()\n    }));\n  };\n  const handleDelete = checkPointId => {\n    checkPointApi.deleteCheckPoint({\n      id: checkPointId\n    }).then(() => {\n      setRefetch(`deleteCheckPoint-${checkPointId}`);\n      message.success(t(\"checkpoint.modal.deleteSuccess\"));\n    }).catch(() => {\n      message.error(t(\"checkpoint.modal.deleteFailed\"));\n    });\n  };\n  const handleDetailShow = checkPoint => {\n    navigate(PATH_URL.CHECKPOINT.DETAIL, {\n      state: checkPoint\n    });\n  };\n  const handleEdit = (e, checkPoint) => {\n    e.stopPropagation();\n    navigate(PATH_URL.CHECKPOINT.EDIT, {\n      state: checkPoint\n    });\n  };\n  const confirm = checkPointId => {\n    Modal.confirm({\n      icon: /*#__PURE__*/React.createElement(ExclamationCircleOutlined, null),\n      centered: true,\n      content: t(\"checkpoint.modal.textConfirmDel\"),\n      okText: t(\"checkpoint.modal.textYes\"),\n      cancelText: t(\"checkpoint.modal.textNo\"),\n      onOk: () => handleDelete(checkPointId)\n    });\n  };\n  const columns = [{\n    title: t(\"checkpoint.list.routeId\"),\n    dataIndex: \"courseId\",\n    align: \"center\",\n    width: 150\n  }, {\n    title: t(\"checkpoint.list.checkPointId\"),\n    dataIndex: \"id\",\n    align: \"center\",\n    sorter: true,\n    width: 200\n  }, {\n    title: t(\"checkpoint.list.checkPointName\"),\n    dataIndex: \"name\",\n    align: \"center\",\n    sorter: true,\n    width: 200\n  }, {\n    title: t(\"checkpoint.list.place\"),\n    dataIndex: \"place\",\n    align: \"center\"\n  }, {\n    title: t(\"checkpoint.list.description\"),\n    dataIndex: \"description\",\n    align: \"center\",\n    width: 300\n  }, {\n    title: t(\"checkpoint.list.type\"),\n    dataIndex: \"type\",\n    render: values => {\n      return TYPE_CHECKPOINT[values].label;\n    },\n    align: \"center\"\n  }, {\n    title: t(\"checkpoint.list.operation\"),\n    align: \"center\",\n    width: 200,\n    render: checkPoint => /*#__PURE__*/React.createElement(Row, {\n      className: \"flex jc-center gap-20 full-width\"\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"fw-600 cancel-btn\",\n      type: \"default\",\n      onClick: e => handleEdit(e, checkPoint)\n    }, t(\"table.btnEdit\")), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn submit-btn\",\n      type: \"primary\",\n      onClick: e => {\n        e.stopPropagation();\n        confirm(checkPoint.id);\n      }\n    }, t(\"table.btnDel\")))\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(ComTable, {\n    title: t(\"checkpoint.title\"),\n    loading: loading,\n    columns: columns,\n    data: value === null || value === void 0 ? void 0 : value.data,\n    pagination: paginationProp,\n    onAddTable: handleCreate,\n    onSearch: handleSearch,\n    onClickRow: handleDetailShow,\n    onChangeTable: handleChangeTable\n  }));\n}\n_s(CheckPointList, \"zgKe1pYgKLOaa9Fvzf3uvZunnhA=\", false, function () {\n  return [useTranslation, useNavigate, useFetch];\n});\n_c = CheckPointList;\nCheckPointList.propTypes = {};\nexport default CheckPointList;\nvar _c;\n$RefreshReg$(_c, \"CheckPointList\");","map":{"version":3,"mappings":"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","names":["React","useState","ExclamationCircleOutlined","PATH_URL","TYPE_CHECKPOINT","useFetch","ComTable","checkPointApi","Button","message","Modal","Row","useTranslation","useNavigate","CheckPointList","props","t","navigate","refetch","setRefetch","pagination","setPagination","page","take","keyword","loading","value","ourRequest","getCheckPoints","totalPage","paginate","paginationProp","position","total","showSizeChanger","current","handleCreate","CHECKPOINT","CREATE","handleChangeTable","filter","sorter","curState","pageSize","sort","field","order","handleSearch","keyWord","trim","handleDelete","checkPointId","deleteCheckPoint","id","then","success","catch","error","handleDetailShow","checkPoint","DETAIL","state","handleEdit","e","stopPropagation","EDIT","confirm","icon","centered","content","okText","cancelText","onOk","columns","title","dataIndex","align","width","render","values","label","className","type","onClick","data","onAddTable","onSearch","onClickRow","onChangeTable","propTypes"],"sources":["/home/huynd/animalwatch_admin/src/pages/checkpoint/CheckPointList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport { TYPE_CHECKPOINT } from \"@common/constant/masterData\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport ComTable from \"@components/common/ComTable\";\nimport { checkPointApi } from \"@services/apis/checkpoint\";\nimport { Button, message, Modal, Row } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction CheckPointList(props) {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  const [refetch, setRefetch] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    take: 10,\n    keyword: \"\",\n  });\n\n  const { loading, value } = useFetch(\n    (ourRequest) => checkPointApi.getCheckPoints(pagination, ourRequest),\n    [pagination, refetch],\n  );\n\n  const totalPage = value?.paginate?.totalPage;\n  const paginationProp = {\n    position: [\"bottomRight\"],\n    total: totalPage * pagination.take,\n    showSizeChanger: true,\n    current: pagination.page,\n  };\n\n  const handleCreate = () => {\n    navigate(PATH_URL.CHECKPOINT.CREATE);\n  };\n\n  const handleChangeTable = (paginate, filter, sorter) => {\n    setPagination((curState) => ({\n      ...curState,\n      page: paginate?.current,\n      take: paginate?.pageSize,\n      sort:\n        sorter.field &&\n        `${sorter?.field}:${sorter?.order === \"ascend\" ? \"asc\" : \"desc\"}`,\n    }));\n  };\n\n  const handleSearch = (keyWord) => {\n    setPagination((curState) => ({\n      ...curState,\n      page: 1,\n      keyword: keyWord?.trim(),\n    }));\n  };\n\n  const handleDelete = (checkPointId) => {\n    checkPointApi\n      .deleteCheckPoint({ id: checkPointId })\n      .then(() => {\n        setRefetch(`deleteCheckPoint-${checkPointId}`);\n        message.success(t(\"checkpoint.modal.deleteSuccess\"));\n      })\n      .catch(() => {\n        message.error(t(\"checkpoint.modal.deleteFailed\"));\n      });\n  };\n\n  const handleDetailShow = (checkPoint) => {\n    navigate(PATH_URL.CHECKPOINT.DETAIL, {\n      state: checkPoint,\n    });\n  };\n\n  const handleEdit = (e, checkPoint) => {\n    e.stopPropagation();\n    navigate(PATH_URL.CHECKPOINT.EDIT, {\n      state: checkPoint,\n    });\n  };\n\n  const confirm = (checkPointId) => {\n    Modal.confirm({\n      icon: <ExclamationCircleOutlined />,\n      centered: true,\n      content: t(\"checkpoint.modal.textConfirmDel\"),\n      okText: t(\"checkpoint.modal.textYes\"),\n      cancelText: t(\"checkpoint.modal.textNo\"),\n      onOk: () => handleDelete(checkPointId),\n    });\n  };\n\n  const columns = [\n    {\n      title: t(\"checkpoint.list.routeId\"),\n      dataIndex: \"courseId\",\n      align: \"center\",\n      width: 150,\n    },\n    {\n      title: t(\"checkpoint.list.checkPointId\"),\n      dataIndex: \"id\",\n      align: \"center\",\n      sorter: true,\n      width: 200,\n    },\n    {\n      title: t(\"checkpoint.list.checkPointName\"),\n      dataIndex: \"name\",\n      align: \"center\",\n      sorter: true,\n      width: 200,\n    },\n    {\n      title: t(\"checkpoint.list.place\"),\n      dataIndex: \"place\",\n      align: \"center\",\n    },\n    {\n      title: t(\"checkpoint.list.description\"),\n      dataIndex: \"description\",\n      align: \"center\",\n      width: 300,\n    },\n    {\n      title: t(\"checkpoint.list.type\"),\n      dataIndex: \"type\",\n      render: (values) => {\n        return TYPE_CHECKPOINT[values].label;\n      },\n\n      align: \"center\",\n    },\n    {\n      title: t(\"checkpoint.list.operation\"),\n      align: \"center\",\n      width: 200,\n      render: (checkPoint) => (\n        <Row className=\"flex jc-center gap-20 full-width\">\n          <Button\n            className=\"fw-600 cancel-btn\"\n            type=\"default\"\n            onClick={(e) => handleEdit(e, checkPoint)}\n          >\n            {t(\"table.btnEdit\")}\n          </Button>\n          <Button\n            className=\"btn submit-btn\"\n            type=\"primary\"\n            onClick={(e) => {\n              e.stopPropagation();\n              confirm(checkPoint.id);\n            }}\n          >\n            {t(\"table.btnDel\")}\n          </Button>\n        </Row>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <ComTable\n        title={t(\"checkpoint.title\")}\n        loading={loading}\n        columns={columns}\n        data={value?.data}\n        pagination={paginationProp}\n        onAddTable={handleCreate}\n        onSearch={handleSearch}\n        onClickRow={handleDetailShow}\n        onChangeTable={handleChangeTable}\n      />\n    </div>\n  );\n}\nCheckPointList.propTypes = {};\n\nexport default CheckPointList;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}