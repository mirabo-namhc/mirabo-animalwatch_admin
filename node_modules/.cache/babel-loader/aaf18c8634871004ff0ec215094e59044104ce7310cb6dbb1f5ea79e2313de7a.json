{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { t } from \"i18next\";\nimport ComTable from \"@components/common/ComTable\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport { mailApi } from \"@services/apis/mail\";\nimport { formatDateTimeTable } from \"@common/utils/dateHelper\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Modal, message } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport dayjs from \"dayjs\";\nfunction MailList() {\n  _s();\n  var _value$paginate;\n  const navigate = useNavigate();\n  const [refetch, setRefetch] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\"\n  });\n  const {\n    loading,\n    value\n  } = useFetch(cancelToken => mailApi.get(pagination, cancelToken), [pagination, refetch]);\n  const handleCreate = () => {\n    navigate(PATH_URL.SEND_MAIL.CREATE);\n  };\n  const handleDetail = values => {\n    navigate(PATH_URL.SEND_MAIL.DETAIL, {\n      state: values\n    });\n  };\n  const handleSearch = keyWord => {\n    setPagination(curState => ({\n      ...curState,\n      page: 1,\n      keyword: keyWord === null || keyWord === void 0 ? void 0 : keyWord.trim()\n    }));\n  };\n  const handleDelete = mailId => {\n    mailApi.delete(mailId).then(() => {\n      setRefetch(`deleteMail-${mailId}`);\n      message.success(t(\"mail.message.deleteSuccess\"));\n    }).catch(() => {\n      message.error(t(\"mail.message.deleteError\"));\n    });\n  };\n  const onChangePagination = (currentPage, totalItemPerPage) => {\n    setPagination(curState => ({\n      ...curState,\n      page: currentPage,\n      limit: totalItemPerPage\n    }));\n  };\n  const confirm = mailId => {\n    Modal.confirm({\n      icon: /*#__PURE__*/React.createElement(ExclamationCircleOutlined, null),\n      centered: true,\n      content: t(\"mail.modal.textConfirmDel\"),\n      okText: t(\"mail.modal.textYes\"),\n      cancelText: t(\"mail.modal.textNo\"),\n      onOk: () => handleDelete(mailId)\n    });\n  };\n  const totalPage = value === null || value === void 0 ? void 0 : (_value$paginate = value.paginate) === null || _value$paginate === void 0 ? void 0 : _value$paginate.totalPage;\n  const paginationProp = {\n    position: [\"bottomRight\"],\n    total: totalPage * 10,\n    showSizeChanger: true,\n    onChange: onChangePagination,\n    current: pagination.page\n  };\n  const columns = [{\n    title: \"ID\",\n    dataIndex: \"id\",\n    sorter: true,\n    align: \"center\"\n  }, {\n    title: t(\"mail.list.name\"),\n    dataIndex: \"name\",\n    align: \"center\"\n  }, {\n    title: t(\"mail.list.email\"),\n    dataIndex: \"email\",\n    align: \"center\"\n  }, {\n    title: t(\"mail.list.scheduledDeliveryDate\"),\n    dataIndex: \"sendAt\",\n    align: \"center\",\n    render: date => /*#__PURE__*/React.createElement(\"div\", null, formatDateTimeTable(date))\n  }, {\n    title: t(\"mail.list.sendDate\"),\n    dataIndex: \"sentAt\",\n    align: \"center\",\n    render: date => {\n      const allowEdit = dayjs(date).isAfter(dayjs(), \"minute\");\n      return /*#__PURE__*/React.createElement(\"div\", null, !allowEdit && formatDateTimeTable(date));\n    }\n  }, {\n    title: t(\"mail.list.operation\"),\n    align: \"center\",\n    width: 120,\n    render: mail => /*#__PURE__*/React.createElement(Button, {\n      className: \"btn submit-btn\",\n      type: \"primary\",\n      onClick: e => {\n        e.stopPropagation();\n        confirm(mail.id);\n      }\n    }, t(\"table.btnDel\"))\n  }];\n  return /*#__PURE__*/React.createElement(ComTable, {\n    title: t(\"mail.get\"),\n    loading: loading,\n    columns: columns,\n    data: value === null || value === void 0 ? void 0 : value.data,\n    pagination: paginationProp,\n    onSearch: handleSearch,\n    onAddTable: handleCreate,\n    onClickRow: handleDetail\n  });\n}\n_s(MailList, \"UkKvejPPORBGsg0BwaNxca7vNuQ=\", false, function () {\n  return [useNavigate, useFetch];\n});\n_c = MailList;\nMailList.propTypes = {};\nexport default MailList;\nvar _c;\n$RefreshReg$(_c, \"MailList\");","map":{"version":3,"mappings":"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","names":["React","useState","PropTypes","t","ComTable","useFetch","mailApi","formatDateTimeTable","PATH_URL","useNavigate","Button","Modal","message","ExclamationCircleOutlined","dayjs","MailList","navigate","refetch","setRefetch","pagination","setPagination","page","limit","keyword","loading","value","cancelToken","get","handleCreate","SEND_MAIL","CREATE","handleDetail","values","DETAIL","state","handleSearch","keyWord","curState","trim","handleDelete","mailId","delete","then","success","catch","error","onChangePagination","currentPage","totalItemPerPage","confirm","icon","centered","content","okText","cancelText","onOk","totalPage","paginate","paginationProp","position","total","showSizeChanger","onChange","current","columns","title","dataIndex","sorter","align","render","date","allowEdit","isAfter","width","mail","className","type","onClick","e","stopPropagation","id","data","onSearch","onAddTable","onClickRow","propTypes"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/mail/MailList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { t } from \"i18next\";\nimport ComTable from \"@components/common/ComTable\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport { mailApi } from \"@services/apis/mail\";\nimport { formatDateTimeTable } from \"@common/utils/dateHelper\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Modal, message } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport dayjs from \"dayjs\";\n\nfunction MailList() {\n  const navigate = useNavigate();\n  const [refetch, setRefetch] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\",\n  });\n\n  const { loading, value } = useFetch(\n    (cancelToken) => mailApi.get(pagination, cancelToken),\n    [pagination, refetch],\n  );\n\n  const handleCreate = () => {\n    navigate(PATH_URL.SEND_MAIL.CREATE);\n  };\n\n  const handleDetail = (values) => {\n    navigate(PATH_URL.SEND_MAIL.DETAIL, { state: values });\n  };\n\n  const handleSearch = (keyWord) => {\n    setPagination((curState) => ({\n      ...curState,\n      page: 1,\n      keyword: keyWord?.trim(),\n    }));\n  };\n\n  const handleDelete = (mailId) => {\n    mailApi\n      .delete(mailId)\n      .then(() => {\n        setRefetch(`deleteMail-${mailId}`);\n        message.success(t(\"mail.message.deleteSuccess\"));\n      })\n      .catch(() => {\n        message.error(t(\"mail.message.deleteError\"));\n      });\n  };\n\n  const onChangePagination = (currentPage, totalItemPerPage) => {\n    setPagination((curState) => ({\n      ...curState,\n      page: currentPage,\n      limit: totalItemPerPage,\n    }));\n  };\n\n  const confirm = (mailId) => {\n    Modal.confirm({\n      icon: <ExclamationCircleOutlined />,\n      centered: true,\n      content: t(\"mail.modal.textConfirmDel\"),\n      okText: t(\"mail.modal.textYes\"),\n      cancelText: t(\"mail.modal.textNo\"),\n      onOk: () => handleDelete(mailId),\n    });\n  };\n\n  const totalPage = value?.paginate?.totalPage;\n  const paginationProp = {\n    position: [\"bottomRight\"],\n    total: totalPage * 10,\n    showSizeChanger: true,\n    onChange: onChangePagination,\n    current: pagination.page,\n  };\n\n  const columns = [\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n      sorter: true,\n      align: \"center\",\n    },\n    {\n      title: t(\"mail.list.name\"),\n      dataIndex: \"name\",\n      align: \"center\",\n    },\n    {\n      title: t(\"mail.list.email\"),\n      dataIndex: \"email\",\n      align: \"center\",\n    },\n    {\n      title: t(\"mail.list.scheduledDeliveryDate\"),\n      dataIndex: \"sendAt\",\n      align: \"center\",\n      render: (date) => <div>{formatDateTimeTable(date)}</div>,\n    },\n    {\n      title: t(\"mail.list.sendDate\"),\n      dataIndex: \"sentAt\",\n      align: \"center\",\n      render: (date) => {\n        const allowEdit = dayjs(date).isAfter(dayjs(), \"minute\");\n        return <div>{!allowEdit && formatDateTimeTable(date)}</div>;\n      },\n    },\n    {\n      title: t(\"mail.list.operation\"),\n      align: \"center\",\n      width: 120,\n      render: (mail) => (\n        <Button\n          className=\"btn submit-btn\"\n          type=\"primary\"\n          onClick={(e) => {\n            e.stopPropagation();\n            confirm(mail.id);\n          }}\n        >\n          {t(\"table.btnDel\")}\n        </Button>\n      ),\n    },\n  ];\n\n  return (\n    <ComTable\n      title={t(\"mail.get\")}\n      loading={loading}\n      columns={columns}\n      data={value?.data}\n      pagination={paginationProp}\n      onSearch={handleSearch}\n      onAddTable={handleCreate}\n      onClickRow={handleDetail}\n    />\n  );\n}\n\nMailList.propTypes = {};\n\nexport default MailList;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}