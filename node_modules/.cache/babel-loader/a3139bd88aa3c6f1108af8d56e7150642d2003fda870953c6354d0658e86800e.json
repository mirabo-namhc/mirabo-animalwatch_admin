{"ast":null,"code":"var _s = $RefreshSig$();\nimport { Button, Col, Image, Row } from \"antd\";\nimport { t } from \"i18next\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { IMAGE_URL } from \"@common/config/endpoint\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport useRenderForm from \"@common/hooks/useRenderFormDetail\";\nimport { formateValue } from \"@common/utils/format\";\nimport ComModal from \"@components/common/ComModal\";\nimport { courseApi } from \"@services/apis/course\";\nimport MyCheckbox from \"@components/form/MyCheckbox\";\nimport BadgeForm from \"./BadgeForm\";\nimport BadgeList from \"./BadgeList\";\nimport CheckinList from \"./CheckinList\";\nfunction CourseDetailItem(_ref) {\n  let {\n    title,\n    data\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"full-width\"\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    className: \"fw-600 mb-15 text-right pr-5\"\n  }, title, \":\"), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    className: \"pl-5\"\n  }, data));\n}\n_c = CourseDetailItem;\nfunction CourseDetail() {\n  _s();\n  var _value$newLevel, _value$checkPoint;\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n  const [carousel, setCarousel] = useState(0);\n  const [openModalBadge, setOpenModalBadge] = useState(false);\n  const [stateBadge, setStateBadge] = useState({\n    mode: \"CREATE\",\n    courseId: state.id\n  });\n  const emptyValue = {\n    title: \"\",\n    condition: null,\n    image: undefined\n  };\n  const [reloadData, setReloadData] = useState(false);\n  const {\n    value\n  } = useFetch(() => courseApi.getDetailCourse(state === null || state === void 0 ? void 0 : state.id), [state === null || state === void 0 ? void 0 : state.id]);\n  const handlePrev = () => {\n    setCarousel(prevState => prevState - 1);\n  };\n  const handleNext = () => {\n    setCarousel(prevState => prevState + 1);\n  };\n  const handleSetDataBadge = (badge, typeModal) => {\n    setStateBadge(preState => ({\n      ...preState,\n      value: badge,\n      mode: typeModal\n    }));\n  };\n  const onOpenModalBadge = function (type) {\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    handleSetDataBadge(data, type);\n    setOpenModalBadge(true);\n  };\n  const onCloseModalBadge = () => {\n    // reset data badge\n    handleSetDataBadge({}, \"CREATE\");\n    setOpenModalBadge(false);\n  };\n  const columnsData = [{\n    title: t(\"managementCourses.list.title\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : value.title),\n    column: 12\n  }, {\n    title: t(\"managementCourses.list.place\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : value.place),\n    column: 12\n  }, {\n    title: t(\"managementCourses.list.totalDistance\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : value.totalDistance),\n    column: 12\n  }, {\n    title: t(\"managementCourses.list.maxHeight\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : value.maxHeight),\n    column: 12\n  }, {\n    title: t(\"managementCourses.list.level\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : (_value$newLevel = value.newLevel) === null || _value$newLevel === void 0 ? void 0 : _value$newLevel.name),\n    column: 12\n  }, {\n    title: t(\"managementCourses.list.maximumAltitudeDifference\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : value.maxHeightDiff),\n    column: 12\n  }, {\n    title: t(\"managementCourses.list.slope\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : value.slope),\n    column: 12\n  }, {\n    title: t(\"managementCourses.list.startLatitude\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : value.startLatitude),\n    column: 12\n  }, {\n    title: t(\"managementCourses.list.startLongitude\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : value.startLongitude),\n    column: 12\n  }, {\n    title: t(\"managementCourses.list.endLatitude\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : value.endLatitude),\n    column: 12\n  }, {\n    title: t(\"managementCourses.list.endLongitude\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : value.endLongitude),\n    column: 12\n  }, {\n    title: t(\"managementCourses.list.review\"),\n    text: formateValue(value === null || value === void 0 ? void 0 : value.review),\n    column: 12\n  }, {\n    title: t(\"managementCourses.list.checkPoint\"),\n    content: value !== null && value !== void 0 && value.checkPoint.length ? value === null || value === void 0 ? void 0 : (_value$checkPoint = value.checkPoint) === null || _value$checkPoint === void 0 ? void 0 : _value$checkPoint.map((course, i) => /*#__PURE__*/React.createElement(Link, {\n      key: i,\n      className: \"mr-10\",\n      to: `${PATH_URL.CHECKPOINT.INDEX}/${PATH_URL.CHECKPOINT.DETAIL}`,\n      state: {\n        id: course === null || course === void 0 ? void 0 : course.id\n      }\n    }, course.name)) : \"-\",\n    column: 12\n  }];\n  const columns = useRenderForm(columnsData, value);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"form-event\"\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    className: \"full-width header-table\"\n  }, /*#__PURE__*/React.createElement(\"h1\", null, t(\"managementCourses.titleDetail\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-20\"\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"flex-center mb-15\"\n  }, /*#__PURE__*/React.createElement(Image, {\n    className: \"avatar\",\n    src: `${IMAGE_URL}${value === null || value === void 0 ? void 0 : value.images[carousel]}/original.jpg`\n  })), (value === null || value === void 0 ? void 0 : value.images) && value.images.length > 1 && /*#__PURE__*/React.createElement(Row, {\n    className: \"flex-center mb-15\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    disabled: !carousel,\n    onClick: handlePrev\n  }, t(\"events.form.btnPrev\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    disabled: carousel === value.images.length - 1,\n    onClick: handleNext\n  }, t(\"events.form.btnNext\"))), /*#__PURE__*/React.createElement(Row, {\n    gutter: [34]\n  }, columns, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ant-col ant-col-12 pl-17 pr-17\"\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"ant-typography fz-12\"\n  }, t(\"managementCourses.form.btnCreateBadge\")), /*#__PURE__*/React.createElement(Button, {\n    className: \"mt-10\",\n    onClick: () => onOpenModalBadge(\"CREATE\", emptyValue)\n  }, /*#__PURE__*/React.createElement(PlusOutlined, null)))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-15\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ant-col ant-col-12\"\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"ant-typography fz-12\"\n  }, t(\"managementCourses.form.hiddenChart\")), /*#__PURE__*/React.createElement(MyCheckbox, {\n    checked: !(state !== null && state !== void 0 && state.isShowChart)\n  })))), /*#__PURE__*/React.createElement(BadgeList, {\n    id: state === null || state === void 0 ? void 0 : state.id,\n    onOpenModalBadge: onOpenModalBadge,\n    reloadData: reloadData\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-20\"\n  }, /*#__PURE__*/React.createElement(CheckinList, {\n    id: state === null || state === void 0 ? void 0 : state.id,\n    reloadData: reloadData\n  })), /*#__PURE__*/React.createElement(Row, {\n    className: \"mt-20 jc-center\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"ml-10 mr-10\",\n    onClick: () => navigate(\"..\")\n  }, t(\"managementCourses.form.btnBack\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    className: \"ml-10 mr-10\",\n    onClick: () => {\n      navigate(`../${PATH_URL.MANAGER_COURSE.EDIT}`, {\n        state: value\n      });\n    }\n  }, t(\"managementCourses.form.btnEdit\"))), /*#__PURE__*/React.createElement(ComModal, {\n    open: openModalBadge,\n    onCancel: () => onCloseModalBadge(),\n    okText: \"\\u767B \\u9332\",\n    cancelText: \"\\u623B\\u308B\",\n    destroyOnClose: true,\n    content: /*#__PURE__*/React.createElement(BadgeForm, {\n      state: stateBadge,\n      onCloseModal: onCloseModalBadge,\n      setReloadData: setReloadData\n    }),\n    footer: null\n  }));\n}\n_s(CourseDetail, \"nSQOyCI+m2Md0wF+K07WX6WYuTc=\", false, function () {\n  return [useNavigate, useLocation, useFetch, useRenderForm];\n});\n_c2 = CourseDetail;\nCourseDetail.propTypes = {};\nCourseDetailItem.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.array])\n};\nexport default CourseDetail;\nvar _c, _c2;\n$RefreshReg$(_c, \"CourseDetailItem\");\n$RefreshReg$(_c2, \"CourseDetail\");","map":{"version":3,"mappings":"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","names":["Button","Col","Image","Row","t","PropTypes","React","useState","Link","useLocation","useNavigate","PlusOutlined","IMAGE_URL","PATH_URL","useFetch","useRenderForm","formateValue","ComModal","courseApi","MyCheckbox","BadgeForm","BadgeList","CheckinList","CourseDetailItem","title","data","className","span","CourseDetail","navigate","state","carousel","setCarousel","openModalBadge","setOpenModalBadge","stateBadge","setStateBadge","mode","courseId","id","emptyValue","condition","image","undefined","reloadData","setReloadData","value","getDetailCourse","handlePrev","prevState","handleNext","handleSetDataBadge","badge","typeModal","preState","onOpenModalBadge","type","onCloseModalBadge","columnsData","text","column","place","totalDistance","maxHeight","newLevel","name","maxHeightDiff","slope","startLatitude","startLongitude","endLatitude","endLongitude","review","content","checkPoint","length","map","course","i","key","to","CHECKPOINT","INDEX","DETAIL","columns","align","src","images","disabled","onClick","gutter","checked","isShowChart","MANAGER_COURSE","EDIT","open","onCancel","okText","cancelText","destroyOnClose","onCloseModal","footer","propTypes","string","oneOfType","func","array"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/course/CourseDetail.jsx"],"sourcesContent":["import { Button, Col, Image, Row } from \"antd\";\nimport { t } from \"i18next\";\nimport PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\n\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { IMAGE_URL } from \"@common/config/endpoint\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport useRenderForm from \"@common/hooks/useRenderFormDetail\";\nimport { formateValue } from \"@common/utils/format\";\nimport ComModal from \"@components/common/ComModal\";\nimport { courseApi } from \"@services/apis/course\";\nimport MyCheckbox from \"@components/form/MyCheckbox\";\nimport BadgeForm from \"./BadgeForm\";\nimport BadgeList from \"./BadgeList\";\nimport CheckinList from \"./CheckinList\";\n\nfunction CourseDetailItem({ title, data }) {\n  return (\n    <Row className=\"full-width\">\n      <Col span={12} className=\"fw-600 mb-15 text-right pr-5\">\n        {title}:\n      </Col>\n      <Col span={12} className=\"pl-5\">\n        {data}\n      </Col>\n    </Row>\n  );\n}\n\nfunction CourseDetail() {\n  const navigate = useNavigate();\n  const { state } = useLocation();\n  const [carousel, setCarousel] = useState(0);\n  const [openModalBadge, setOpenModalBadge] = useState(false);\n  const [stateBadge, setStateBadge] = useState({\n    mode: \"CREATE\",\n    courseId: state.id,\n  });\n  const emptyValue = {\n    title: \"\",\n    condition: null,\n    image: undefined,\n  };\n  const [reloadData, setReloadData] = useState(false);\n\n  const { value } = useFetch(\n    () => courseApi.getDetailCourse(state?.id),\n    [state?.id],\n  );\n\n  const handlePrev = () => {\n    setCarousel((prevState) => prevState - 1);\n  };\n\n  const handleNext = () => {\n    setCarousel((prevState) => prevState + 1);\n  };\n\n  const handleSetDataBadge = (badge, typeModal) => {\n    setStateBadge((preState) => ({\n      ...preState,\n      value: badge,\n      mode: typeModal,\n    }));\n  };\n\n  const onOpenModalBadge = (type, data = null) => {\n    handleSetDataBadge(data, type);\n    setOpenModalBadge(true);\n  };\n\n  const onCloseModalBadge = () => {\n    // reset data badge\n    handleSetDataBadge({}, \"CREATE\");\n    setOpenModalBadge(false);\n  };\n\n  const columnsData = [\n    {\n      title: t(\"managementCourses.list.title\"),\n      text: formateValue(value?.title),\n      column: 12,\n    },\n    {\n      title: t(\"managementCourses.list.place\"),\n      text: formateValue(value?.place),\n      column: 12,\n    },\n    {\n      title: t(\"managementCourses.list.totalDistance\"),\n      text: formateValue(value?.totalDistance),\n      column: 12,\n    },\n    {\n      title: t(\"managementCourses.list.maxHeight\"),\n      text: formateValue(value?.maxHeight),\n      column: 12,\n    },\n    {\n      title: t(\"managementCourses.list.level\"),\n      text: formateValue(value?.newLevel?.name),\n      column: 12,\n    },\n    {\n      title: t(\"managementCourses.list.maximumAltitudeDifference\"),\n      text: formateValue(value?.maxHeightDiff),\n      column: 12,\n    },\n    {\n      title: t(\"managementCourses.list.slope\"),\n      text: formateValue(value?.slope),\n      column: 12,\n    },\n    {\n      title: t(\"managementCourses.list.startLatitude\"),\n      text: formateValue(value?.startLatitude),\n      column: 12,\n    },\n    {\n      title: t(\"managementCourses.list.startLongitude\"),\n      text: formateValue(value?.startLongitude),\n      column: 12,\n    },\n    {\n      title: t(\"managementCourses.list.endLatitude\"),\n      text: formateValue(value?.endLatitude),\n      column: 12,\n    },\n    {\n      title: t(\"managementCourses.list.endLongitude\"),\n      text: formateValue(value?.endLongitude),\n      column: 12,\n    },\n    {\n      title: t(\"managementCourses.list.review\"),\n      text: formateValue(value?.review),\n      column: 12,\n    },\n    {\n      title: t(\"managementCourses.list.checkPoint\"),\n      content: value?.checkPoint.length\n        ? value?.checkPoint?.map((course, i) => (\n            <Link\n              key={i}\n              className=\"mr-10\"\n              to={`${PATH_URL.CHECKPOINT.INDEX}/${PATH_URL.CHECKPOINT.DETAIL}`}\n              state={{ id: course?.id }}\n            >\n              {course.name}\n            </Link>\n          ))\n        : \"-\",\n      column: 12,\n    },\n  ];\n\n  const columns = useRenderForm(columnsData, value);\n\n  return (\n    <div id=\"form-event\">\n      <Row align=\"middle\" className=\"full-width header-table\">\n        <h1>{t(\"managementCourses.titleDetail\")}</h1>\n      </Row>\n      <div className=\"ml-20\">\n        <Row className=\"flex-center mb-15\">\n          <Image\n            className=\"avatar\"\n            src={`${IMAGE_URL}${value?.images[carousel]}/original.jpg`}\n          />\n        </Row>\n        {value?.images && value.images.length > 1 && (\n          <Row className=\"flex-center mb-15\">\n            <Button type=\"primary\" disabled={!carousel} onClick={handlePrev}>\n              {t(\"events.form.btnPrev\")}\n            </Button>\n            <Button\n              type=\"primary\"\n              disabled={carousel === value.images.length - 1}\n              onClick={handleNext}\n            >\n              {t(\"events.form.btnNext\")}\n            </Button>\n          </Row>\n        )}\n\n        <Row gutter={[34]}>\n          {columns}\n          <div className=\"ant-col ant-col-12 pl-17 pr-17\">\n            <h3 className=\"ant-typography fz-12\">\n              {t(\"managementCourses.form.btnCreateBadge\")}\n            </h3>\n            <Button\n              className=\"mt-10\"\n              onClick={() => onOpenModalBadge(\"CREATE\", emptyValue)}\n            >\n              <PlusOutlined />\n            </Button>\n          </div>\n        </Row>\n        <Row className=\"mb-15\">\n          <div className=\"ant-col ant-col-12\">\n            <h3 className=\"ant-typography fz-12\">\n              {t(\"managementCourses.form.hiddenChart\")}\n            </h3>\n            <MyCheckbox checked={!state?.isShowChart} />\n          </div>\n        </Row>\n      </div>\n\n      <BadgeList\n        id={state?.id}\n        onOpenModalBadge={onOpenModalBadge}\n        reloadData={reloadData}\n      />\n      <div className=\"mt-20\">\n        <CheckinList id={state?.id} reloadData={reloadData} />\n      </div>\n\n      <Row className=\"mt-20 jc-center\">\n        <Button className=\"ml-10 mr-10\" onClick={() => navigate(\"..\")}>\n          {t(\"managementCourses.form.btnBack\")}\n        </Button>\n        <Button\n          type=\"primary\"\n          className=\"ml-10 mr-10\"\n          onClick={() => {\n            navigate(`../${PATH_URL.MANAGER_COURSE.EDIT}`, { state: value });\n          }}\n        >\n          {t(\"managementCourses.form.btnEdit\")}\n        </Button>\n      </Row>\n      <ComModal\n        open={openModalBadge}\n        onCancel={() => onCloseModalBadge()}\n        okText=\"登 録\"\n        cancelText=\"戻る\"\n        destroyOnClose\n        content={\n          <BadgeForm\n            state={stateBadge}\n            onCloseModal={onCloseModalBadge}\n            setReloadData={setReloadData}\n          />\n        }\n        footer={null}\n      />\n    </div>\n  );\n}\nCourseDetail.propTypes = {};\n\nCourseDetailItem.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.array,\n  ]),\n};\n\nexport default CourseDetail;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}