{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, Col, Image, Row, Input } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport { TYPE_BADGE, UNIT_BADGE } from \"@common/constant/masterData\";\nimport { IMAGE_URL } from \"@common/config/endpoint\";\nfunction BadgeDetail(props) {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  const handleRedirectListPage = () => {\n    navigate(PATH_URL.BADGE.INDEX);\n  };\n  const getStringType = (objects, type) => {\n    var _objs$;\n    const objs = objects.filter(obj => typeof obj === \"object\" && obj.key === type);\n    return (_objs$ = objs[0]) === null || _objs$ === void 0 ? void 0 : _objs$.label;\n  };\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"detail\"\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    className: \"header-table full-width\"\n  }, /*#__PURE__*/React.createElement(\"h1\", null, t(\"badge.detailBadge\"))), /*#__PURE__*/React.createElement(Row, {\n    className: \"full-width\"\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"text-right title\",\n    span: 12\n  }, t(\"badge.form.image\"), \":\"), /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, /*#__PURE__*/React.createElement(Image, {\n    onClick: e => {\n      e.stopPropagation();\n    },\n    src: `${IMAGE_URL}${state === null || state === void 0 ? void 0 : state.image}/original.jpg`,\n    width: 100,\n    height: 80\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"full-width\"\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"text-right title\",\n    span: 12\n  }, t(\"badge.form.type\"), \":\"), /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, getStringType(TYPE_BADGE, state === null || state === void 0 ? void 0 : state.type))), /*#__PURE__*/React.createElement(Row, {\n    className: \"full-width\"\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"text-right title\",\n    span: 12\n  }, t(\"badge.form.title\"), \":\"), /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, (state === null || state === void 0 ? void 0 : state.title) || '\"')), /*#__PURE__*/React.createElement(Row, {\n    className: \"full-width\"\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"text-right title\",\n    span: 12\n  }, t(\"badge.form.description\"), \":\"), /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, (state === null || state === void 0 ? void 0 : state.description) || '\"')), (state === null || state === void 0 ? void 0 : state.type) !== TYPE_BADGE[2].key && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"full-width\"\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"text-right title\",\n    span: 12\n  }, t(\"badge.form.parameter\"), \":\"), /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, (state === null || state === void 0 ? void 0 : state.achievement) || '\"')), /*#__PURE__*/React.createElement(Row, {\n    className: \"full-width\"\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"text-right title\",\n    span: 12\n  }, t(\"badge.form.unit\"), \":\"), /*#__PURE__*/React.createElement(Col, {\n    span: 12\n  }, getStringType(UNIT_BADGE, state === null || state === void 0 ? void 0 : state.type)))), /*#__PURE__*/React.createElement(Row, {\n    className: \"flex jc-center gap-20 full-width\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleRedirectListPage,\n    className: \"fw-600 cancel-btn\",\n    type: \"default\"\n  }, t(\"badge.form.btnBack\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => navigate(`../${PATH_URL.BADGE.EDIT}`, {\n      state\n    }),\n    className: \"fw-600 submit-btn\"\n  }, t(\"badge.form.edit\"))));\n}\n_s(BadgeDetail, \"r3gPk1TY54u7r37IEgc5gSrwQ6Y=\", false, function () {\n  return [useLocation, useTranslation, useNavigate];\n});\n_c = BadgeDetail;\nBadgeDetail.propTypes = {};\nexport default BadgeDetail;\nvar _c;\n$RefreshReg$(_c, \"BadgeDetail\");","map":{"version":3,"mappings":"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","names":["React","Button","Col","Image","Row","Input","useTranslation","useLocation","useNavigate","PATH_URL","TYPE_BADGE","UNIT_BADGE","IMAGE_URL","BadgeDetail","props","state","t","navigate","handleRedirectListPage","BADGE","INDEX","getStringType","objects","type","objs","filter","obj","key","label","className","align","span","onClick","e","stopPropagation","src","image","width","height","title","description","achievement","EDIT","propTypes"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/badge/BadgeDetail.jsx"],"sourcesContent":["import React from \"react\";\nimport { Button, Col, Image, Row, Input } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nimport PATH_URL from \"@common/config/pathURL\";\nimport { TYPE_BADGE, UNIT_BADGE } from \"@common/constant/masterData\";\nimport { IMAGE_URL } from \"@common/config/endpoint\";\n\nfunction BadgeDetail(props) {\n  const { state } = useLocation();\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const handleRedirectListPage = () => {\n    navigate(PATH_URL.BADGE.INDEX);\n  };\n  const getStringType = (objects, type) => {\n    const objs = objects.filter(\n      (obj) => typeof obj === \"object\" && obj.key === type,\n    );\n    return objs[0]?.label;\n  };\n\n  return (\n    <Row className=\"detail\">\n      <Row align=\"middle\" className=\"header-table full-width\">\n        <h1>{t(\"badge.detailBadge\")}</h1>\n      </Row>\n      <Row className=\"full-width\">\n        <Col className=\"text-right title\" span={12}>\n          {t(\"badge.form.image\")}:\n        </Col>\n        <Col span={12}>\n          <Image\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n            src={`${IMAGE_URL}${state?.image}/original.jpg`}\n            width={100}\n            height={80}\n          />\n        </Col>\n      </Row>\n      <Row className=\"full-width\">\n        <Col className=\"text-right title\" span={12}>\n          {t(\"badge.form.type\")}:\n        </Col>\n        <Col span={12}>{getStringType(TYPE_BADGE, state?.type)}</Col>\n      </Row>\n      <Row className=\"full-width\">\n        <Col className=\"text-right title\" span={12}>\n          {t(\"badge.form.title\")}:\n        </Col>\n        <Col span={12}>{state?.title || '\"'}</Col>\n      </Row>\n      <Row className=\"full-width\">\n        <Col className=\"text-right title\" span={12}>\n          {t(\"badge.form.description\")}:\n        </Col>\n        <Col span={12}>{state?.description || '\"'}</Col>\n      </Row>\n      {state?.type !== TYPE_BADGE[2].key && (\n        <>\n          <Row className=\"full-width\">\n            <Col className=\"text-right title\" span={12}>\n              {t(\"badge.form.parameter\")}:\n            </Col>\n            <Col span={12}>{state?.achievement || '\"'}</Col>\n          </Row>\n          <Row className=\"full-width\">\n            <Col className=\"text-right title\" span={12}>\n              {t(\"badge.form.unit\")}:\n            </Col>\n            <Col span={12}>{getStringType(UNIT_BADGE, state?.type)}</Col>\n          </Row>\n        </>\n      )}\n      <Row className=\"flex jc-center gap-20 full-width\">\n        <Button\n          onClick={handleRedirectListPage}\n          className=\"fw-600 cancel-btn\"\n          type=\"default\"\n        >\n          {t(\"badge.form.btnBack\")}\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => navigate(`../${PATH_URL.BADGE.EDIT}`, { state })}\n          className=\"fw-600 submit-btn\"\n        >\n          {t(\"badge.form.edit\")}\n        </Button>\n      </Row>\n    </Row>\n  );\n}\n\nBadgeDetail.propTypes = {};\n\nexport default BadgeDetail;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}