{"ast":null,"code":"var _s = $RefreshSig$();\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useMemo, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Select, Spin } from \"antd\";\nfunction debounce(func, timeout) {\n  var _this = this;\n  let timer;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(_this, args);\n    }, timeout);\n  };\n}\nfunction DebounceSelect(_ref) {\n  _s();\n  let {\n    fetchOptions,\n    debounceTimeout = 800,\n    ...props\n  } = _ref;\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState([]);\n  const fetchRef = useRef(0);\n  const debounceFetcher = useMemo(() => {\n    const loadOptions = value => {\n      fetchRef.current += 1;\n      const fetchId = fetchRef.current;\n      setOptions([]);\n      setFetching(true);\n      fetchOptions(value).then(newOptions => {\n        if (fetchId !== fetchRef.current) {\n          // for fetch callback order\n          return;\n        }\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n    return debounce(loadOptions, debounceTimeout);\n  }, [fetchOptions, debounceTimeout]);\n  return /*#__PURE__*/React.createElement(Select, _extends({\n    showSearch: true,\n    labelInValue: true,\n    filterOption: false,\n    onSearch: debounceFetcher,\n    notFoundContent: fetching ? /*#__PURE__*/React.createElement(Spin, {\n      size: \"small\"\n    }) : null\n  }, props, {\n    options: options\n  }));\n}\n_s(DebounceSelect, \"wNcJJ6YGHYWNOPi4UncfYGQdgIw=\");\n_c = DebounceSelect;\nDebounceSelect.propTypes = {\n  fetchOptions: PropTypes.func,\n  debounceTimeout: PropTypes.number\n};\nexport default DebounceSelect;\nvar _c;\n$RefreshReg$(_c, \"DebounceSelect\");","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,MAAM,EAAEC,IAAI,QAAQ,MAAM;AAEnC,SAASC,QAAQ,CAACC,IAAI,EAAEC,OAAO,EAAE;EAAA;EAC/B,IAAIC,KAAK;EACT,OAAO,YAAa;IAAA,kCAATC,IAAI;MAAJA,IAAI;IAAA;IACbC,YAAY,CAACF,KAAK,CAAC;IACnBA,KAAK,GAAGG,UAAU,CAAC,MAAM;MACvBL,IAAI,CAACM,KAAK,CAACC,KAAI,EAAEJ,IAAI,CAAC;IACxB,CAAC,EAAEF,OAAO,CAAC;EACb,CAAC;AACH;AAEA,SAASO,cAAc,OAAoD;EAAA;EAAA,IAAnD;IAAEC,YAAY;IAAEC,eAAe,GAAG,GAAG;IAAE,GAAGC;EAAM,CAAC;EACvE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMqB,QAAQ,GAAGtB,MAAM,CAAC,CAAC,CAAC;EAC1B,MAAMuB,eAAe,GAAGxB,OAAO,CAAC,MAAM;IACpC,MAAMyB,WAAW,GAAIC,KAAK,IAAK;MAC7BH,QAAQ,CAACI,OAAO,IAAI,CAAC;MACrB,MAAMC,OAAO,GAAGL,QAAQ,CAACI,OAAO;MAChCL,UAAU,CAAC,EAAE,CAAC;MACdF,WAAW,CAAC,IAAI,CAAC;MACjBJ,YAAY,CAACU,KAAK,CAAC,CAACG,IAAI,CAAEC,UAAU,IAAK;QACvC,IAAIF,OAAO,KAAKL,QAAQ,CAACI,OAAO,EAAE;UAChC;UACA;QACF;QACAL,UAAU,CAACQ,UAAU,CAAC;QACtBV,WAAW,CAAC,KAAK,CAAC;MACpB,CAAC,CAAC;IACJ,CAAC;IACD,OAAOd,QAAQ,CAACmB,WAAW,EAAER,eAAe,CAAC;EAC/C,CAAC,EAAE,CAACD,YAAY,EAAEC,eAAe,CAAC,CAAC;EAEnC,oBACElB,oBAACK,MAAM;IACL2B,UAAU;IACVC,YAAY;IACZC,YAAY,EAAE,KAAM;IACpBC,QAAQ,EAAEV,eAAgB;IAC1BW,eAAe,EAAEhB,QAAQ,gBAAGpB,oBAACM,IAAI;MAAC+B,IAAI,EAAC;IAAO,EAAG,GAAG;EAAK,GACrDlB,KAAK;IACTG,OAAO,EAAEA;EAAQ,GACjB;AAEN;AAAA,GAjCSN,cAAc;AAAA,KAAdA,cAAc;AAmCvBA,cAAc,CAACsB,SAAS,GAAG;EACzBrB,YAAY,EAAEb,SAAS,CAACI,IAAI;EAC5BU,eAAe,EAAEd,SAAS,CAACmC;AAC7B,CAAC;AAED,eAAevB,cAAc;AAAA;AAAA","names":["React","useMemo","useRef","useState","PropTypes","Select","Spin","debounce","func","timeout","timer","args","clearTimeout","setTimeout","apply","_this","DebounceSelect","fetchOptions","debounceTimeout","props","fetching","setFetching","options","setOptions","fetchRef","debounceFetcher","loadOptions","value","current","fetchId","then","newOptions","showSearch","labelInValue","filterOption","onSearch","notFoundContent","size","propTypes","number"],"sources":["/home/huynd/animalwatch_admin/src/components/form/MySearchInput.jsx"],"sourcesContent":["import React, { useMemo, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Select, Spin } from \"antd\";\n\nfunction debounce(func, timeout) {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, timeout);\n  };\n}\n\nfunction DebounceSelect({ fetchOptions, debounceTimeout = 800, ...props }) {\n  const [fetching, setFetching] = useState(false);\n  const [options, setOptions] = useState([]);\n  const fetchRef = useRef(0);\n  const debounceFetcher = useMemo(() => {\n    const loadOptions = (value) => {\n      fetchRef.current += 1;\n      const fetchId = fetchRef.current;\n      setOptions([]);\n      setFetching(true);\n      fetchOptions(value).then((newOptions) => {\n        if (fetchId !== fetchRef.current) {\n          // for fetch callback order\n          return;\n        }\n        setOptions(newOptions);\n        setFetching(false);\n      });\n    };\n    return debounce(loadOptions, debounceTimeout);\n  }, [fetchOptions, debounceTimeout]);\n\n  return (\n    <Select\n      showSearch\n      labelInValue\n      filterOption={false}\n      onSearch={debounceFetcher}\n      notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n      {...props}\n      options={options}\n    />\n  );\n}\n\nDebounceSelect.propTypes = {\n  fetchOptions: PropTypes.func,\n  debounceTimeout: PropTypes.number,\n};\n\nexport default DebounceSelect;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}