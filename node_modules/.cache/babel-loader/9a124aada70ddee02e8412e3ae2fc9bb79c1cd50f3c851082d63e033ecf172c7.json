{"ast":null,"code":"import { DATE_TIME_FORMAT_MINUTE } from \"@common/constant/date\";\nimport dayjs from \"dayjs\";\nconst range = (start, end) => {\n  const result = [];\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n  return result;\n};\nexport const formatDateTimeTable = function (value) {\n  let format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DATE_TIME_FORMAT_MINUTE;\n  if (!value) return \"-\";\n  const newDay = dayjs(value);\n  return newDay === null || newDay === void 0 ? void 0 : newDay.locale(\"ja\").format(format);\n};\nexport const isBeforeFromToday = function (date) {\n  let valueCompare = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"day\";\n  return dayjs(date).diff(dayjs(), valueCompare) < 0;\n};\nexport const validateDateStatus = (startDate, endDate) => {\n  if (dayjs(startDate).diff(Date.now()) > 0) return \"Prepare\";\n  if (!endDate && dayjs(startDate).diff(Date.now()) < 0) return \"Inprogress\";\n  if (dayjs(startDate).diff(Date.now()) < 0 && dayjs(endDate).diff(Date.now()) > 0) return \"Inprogress\";\n  return \"End\";\n};\nexport const disableDateBefore = current => {\n  return current && current < dayjs().startOf(\"day\");\n};\nexport const disableBeforeDateWithParams = (current, date) => {\n  if (!date) return null;\n  return current && dayjs(current).isBefore(date, \"day\");\n};\nexport const disableAfterDateWithParams = (current, date) => {\n  if (!date) return null;\n  return current && dayjs(current).isAfter(date, \"day\");\n};\nexport const disableTimeBefore = (hour, minute) => ({\n  disabledHours: () => range(0, 24).splice(0, hour),\n  disabledMinutes: () => range(0, minute)\n});\nexport const disableTimeAfter = (hour, minute) => ({\n  disabledHours: () => range(0, 24).splice(hour, 24),\n  disabledMinutes: () => range(minute, 60)\n});\nexport const disableRangeTime = (startHour, endHour, startMinute, endMinute, current) => ({\n  disabledHours: () => [...range(0, 24).splice(0, startHour), ...range(0, 24).splice(endHour, 24)],\n  disabledMinutes: () =>\n  // eslint-disable-next-line no-nested-ternary\n  startHour === endHour - 1 ? [...range(0, startMinute), ...range(endMinute, 60)] :\n  // eslint-disable-next-line no-nested-ternary\n  dayjs().hour() === dayjs(current).hour() ? range(0, dayjs().minute()) : endHour - 1 === dayjs(current).hour() ? range(endMinute, 60) : []\n});\nexport const convertSecondsToTime = function () {\n  let seconds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor(seconds % 3600 / 60);\n  const remainingSeconds = seconds % 60;\n  return dayjs().hour(hours).minute(minutes).second(remainingSeconds).format(\"H:mm:ss\");\n};\n\n// \"YYYY-MM-DD\"\nexport const convertDateFormToString = date => {\n  if (!date) return null;\n  const newDate = new Date(\"Wed Sep 13 2023 17:10:01 GMT+0700 (Giờ Đông Dương)\");\n  const year = newDate.getFullYear();\n  const month = String(newDate.getMonth() + 1).padStart(2, \"0\");\n  const day = String(newDate.getDate()).padStart(2, \"0\");\n  const formattedDate = `${year}-${month}-${day}`;\n  return formattedDate;\n};","map":{"version":3,"mappings":"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","names":["DATE_TIME_FORMAT_MINUTE","dayjs","range","start","end","result","i","push","formatDateTimeTable","value","format","newDay","locale","isBeforeFromToday","date","valueCompare","diff","validateDateStatus","startDate","endDate","Date","now","disableDateBefore","current","startOf","disableBeforeDateWithParams","isBefore","disableAfterDateWithParams","isAfter","disableTimeBefore","hour","minute","disabledHours","splice","disabledMinutes","disableTimeAfter","disableRangeTime","startHour","endHour","startMinute","endMinute","convertSecondsToTime","seconds","hours","Math","floor","minutes","remainingSeconds","second","convertDateFormToString","newDate","year","getFullYear","month","String","getMonth","padStart","day","getDate","formattedDate"],"sources":["/home/huynd/animalwatch_admin/src/common/utils/dateHelper.js"],"sourcesContent":["import { DATE_TIME_FORMAT_MINUTE } from \"@common/constant/date\";\nimport dayjs from \"dayjs\";\n\nconst range = (start, end) => {\n  const result = [];\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n  return result;\n};\n\nexport const formatDateTimeTable = (\n  value,\n  format = DATE_TIME_FORMAT_MINUTE,\n) => {\n  if (!value) return \"-\";\n  const newDay = dayjs(value);\n  return newDay?.locale(\"ja\").format(format);\n};\n\nexport const isBeforeFromToday = (date, valueCompare = \"day\") => {\n  return dayjs(date).diff(dayjs(), valueCompare) < 0;\n};\n\nexport const validateDateStatus = (startDate, endDate) => {\n  if (dayjs(startDate).diff(Date.now()) > 0) return \"Prepare\";\n  if (!endDate && dayjs(startDate).diff(Date.now()) < 0) return \"Inprogress\";\n  if (\n    dayjs(startDate).diff(Date.now()) < 0 &&\n    dayjs(endDate).diff(Date.now()) > 0\n  )\n    return \"Inprogress\";\n\n  return \"End\";\n};\n\nexport const disableDateBefore = (current) => {\n  return current && current < dayjs().startOf(\"day\");\n};\n\nexport const disableBeforeDateWithParams = (current, date) => {\n  if (!date) return null;\n  return current && dayjs(current).isBefore(date, \"day\");\n};\n\nexport const disableAfterDateWithParams = (current, date) => {\n  if (!date) return null;\n  return current && dayjs(current).isAfter(date, \"day\");\n};\n\nexport const disableTimeBefore = (hour, minute) => ({\n  disabledHours: () => range(0, 24).splice(0, hour),\n  disabledMinutes: () => range(0, minute),\n});\n\nexport const disableTimeAfter = (hour, minute) => ({\n  disabledHours: () => range(0, 24).splice(hour, 24),\n  disabledMinutes: () => range(minute, 60),\n});\n\nexport const disableRangeTime = (\n  startHour,\n  endHour,\n  startMinute,\n  endMinute,\n  current,\n) => ({\n  disabledHours: () => [\n    ...range(0, 24).splice(0, startHour),\n    ...range(0, 24).splice(endHour, 24),\n  ],\n  disabledMinutes: () =>\n    // eslint-disable-next-line no-nested-ternary\n    startHour === endHour - 1\n      ? [...range(0, startMinute), ...range(endMinute, 60)]\n      : // eslint-disable-next-line no-nested-ternary\n      dayjs().hour() === dayjs(current).hour()\n      ? range(0, dayjs().minute())\n      : endHour - 1 === dayjs(current).hour()\n      ? range(endMinute, 60)\n      : [],\n});\n\nexport const convertSecondsToTime = (seconds = 0) => {\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  const remainingSeconds = seconds % 60;\n\n  return dayjs()\n    .hour(hours)\n    .minute(minutes)\n    .second(remainingSeconds)\n    .format(\"H:mm:ss\");\n};\n\n// \"YYYY-MM-DD\"\nexport const convertDateFormToString = (date) => {\n  if (!date) return null;\n  const newDate = new Date(\n    \"Wed Sep 13 2023 17:10:01 GMT+0700 (Giờ Đông Dương)\",\n  );\n\n  const year = newDate.getFullYear();\n  const month = String(newDate.getMonth() + 1).padStart(2, \"0\");\n  const day = String(newDate.getDate()).padStart(2, \"0\");\n\n  const formattedDate = `${year}-${month}-${day}`;\n\n  return formattedDate;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}