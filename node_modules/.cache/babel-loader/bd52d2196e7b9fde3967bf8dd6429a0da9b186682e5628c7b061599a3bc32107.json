{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { t } from \"i18next\";\nimport PropTypes from \"prop-types\";\nimport ComTable from \"@components/common/ComTable\";\nimport { eventApi } from \"@services/apis/eventApi\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport { Avatar, Button, message, Modal } from \"antd\";\nimport { IMAGE_URL } from \"@common/config/endpoint\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { formatDateTimeTable } from \"@common/utils/dateHelper\";\nimport { useLocation } from \"react-router-dom\";\nfunction EventListCmt(_ref) {\n  _s();\n  var _value$paginate;\n  let {\n    id\n  } = _ref;\n  const {\n    state\n  } = useLocation();\n  const [refetch, setRefetch] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    eventId: id\n  });\n  const {\n    loading,\n    value\n  } = useFetch(() => eventApi.getCmtsEvent(pagination), [pagination, refetch]);\n  const handleDelete = cmtId => {\n    eventApi.deleteCmtEvent(cmtId).then(() => {\n      setRefetch(`deleteCmtEvent-${cmtId}`);\n      message.success(t(\"events.message.deleteCmtSuccess\"));\n    }).catch(() => {\n      message.error(t(\"events.message.deleteCmtErr\"));\n    });\n  };\n  const onChangePagination = (currentPage, totalItemPerPage) => {\n    setPagination(curState => ({\n      ...curState,\n      page: currentPage,\n      limit: totalItemPerPage\n    }));\n  };\n  const confirm = cmtId => {\n    Modal.confirm({\n      icon: /*#__PURE__*/React.createElement(ExclamationCircleOutlined, null),\n      centered: true,\n      content: t(\"events.modal.textConfirmDelCmt\"),\n      okText: t(\"events.modal.textYes\"),\n      cancelText: t(\"events.modal.textNo\"),\n      onOk: () => handleDelete(cmtId)\n    });\n  };\n  const columns = [{\n    title: \"ID\",\n    dataIndex: \"id\",\n    width: 100,\n    align: \"center\"\n  }, {\n    title: t(\"events.list.avatar\"),\n    dataIndex: \"user\",\n    align: \"center\",\n    render: user => /*#__PURE__*/React.createElement(Avatar, {\n      src: `${IMAGE_URL}${user === null || user === void 0 ? void 0 : user.avatar}/original.jpg`\n    })\n  }, {\n    title: t(\"events.list.timeCmt\"),\n    dataIndex: \"createdAt\",\n    align: \"center\",\n    render: createdAt => /*#__PURE__*/React.createElement(\"span\", null, formatDateTimeTable(createdAt))\n  }, {\n    title: t(\"events.list.contentCmt\"),\n    dataIndex: \"content\",\n    align: \"center\"\n  }, {\n    title: t(\"events.form.operation\"),\n    align: \"center\",\n    render: cmt => /*#__PURE__*/React.createElement(Button, {\n      className: \"btn submit-btn ml-10\",\n      type: \"primary\",\n      disabled: !(state !== null && state !== void 0 && state.status),\n      onClick: e => {\n        e.stopPropagation();\n        confirm(cmt.id);\n      }\n    }, t(\"events.form.btnRemoveCmt\"))\n  }];\n  const totalPage = value === null || value === void 0 ? void 0 : (_value$paginate = value.paginate) === null || _value$paginate === void 0 ? void 0 : _value$paginate.totalPage;\n  const paginationProp = {\n    position: [\"bottomRight\"],\n    total: totalPage * pagination.limit,\n    showSizeChanger: true,\n    onChange: onChangePagination,\n    current: pagination.page\n  };\n  return /*#__PURE__*/React.createElement(ComTable, {\n    title: t(\"events.commentTitle\"),\n    maxWidth: 900,\n    columns: columns,\n    loading: loading,\n    data: (value === null || value === void 0 ? void 0 : value.data) || [],\n    pagination: paginationProp\n  });\n}\n_s(EventListCmt, \"R3CZLzaX+DpqKLB75TvtywnmumA=\", false, function () {\n  return [useLocation, useFetch];\n});\n_c = EventListCmt;\nEventListCmt.propTypes = {\n  id: PropTypes.number\n};\nexport default EventListCmt;\nvar _c;\n$RefreshReg$(_c, \"EventListCmt\");","map":{"version":3,"mappings":"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","names":["React","useState","t","PropTypes","ComTable","eventApi","useFetch","Avatar","Button","message","Modal","IMAGE_URL","ExclamationCircleOutlined","formatDateTimeTable","useLocation","EventListCmt","id","state","refetch","setRefetch","pagination","setPagination","page","limit","eventId","loading","value","getCmtsEvent","handleDelete","cmtId","deleteCmtEvent","then","success","catch","error","onChangePagination","currentPage","totalItemPerPage","curState","confirm","icon","centered","content","okText","cancelText","onOk","columns","title","dataIndex","width","align","render","user","src","avatar","createdAt","cmt","className","type","disabled","status","onClick","e","stopPropagation","totalPage","paginate","paginationProp","position","total","showSizeChanger","onChange","current","maxWidth","data","propTypes","number"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/event/EventListCmt.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { t } from \"i18next\";\nimport PropTypes from \"prop-types\";\n\nimport ComTable from \"@components/common/ComTable\";\nimport { eventApi } from \"@services/apis/eventApi\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport { Avatar, Button, message, Modal } from \"antd\";\nimport { IMAGE_URL } from \"@common/config/endpoint\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { formatDateTimeTable } from \"@common/utils/dateHelper\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction EventListCmt({ id }) {\n  const { state } = useLocation();\n  const [refetch, setRefetch] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    eventId: id,\n  });\n\n  const { loading, value } = useFetch(\n    () => eventApi.getCmtsEvent(pagination),\n    [pagination, refetch],\n  );\n\n  const handleDelete = (cmtId) => {\n    eventApi\n      .deleteCmtEvent(cmtId)\n      .then(() => {\n        setRefetch(`deleteCmtEvent-${cmtId}`);\n        message.success(t(\"events.message.deleteCmtSuccess\"));\n      })\n      .catch(() => {\n        message.error(t(\"events.message.deleteCmtErr\"));\n      });\n  };\n\n  const onChangePagination = (currentPage, totalItemPerPage) => {\n    setPagination((curState) => ({\n      ...curState,\n      page: currentPage,\n      limit: totalItemPerPage,\n    }));\n  };\n\n  const confirm = (cmtId) => {\n    Modal.confirm({\n      icon: <ExclamationCircleOutlined />,\n      centered: true,\n      content: t(\"events.modal.textConfirmDelCmt\"),\n      okText: t(\"events.modal.textYes\"),\n      cancelText: t(\"events.modal.textNo\"),\n      onOk: () => handleDelete(cmtId),\n    });\n  };\n\n  const columns = [\n    { title: \"ID\", dataIndex: \"id\", width: 100, align: \"center\" },\n    {\n      title: t(\"events.list.avatar\"),\n      dataIndex: \"user\",\n      align: \"center\",\n      render: (user) => (\n        <Avatar src={`${IMAGE_URL}${user?.avatar}/original.jpg`} />\n      ),\n    },\n    {\n      title: t(\"events.list.timeCmt\"),\n      dataIndex: \"createdAt\",\n      align: \"center\",\n      render: (createdAt) => <span>{formatDateTimeTable(createdAt)}</span>,\n    },\n    {\n      title: t(\"events.list.contentCmt\"),\n      dataIndex: \"content\",\n      align: \"center\",\n    },\n    {\n      title: t(\"events.form.operation\"),\n      align: \"center\",\n      render: (cmt) => (\n        <Button\n          className=\"btn submit-btn ml-10\"\n          type=\"primary\"\n          disabled={!state?.status}\n          onClick={(e) => {\n            e.stopPropagation();\n            confirm(cmt.id);\n          }}\n        >\n          {t(\"events.form.btnRemoveCmt\")}\n        </Button>\n      ),\n    },\n  ];\n\n  const totalPage = value?.paginate?.totalPage;\n  const paginationProp = {\n    position: [\"bottomRight\"],\n    total: totalPage * pagination.limit,\n    showSizeChanger: true,\n    onChange: onChangePagination,\n    current: pagination.page,\n  };\n\n  return (\n    <ComTable\n      title={t(\"events.commentTitle\")}\n      maxWidth={900}\n      columns={columns}\n      loading={loading}\n      data={value?.data || []}\n      pagination={paginationProp}\n    />\n  );\n}\n\nEventListCmt.propTypes = {\n  id: PropTypes.number,\n};\n\nexport default EventListCmt;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}