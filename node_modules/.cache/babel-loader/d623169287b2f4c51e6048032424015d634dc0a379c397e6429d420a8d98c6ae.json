{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"antd\";\nimport logoCC from \"@assets/imgs/CCLogo.png\";\nimport ComTextField from \"@components/form/MyInputField\";\nimport { validate } from \"@validate/index\";\nimport { t } from \"i18next\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { authApi } from \"@services/apis/auth\";\nimport PATH_URL from \"@common/config/pathURL\";\nfunction SendMailToReset() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [, forceUpdate] = useState({});\n  const handleResetPassword = async values => {\n    try {\n      setLoading(true);\n      const payload = {\n        ...values,\n        email: location.state.email,\n        otpCode: parseInt(values.otpCode, 10)\n      };\n      const res = await authApi.resetPassword(payload);\n      if (!res.success) return;\n      setLoading(false);\n      navigate(PATH_URL.LOGIN);\n    } catch (error) {\n      setLoading(false);\n      throw new Error(error);\n    }\n  };\n  useEffect(() => {\n    var _location$state;\n    if (!((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.email)) {\n      navigate(PATH_URL.LOGIN);\n    }\n    forceUpdate({});\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\"\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoCC,\n    alt: \"logo\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"full-height flex-center px-30 mt-10\"\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    name: \"normal_login\",\n    className: \"login-form\",\n    layout: \"vertical\",\n    onFinish: handleResetPassword\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"fz-23 mb-30 fw-400 color-black-light\"\n  }, t(\"auth.resetPassword\")), /*#__PURE__*/React.createElement(ComTextField, {\n    type: \"text\",\n    name: \"otpCode\",\n    clsInput: \"input-email\",\n    className: \"full-width\",\n    label: t(\"auth.codeOtp\"),\n    placeholder: t(\"auth.codeOtp\"),\n    rules: [validate.number(t)]\n  }), /*#__PURE__*/React.createElement(ComTextField, {\n    type: \"password\",\n    name: \"password\",\n    clsInput: \"input-email\",\n    className: \"full-width\",\n    label: t(\"auth.newPassword\"),\n    placeholder: t(\"auth.newPassword\"),\n    rules: [validate.validatePassword(t)]\n  }), /*#__PURE__*/React.createElement(ComTextField, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    clsInput: \"input-email\",\n    className: \"full-width\",\n    label: t(\"auth.confirmNewPassword\"),\n    placeholder: t(\"auth.confirmNewPassword\"),\n    dependencies: [\"password\"],\n    rules: [validate.validateCompareValue(t, \"password\")]\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: PATH_URL.FORGOT_PASSWORD\n  }, \"G\\u1EEDi l\\u1EA1i m\\xE3 Otp\"), /*#__PURE__*/React.createElement(Form.Item, {\n    shouldUpdate: true\n  }, () => /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"button-submit\",\n    disabled: !form.isFieldsTouched(true) || !!form.getFieldsError().filter(_ref => {\n      let {\n        errors\n      } = _ref;\n      return errors.length;\n    }).length,\n    loading: loading\n  }, t(\"auth.btnLogin\"))))));\n}\n_s(SendMailToReset, \"ug1L7QjDzjMvaa4mtSCIi5cQBe4=\", false, function () {\n  return [useLocation, useNavigate, Form.useForm];\n});\n_c = SendMailToReset;\nSendMailToReset.propTypes = {};\nexport default SendMailToReset;\nvar _c;\n$RefreshReg$(_c, \"SendMailToReset\");","map":{"version":3,"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,QAAQ,MAAM;AACnC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,YAAY,MAAM,+BAA+B;AACxD,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,CAAC,QAAQ,SAAS;AAC3B,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACjE,SAASC,OAAO,QAAQ,qBAAqB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAE7C,SAASC,eAAe,GAAG;EAAA;EACzB,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAMM,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAM,CAACM,IAAI,CAAC,GAAGb,IAAI,CAACc,OAAO,EAAE;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,GAAGmB,WAAW,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMoB,mBAAmB,GAAG,MAAOC,MAAM,IAAK;IAC5C,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,OAAO,GAAG;QACd,GAAGD,MAAM;QACTE,KAAK,EAAEV,QAAQ,CAACW,KAAK,CAACD,KAAK;QAC3BE,OAAO,EAAEC,QAAQ,CAACL,MAAM,CAACI,OAAO,EAAE,EAAE;MACtC,CAAC;MACD,MAAME,GAAG,GAAG,MAAMjB,OAAO,CAACkB,aAAa,CAACN,OAAO,CAAC;MAEhD,IAAI,CAACK,GAAG,CAACE,OAAO,EAAE;MAClBX,UAAU,CAAC,KAAK,CAAC;MACjBJ,QAAQ,CAACH,QAAQ,CAACmB,KAAK,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdb,UAAU,CAAC,KAAK,CAAC;MACjB,MAAM,IAAIc,KAAK,CAACD,KAAK,CAAC;IACxB;EACF,CAAC;EAEDhC,SAAS,CAAC,MAAM;IAAA;IACd,IAAI,qBAACc,QAAQ,CAACW,KAAK,4CAAdX,gBAAgBU,KAAK,GAAE;MAC1BT,QAAQ,CAACH,QAAQ,CAACmB,KAAK,CAAC;IAC1B;IACAX,WAAW,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB;IAAKmC,SAAS,EAAC;EAAO,gBACpBnC;IAAKmC,SAAS,EAAC;EAAM,gBACnBnC;IAAKoC,GAAG,EAAE/B,MAAO;IAACgC,GAAG,EAAC;EAAM,EAAG,CAC3B,eACNrC;IAAKmC,SAAS,EAAC;EAAqC,gBAClDnC,oBAACI,IAAI;IACHa,IAAI,EAAEA,IAAK;IACXqB,IAAI,EAAC,cAAc;IACnBH,SAAS,EAAC,YAAY;IACtBI,MAAM,EAAC,UAAU;IACjBC,QAAQ,EAAElB;EAAoB,gBAE9BtB;IAAImC,SAAS,EAAC;EAAsC,GACjD3B,CAAC,CAAC,oBAAoB,CAAC,CACrB,eAELR,oBAACM,YAAY;IACXmC,IAAI,EAAC,MAAM;IACXH,IAAI,EAAC,SAAS;IACdI,QAAQ,EAAC,aAAa;IACtBP,SAAS,EAAC,YAAY;IACtBQ,KAAK,EAAEnC,CAAC,CAAC,cAAc,CAAE;IACzBoC,WAAW,EAAEpC,CAAC,CAAC,cAAc,CAAE;IAC/BqC,KAAK,EAAE,CAACtC,QAAQ,CAACuC,MAAM,CAACtC,CAAC,CAAC;EAAE,EAC5B,eAEFR,oBAACM,YAAY;IACXmC,IAAI,EAAC,UAAU;IACfH,IAAI,EAAC,UAAU;IACfI,QAAQ,EAAC,aAAa;IACtBP,SAAS,EAAC,YAAY;IACtBQ,KAAK,EAAEnC,CAAC,CAAC,kBAAkB,CAAE;IAC7BoC,WAAW,EAAEpC,CAAC,CAAC,kBAAkB,CAAE;IACnCqC,KAAK,EAAE,CAACtC,QAAQ,CAACwC,gBAAgB,CAACvC,CAAC,CAAC;EAAE,EACtC,eAEFR,oBAACM,YAAY;IACXmC,IAAI,EAAC,UAAU;IACfH,IAAI,EAAC,iBAAiB;IACtBI,QAAQ,EAAC,aAAa;IACtBP,SAAS,EAAC,YAAY;IACtBQ,KAAK,EAAEnC,CAAC,CAAC,yBAAyB,CAAE;IACpCoC,WAAW,EAAEpC,CAAC,CAAC,yBAAyB,CAAE;IAC1CwC,YAAY,EAAE,CAAC,UAAU,CAAE;IAC3BH,KAAK,EAAE,CAACtC,QAAQ,CAAC0C,oBAAoB,CAACzC,CAAC,EAAE,UAAU,CAAC;EAAE,EACtD,eACFR,oBAACS,IAAI;IAACyC,EAAE,EAAErC,QAAQ,CAACsC;EAAgB,iCAAsB,eAEzDnD,oBAACI,IAAI,CAACgD,IAAI;IAACC,YAAY;EAAA,GACpB,mBACCrD,oBAACG,MAAM;IACLsC,IAAI,EAAC,SAAS;IACda,QAAQ,EAAC,QAAQ;IACjBnB,SAAS,EAAC,eAAe;IACzBoB,QAAQ,EACN,CAACtC,IAAI,CAACuC,eAAe,CAAC,IAAI,CAAC,IAC3B,CAAC,CAACvC,IAAI,CAACwC,cAAc,EAAE,CAACC,MAAM,CAACC;MAAA,IAAC;QAAEC;MAAO,CAAC;MAAA,OAAKA,MAAM,CAACC,MAAM;IAAA,EAAC,CAC1DA,MACJ;IACD1C,OAAO,EAAEA;EAAQ,GAEhBX,CAAC,CAAC,eAAe,CAAC,CAEtB,CACS,CACP,CACH,CACF;AAEV;AAAA,GAvGSM,eAAe;EAAA,QACLJ,WAAW,EACXC,WAAW,EACbP,IAAI,CAACc,OAAO;AAAA;AAAA,KAHpBJ,eAAe;AAyGxBA,eAAe,CAACgD,SAAS,GAAG,CAAC,CAAC;AAE9B,eAAehD,eAAe;AAAA;AAAA","names":["React","useEffect","useState","Button","Form","logoCC","ComTextField","validate","t","Link","useLocation","useNavigate","authApi","PATH_URL","SendMailToReset","location","navigate","form","useForm","loading","setLoading","forceUpdate","handleResetPassword","values","payload","email","state","otpCode","parseInt","res","resetPassword","success","LOGIN","error","Error","className","src","alt","name","layout","onFinish","type","clsInput","label","placeholder","rules","number","validatePassword","dependencies","validateCompareValue","to","FORGOT_PASSWORD","Item","shouldUpdate","htmlType","disabled","isFieldsTouched","getFieldsError","filter","_ref","errors","length","propTypes"],"sources":["/home/huynd/animalwatch_admin/src/pages/auth/ResetPassword.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"antd\";\nimport logoCC from \"@assets/imgs/CCLogo.png\";\nimport ComTextField from \"@components/form/MyInputField\";\nimport { validate } from \"@validate/index\";\nimport { t } from \"i18next\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { authApi } from \"@services/apis/auth\";\nimport PATH_URL from \"@common/config/pathURL\";\n\nfunction SendMailToReset() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [, forceUpdate] = useState({});\n\n  const handleResetPassword = async (values) => {\n    try {\n      setLoading(true);\n      const payload = {\n        ...values,\n        email: location.state.email,\n        otpCode: parseInt(values.otpCode, 10),\n      };\n      const res = await authApi.resetPassword(payload);\n\n      if (!res.success) return;\n      setLoading(false);\n      navigate(PATH_URL.LOGIN);\n    } catch (error) {\n      setLoading(false);\n      throw new Error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (!location.state?.email) {\n      navigate(PATH_URL.LOGIN);\n    }\n    forceUpdate({});\n  }, []);\n\n  return (\n    <div className=\"login\">\n      <div className=\"logo\">\n        <img src={logoCC} alt=\"logo\" />\n      </div>\n      <div className=\"full-height flex-center px-30 mt-10\">\n        <Form\n          form={form}\n          name=\"normal_login\"\n          className=\"login-form\"\n          layout=\"vertical\"\n          onFinish={handleResetPassword}\n        >\n          <h1 className=\"fz-23 mb-30 fw-400 color-black-light\">\n            {t(\"auth.resetPassword\")}\n          </h1>\n\n          <ComTextField\n            type=\"text\"\n            name=\"otpCode\"\n            clsInput=\"input-email\"\n            className=\"full-width\"\n            label={t(\"auth.codeOtp\")}\n            placeholder={t(\"auth.codeOtp\")}\n            rules={[validate.number(t)]}\n          />\n\n          <ComTextField\n            type=\"password\"\n            name=\"password\"\n            clsInput=\"input-email\"\n            className=\"full-width\"\n            label={t(\"auth.newPassword\")}\n            placeholder={t(\"auth.newPassword\")}\n            rules={[validate.validatePassword(t)]}\n          />\n\n          <ComTextField\n            type=\"password\"\n            name=\"confirmPassword\"\n            clsInput=\"input-email\"\n            className=\"full-width\"\n            label={t(\"auth.confirmNewPassword\")}\n            placeholder={t(\"auth.confirmNewPassword\")}\n            dependencies={[\"password\"]}\n            rules={[validate.validateCompareValue(t, \"password\")]}\n          />\n          <Link to={PATH_URL.FORGOT_PASSWORD}>Gửi lại mã Otp</Link>\n\n          <Form.Item shouldUpdate>\n            {() => (\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"button-submit\"\n                disabled={\n                  !form.isFieldsTouched(true) ||\n                  !!form.getFieldsError().filter(({ errors }) => errors.length)\n                    .length\n                }\n                loading={loading}\n              >\n                {t(\"auth.btnLogin\")}\n              </Button>\n            )}\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nSendMailToReset.propTypes = {};\n\nexport default SendMailToReset;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}