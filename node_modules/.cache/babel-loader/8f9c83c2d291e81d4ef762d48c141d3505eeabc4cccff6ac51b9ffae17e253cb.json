{"ast":null,"code":"var _s = $RefreshSig$();\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { Button, message, Modal } from \"antd\";\nimport { t } from \"i18next\";\nimport React, { useState } from \"react\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport ComTable from \"@components/common/ComTable\";\nimport { resultImageApi } from \"@services/apis/result-image\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TYPE_RESULT_IMG } from \"@common/constant/masterData\";\nimport { IMAGE_URL } from \"@common/config/endpoint\";\nfunction ResultImageList() {\n  _s();\n  var _value$paginate;\n  const navigate = useNavigate();\n  const [refetch, setRefetch] = useState(false);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\"\n  });\n  const {\n    loading,\n    value\n  } = useFetch(ourRequest => resultImageApi.getResultImage(pagination, ourRequest), [pagination, refetch]);\n  const handleSearch = keyWord => {\n    setPagination(curState => ({\n      ...curState,\n      keyword: keyWord === null || keyWord === void 0 ? void 0 : keyWord.trim(),\n      page: 1\n    }));\n  };\n  const handleChangeTable = (currentPage, totalItemPerPage) => {\n    setPagination(curState => ({\n      ...curState,\n      page: currentPage,\n      limit: totalItemPerPage\n    }));\n  };\n  const handleCreate = () => {\n    navigate(PATH_URL.USERTAG_MANAGERMENT.CREATE);\n  };\n  const handleEditResultImage = (e, resultImage) => {\n    e.stopPropagation();\n    navigate(PATH_URL.USERTAG_MANAGERMENT.EDIT, {\n      state: resultImage\n    });\n  };\n  const handleDeleteResultImage = resultImageId => {\n    resultImageApi.deleteResultImage(resultImageId).then(() => {\n      setRefetch(preState => !preState);\n      message.success(t(\"resultImageManagement.message.deleteSuccess\"));\n    }).catch(() => {\n      message.error(t(\"resultImageManagement.message.deleteErr\"));\n    });\n  };\n  const confirm = resultImageId => {\n    Modal.confirm({\n      icon: /*#__PURE__*/React.createElement(ExclamationCircleOutlined, null),\n      centered: true,\n      content: t(\"resultImageManagement.modal.textConfirmDel\"),\n      okText: t(\"resultImageManagement.modal.textYes\"),\n      cancelText: t(\"resultImageManagement.modal.textNo\"),\n      onOk: () => handleDeleteResultImage(resultImageId)\n    });\n  };\n  const columns = [{\n    title: t(\"resultImageManagement.list.id\"),\n    dataIndex: \"id\",\n    align: \"center\",\n    width: 120\n  }, {\n    title: t(\"resultImageManagement.list.type\"),\n    dataIndex: \"type\",\n    align: \"center\",\n    sortDirections: [\"ascend\"],\n    render: values => {\n      var _TYPE_RESULT_IMG;\n      return (_TYPE_RESULT_IMG = TYPE_RESULT_IMG[values - 1]) === null || _TYPE_RESULT_IMG === void 0 ? void 0 : _TYPE_RESULT_IMG.label;\n    }\n  }, {\n    title: t(\"resultImageManagement.list.title\"),\n    dataIndex: \"title\",\n    align: \"center\",\n    sortDirections: [\"ascend\"]\n  }, {\n    title: t(\"resultImageManagement.list.image\"),\n    dataIndex: \"image\",\n    align: \"center\",\n    sortDirections: [\"ascend\"],\n    render: image => /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-badge\",\n      src: `${IMAGE_URL}${image}/original.jpg`,\n      alt: \"img-badge\"\n    })\n  }, {\n    title: t(\"resultImageManagement.list.initialCondition\"),\n    dataIndex: \"initialCondition\",\n    align: \"center\",\n    sortDirections: [\"ascend\"]\n  }, {\n    title: t(\"resultImageManagement.list.finalCondition\"),\n    dataIndex: \"finalCondition\",\n    align: \"center\",\n    sortDirections: [\"ascend\"],\n    render: values => {\n      return values || \"-\";\n    }\n  }, {\n    title: t(\"resultImageManagement.list.operation\"),\n    align: \"center\",\n    width: 300,\n    render: resultImage => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"full-height full-width\"\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      className: \"mr-10\",\n      onClick: e => handleEditResultImage(e, resultImage)\n    }, t(\"table.btnEdit\")), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: e => {\n        e.stopPropagation();\n        confirm(resultImage.id);\n      }\n    }, t(\"table.btnDel\")))\n  }];\n  const totalPage = value === null || value === void 0 ? void 0 : (_value$paginate = value.paginate) === null || _value$paginate === void 0 ? void 0 : _value$paginate.totalPage;\n  const paginationProps = {\n    position: [\"bottomRight\"],\n    total: totalPage * 10,\n    current: pagination.page,\n    showSizeChanger: true,\n    onChange: handleChangeTable\n  };\n  return /*#__PURE__*/React.createElement(ComTable, {\n    title: t(\"resultImageManagement.title\"),\n    loading: loading,\n    columns: columns,\n    data: value === null || value === void 0 ? void 0 : value.data,\n    pagination: paginationProps,\n    onAddTable: handleCreate,\n    onSearch: handleSearch\n  });\n}\n_s(ResultImageList, \"lh2BU8qi241iI/wTmUImrMH0dYc=\", false, function () {\n  return [useNavigate, useFetch];\n});\n_c = ResultImageList;\nexport default ResultImageList;\nvar _c;\n$RefreshReg$(_c, \"ResultImageList\");","map":{"version":3,"mappings":"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","names":["ExclamationCircleOutlined","Button","message","Modal","t","React","useState","PATH_URL","useFetch","ComTable","resultImageApi","useNavigate","TYPE_RESULT_IMG","IMAGE_URL","ResultImageList","navigate","refetch","setRefetch","pagination","setPagination","page","limit","keyword","loading","value","ourRequest","getResultImage","handleSearch","keyWord","curState","trim","handleChangeTable","currentPage","totalItemPerPage","handleCreate","USERTAG_MANAGERMENT","CREATE","handleEditResultImage","e","resultImage","stopPropagation","EDIT","state","handleDeleteResultImage","resultImageId","deleteResultImage","then","preState","success","catch","error","confirm","icon","centered","content","okText","cancelText","onOk","columns","title","dataIndex","align","width","sortDirections","render","values","label","image","className","src","alt","type","onClick","id","totalPage","paginate","paginationProps","position","total","current","showSizeChanger","onChange","data","onAddTable","onSearch"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/result-image/ResultImageList.jsx"],"sourcesContent":["import { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { Button, message, Modal } from \"antd\";\nimport { t } from \"i18next\";\nimport React, { useState } from \"react\";\n\nimport PATH_URL from \"@common/config/pathURL\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport ComTable from \"@components/common/ComTable\";\nimport { resultImageApi } from \"@services/apis/result-image\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TYPE_RESULT_IMG } from \"@common/constant/masterData\";\nimport { IMAGE_URL } from \"@common/config/endpoint\";\n\nfunction ResultImageList() {\n  const navigate = useNavigate();\n  const [refetch, setRefetch] = useState(false);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\",\n  });\n\n  const { loading, value } = useFetch(\n    (ourRequest) => resultImageApi.getResultImage(pagination, ourRequest),\n    [pagination, refetch],\n  );\n\n  const handleSearch = (keyWord) => {\n    setPagination((curState) => ({\n      ...curState,\n      keyword: keyWord?.trim(),\n      page: 1,\n    }));\n  };\n\n  const handleChangeTable = (currentPage, totalItemPerPage) => {\n    setPagination((curState) => ({\n      ...curState,\n      page: currentPage,\n      limit: totalItemPerPage,\n    }));\n  };\n\n  const handleCreate = () => {\n    navigate(PATH_URL.USERTAG_MANAGERMENT.CREATE);\n  };\n\n  const handleEditResultImage = (e, resultImage) => {\n    e.stopPropagation();\n    navigate(PATH_URL.USERTAG_MANAGERMENT.EDIT, { state: resultImage });\n  };\n\n  const handleDeleteResultImage = (resultImageId) => {\n    resultImageApi\n      .deleteResultImage(resultImageId)\n      .then(() => {\n        setRefetch((preState) => !preState);\n        message.success(t(\"resultImageManagement.message.deleteSuccess\"));\n      })\n      .catch(() => {\n        message.error(t(\"resultImageManagement.message.deleteErr\"));\n      });\n  };\n\n  const confirm = (resultImageId) => {\n    Modal.confirm({\n      icon: <ExclamationCircleOutlined />,\n      centered: true,\n      content: t(\"resultImageManagement.modal.textConfirmDel\"),\n      okText: t(\"resultImageManagement.modal.textYes\"),\n      cancelText: t(\"resultImageManagement.modal.textNo\"),\n      onOk: () => handleDeleteResultImage(resultImageId),\n    });\n  };\n\n  const columns = [\n    {\n      title: t(\"resultImageManagement.list.id\"),\n      dataIndex: \"id\",\n      align: \"center\",\n      width: 120,\n    },\n    {\n      title: t(\"resultImageManagement.list.type\"),\n      dataIndex: \"type\",\n      align: \"center\",\n      sortDirections: [\"ascend\"],\n      render: (values) => {\n        return TYPE_RESULT_IMG[values - 1]?.label;\n      },\n    },\n    {\n      title: t(\"resultImageManagement.list.title\"),\n      dataIndex: \"title\",\n      align: \"center\",\n      sortDirections: [\"ascend\"],\n    },\n    {\n      title: t(\"resultImageManagement.list.image\"),\n      dataIndex: \"image\",\n      align: \"center\",\n      sortDirections: [\"ascend\"],\n      render: (image) => (\n        <img\n          className=\"img-badge\"\n          src={`${IMAGE_URL}${image}/original.jpg`}\n          alt=\"img-badge\"\n        />\n      ),\n    },\n    {\n      title: t(\"resultImageManagement.list.initialCondition\"),\n      dataIndex: \"initialCondition\",\n      align: \"center\",\n      sortDirections: [\"ascend\"],\n    },\n    {\n      title: t(\"resultImageManagement.list.finalCondition\"),\n      dataIndex: \"finalCondition\",\n      align: \"center\",\n      sortDirections: [\"ascend\"],\n      render: (values) => {\n        return values || \"-\";\n      },\n    },\n    {\n      title: t(\"resultImageManagement.list.operation\"),\n      align: \"center\",\n      width: 300,\n      render: (resultImage) => (\n        <div className=\"full-height full-width\">\n          <Button\n            type=\"primary\"\n            className=\"mr-10\"\n            onClick={(e) => handleEditResultImage(e, resultImage)}\n          >\n            {t(\"table.btnEdit\")}\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={(e) => {\n              e.stopPropagation();\n              confirm(resultImage.id);\n            }}\n          >\n            {t(\"table.btnDel\")}\n          </Button>\n        </div>\n      ),\n    },\n  ];\n\n  const totalPage = value?.paginate?.totalPage;\n  const paginationProps = {\n    position: [\"bottomRight\"],\n    total: totalPage * 10,\n    current: pagination.page,\n    showSizeChanger: true,\n    onChange: handleChangeTable,\n  };\n\n  return (\n    <ComTable\n      title={t(\"resultImageManagement.title\")}\n      loading={loading}\n      columns={columns}\n      data={value?.data}\n      pagination={paginationProps}\n      onAddTable={handleCreate}\n      onSearch={handleSearch}\n    />\n  );\n}\n\nexport default ResultImageList;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}