{"ast":null,"code":"var _s = $RefreshSig$();\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { Button, ColorPicker, message, Modal } from \"antd\";\nimport { t } from \"i18next\";\nimport React, { useState } from \"react\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport ComTable from \"@components/common/ComTable\";\nimport { usertagApi } from \"@services/apis/usertag\";\nimport { useNavigate } from \"react-router-dom\";\nfunction UserTagList() {\n  _s();\n  var _value$paginate;\n  const navigate = useNavigate();\n  const [refetch, setRefetch] = useState(false);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\"\n  });\n  const {\n    loading,\n    value\n  } = useFetch(ourRequest => usertagApi.getUserTags(pagination, ourRequest), [pagination, refetch]);\n  const handleSearch = keyWord => {\n    setPagination(curState => ({\n      ...curState,\n      keyword: keyWord === null || keyWord === void 0 ? void 0 : keyWord.trim(),\n      page: 1\n    }));\n  };\n  const handleChangeTable = (currentPage, totalItemPerPage) => {\n    setPagination(curState => ({\n      ...curState,\n      page: currentPage,\n      limit: totalItemPerPage\n    }));\n  };\n  const handleCreate = () => {\n    navigate(PATH_URL.USERTAG_MANAGERMENT.CREATE);\n  };\n  const handleEditUserTag = (e, usertag) => {\n    e.stopPropagation();\n    navigate(PATH_URL.USERTAG_MANAGERMENT.EDIT, {\n      state: usertag\n    });\n  };\n  const handleDeleteUserTag = usertagId => {\n    usertagApi.deleteUserTag(usertagId).then(() => {\n      setRefetch(preState => !preState);\n      message.success(t(\"usertagManagement.message.deleteSuccess\"));\n    }).catch(() => {\n      message.error(t(\"usertagManagement.message.deleteError\"));\n    });\n  };\n  const confirm = usertagId => {\n    Modal.confirm({\n      icon: /*#__PURE__*/React.createElement(ExclamationCircleOutlined, null),\n      centered: true,\n      content: t(\"usertagManagement.modal.textConfirmDel\"),\n      okText: t(\"usertagManagement.modal.textYes\"),\n      cancelText: t(\"usertagManagement.modal.textNo\"),\n      onOk: () => handleDeleteUserTag(usertagId)\n    });\n  };\n  const columns = [{\n    title: t(\"usertagManagement.list.id\"),\n    dataIndex: \"id\",\n    align: \"center\",\n    width: 120\n  }, {\n    title: t(\"usertagManagement.list.title\"),\n    dataIndex: \"name\",\n    align: \"center\",\n    render: values => values === null || values === void 0 ? void 0 : values.toUpperCase(),\n    sortDirections: [\"ascend\"]\n  }, {\n    title: t(\"usertagManagement.list.color\"),\n    dataIndex: \"color\",\n    align: \"center\",\n    render: values => {\n      return /*#__PURE__*/React.createElement(ColorPicker, {\n        showText: true,\n        defaultValue: values,\n        open: false\n      });\n    },\n    sortDirections: [\"ascend\"]\n  }, {\n    title: t(\"usertagManagement.list.operation\"),\n    align: \"center\",\n    width: 300,\n    render: usertag => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"full-height full-width\"\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      className: \"mr-10\",\n      onClick: e => handleEditUserTag(e, usertag)\n    }, t(\"table.btnEdit\")), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: e => {\n        e.stopPropagation();\n        confirm(usertag.id);\n      }\n    }, t(\"table.btnDel\")))\n  }];\n  const totalPage = value === null || value === void 0 ? void 0 : (_value$paginate = value.paginate) === null || _value$paginate === void 0 ? void 0 : _value$paginate.totalPage;\n  const paginationProps = {\n    position: [\"bottomRight\"],\n    total: totalPage * 10,\n    current: pagination.page,\n    showSizeChanger: true,\n    onChange: handleChangeTable\n  };\n  return /*#__PURE__*/React.createElement(ComTable, {\n    title: t(\"usertagManagement.title\"),\n    loading: loading,\n    columns: columns,\n    data: value === null || value === void 0 ? void 0 : value.data,\n    pagination: paginationProps,\n    onAddTable: handleCreate,\n    onSearch: handleSearch\n  });\n}\n_s(UserTagList, \"lh2BU8qi241iI/wTmUImrMH0dYc=\", false, function () {\n  return [useNavigate, useFetch];\n});\n_c = UserTagList;\nexport default UserTagList;\nvar _c;\n$RefreshReg$(_c, \"UserTagList\");","map":{"version":3,"mappings":"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","names":["ExclamationCircleOutlined","Button","ColorPicker","message","Modal","t","React","useState","PATH_URL","useFetch","ComTable","usertagApi","useNavigate","UserTagList","navigate","refetch","setRefetch","pagination","setPagination","page","limit","keyword","loading","value","ourRequest","getUserTags","handleSearch","keyWord","curState","trim","handleChangeTable","currentPage","totalItemPerPage","handleCreate","USERTAG_MANAGERMENT","CREATE","handleEditUserTag","e","usertag","stopPropagation","EDIT","state","handleDeleteUserTag","usertagId","deleteUserTag","then","preState","success","catch","error","confirm","icon","centered","content","okText","cancelText","onOk","columns","title","dataIndex","align","width","render","values","toUpperCase","sortDirections","showText","defaultValue","open","className","type","onClick","id","totalPage","paginate","paginationProps","position","total","current","showSizeChanger","onChange","data","onAddTable","onSearch"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/usertag/UserTagList.jsx"],"sourcesContent":["import { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { Button, ColorPicker, message, Modal } from \"antd\";\nimport { t } from \"i18next\";\nimport React, { useState } from \"react\";\n\nimport PATH_URL from \"@common/config/pathURL\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport ComTable from \"@components/common/ComTable\";\nimport { usertagApi } from \"@services/apis/usertag\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction UserTagList() {\n  const navigate = useNavigate();\n  const [refetch, setRefetch] = useState(false);\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\",\n  });\n\n  const { loading, value } = useFetch(\n    (ourRequest) => usertagApi.getUserTags(pagination, ourRequest),\n    [pagination, refetch],\n  );\n\n  const handleSearch = (keyWord) => {\n    setPagination((curState) => ({\n      ...curState,\n      keyword: keyWord?.trim(),\n      page: 1,\n    }));\n  };\n\n  const handleChangeTable = (currentPage, totalItemPerPage) => {\n    setPagination((curState) => ({\n      ...curState,\n      page: currentPage,\n      limit: totalItemPerPage,\n    }));\n  };\n\n  const handleCreate = () => {\n    navigate(PATH_URL.USERTAG_MANAGERMENT.CREATE);\n  };\n\n  const handleEditUserTag = (e, usertag) => {\n    e.stopPropagation();\n    navigate(PATH_URL.USERTAG_MANAGERMENT.EDIT, { state: usertag });\n  };\n\n  const handleDeleteUserTag = (usertagId) => {\n    usertagApi\n      .deleteUserTag(usertagId)\n      .then(() => {\n        setRefetch((preState) => !preState);\n        message.success(t(\"usertagManagement.message.deleteSuccess\"));\n      })\n      .catch(() => {\n        message.error(t(\"usertagManagement.message.deleteError\"));\n      });\n  };\n\n  const confirm = (usertagId) => {\n    Modal.confirm({\n      icon: <ExclamationCircleOutlined />,\n      centered: true,\n      content: t(\"usertagManagement.modal.textConfirmDel\"),\n      okText: t(\"usertagManagement.modal.textYes\"),\n      cancelText: t(\"usertagManagement.modal.textNo\"),\n      onOk: () => handleDeleteUserTag(usertagId),\n    });\n  };\n\n  const columns = [\n    {\n      title: t(\"usertagManagement.list.id\"),\n      dataIndex: \"id\",\n      align: \"center\",\n      width: 120,\n    },\n    {\n      title: t(\"usertagManagement.list.title\"),\n      dataIndex: \"name\",\n      align: \"center\",\n      render: (values) => values?.toUpperCase(),\n      sortDirections: [\"ascend\"],\n    },\n    {\n      title: t(\"usertagManagement.list.color\"),\n      dataIndex: \"color\",\n      align: \"center\",\n      render: (values) => {\n        return <ColorPicker showText defaultValue={values} open={false} />;\n      },\n      sortDirections: [\"ascend\"],\n    },\n    {\n      title: t(\"usertagManagement.list.operation\"),\n      align: \"center\",\n      width: 300,\n      render: (usertag) => (\n        <div className=\"full-height full-width\">\n          <Button\n            type=\"primary\"\n            className=\"mr-10\"\n            onClick={(e) => handleEditUserTag(e, usertag)}\n          >\n            {t(\"table.btnEdit\")}\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={(e) => {\n              e.stopPropagation();\n              confirm(usertag.id);\n            }}\n          >\n            {t(\"table.btnDel\")}\n          </Button>\n        </div>\n      ),\n    },\n  ];\n\n  const totalPage = value?.paginate?.totalPage;\n  const paginationProps = {\n    position: [\"bottomRight\"],\n    total: totalPage * 10,\n    current: pagination.page,\n    showSizeChanger: true,\n    onChange: handleChangeTable,\n  };\n\n  return (\n    <ComTable\n      title={t(\"usertagManagement.title\")}\n      loading={loading}\n      columns={columns}\n      data={value?.data}\n      pagination={paginationProps}\n      onAddTable={handleCreate}\n      onSearch={handleSearch}\n    />\n  );\n}\n\nexport default UserTagList;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}