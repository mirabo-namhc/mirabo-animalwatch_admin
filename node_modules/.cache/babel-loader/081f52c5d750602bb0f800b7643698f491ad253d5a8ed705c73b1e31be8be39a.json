{"ast":null,"code":"var _s = $RefreshSig$();\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { Button, message, Modal } from \"antd\";\nimport { t } from \"i18next\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport { formatDateTimeTable } from \"@common/utils/dateHelper\";\nimport ComTable from \"@components/common/ComTable\";\nimport { versionApi } from \"@services/apis/version\";\nfunction VersionList() {\n  _s();\n  var _value$paginate;\n  const navigate = useNavigate();\n  const [refetch, setRefetch] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\"\n  });\n  const {\n    loading,\n    value\n  } = useFetch(ourRequest => versionApi.getVersions(pagination, ourRequest), [pagination, refetch]);\n  const handleCreate = () => {\n    navigate(PATH_URL.VERSION_MANAGERMENT.CREATE);\n  };\n  const handleSearch = keyWord => {\n    setPagination(curState => ({\n      ...curState,\n      keyword: keyWord === null || keyWord === void 0 ? void 0 : keyWord.trim(),\n      page: 1\n    }));\n  };\n  const handleChangeTable = (currentPage, totalItemPerPage) => {\n    setPagination(curState => ({\n      ...curState,\n      page: currentPage,\n      limit: totalItemPerPage\n    }));\n  };\n  const handleEditVersion = (e, version) => {\n    e.stopPropagation();\n    navigate(PATH_URL.VERSION_MANAGERMENT.EDIT, {\n      state: version\n    });\n  };\n  const handleDeleteVersion = versionId => {\n    versionApi.deleteVersion(versionId).then(() => {\n      setRefetch(`deleteUser-${versionId}`);\n      message.success(t(\"versionManagement.message.deleteSuccess\"));\n    }).catch(() => {\n      message.error(t(\"versionManagement.message.deleteErr\"));\n    });\n  };\n  const confirm = versionId => {\n    Modal.confirm({\n      icon: /*#__PURE__*/React.createElement(ExclamationCircleOutlined, null),\n      centered: true,\n      content: t(\"versionManagement.modal.textConfirmDel\"),\n      okText: t(\"versionManagement.modal.textYes\"),\n      cancelText: t(\"versionManagement.modal.textNo\"),\n      onOk: () => handleDeleteVersion(versionId)\n    });\n  };\n  const columns = [{\n    title: t(\"versionManagement.list.device\"),\n    dataIndex: \"device\",\n    align: \"center\"\n  }, {\n    title: t(\"versionManagement.list.version\"),\n    dataIndex: \"version\",\n    align: \"center\"\n  }, {\n    title: t(\"versionManagement.list.title\"),\n    dataIndex: \"title\",\n    align: \"center\"\n  }, {\n    title: t(\"versionManagement.list.description\"),\n    dataIndex: \"description\",\n    align: \"center\"\n  }, {\n    title: t(\"versionManagement.list.createdAt\"),\n    dataIndex: \"createdAt\",\n    align: \"center\",\n    render: time => /*#__PURE__*/React.createElement(\"span\", null, formatDateTimeTable(time))\n  }, {\n    title: t(\"versionManagement.list.operation\"),\n    align: \"center\",\n    width: 200,\n    render: version => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"full-height full-width\"\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      className: \"mr-10\",\n      onClick: e => handleEditVersion(e, version)\n    }, t(\"table.btnEdit\")), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: e => {\n        e.stopPropagation();\n        confirm(version.id);\n      }\n    }, t(\"table.btnDel\")))\n  }];\n  const totalPage = value === null || value === void 0 ? void 0 : (_value$paginate = value.paginate) === null || _value$paginate === void 0 ? void 0 : _value$paginate.totalPage;\n  const paginationProps = {\n    position: [\"bottomRight\"],\n    total: totalPage * 10,\n    current: pagination.page,\n    showSizeChanger: true,\n    onChange: handleChangeTable\n  };\n  return /*#__PURE__*/React.createElement(ComTable, {\n    title: t(\"versionManagement.title\"),\n    loading: loading,\n    columns: columns,\n    data: value === null || value === void 0 ? void 0 : value.data,\n    pagination: paginationProps,\n    onAddTable: handleCreate,\n    onSearch: handleSearch\n  });\n}\n_s(VersionList, \"UkKvejPPORBGsg0BwaNxca7vNuQ=\", false, function () {\n  return [useNavigate, useFetch];\n});\n_c = VersionList;\nexport default VersionList;\nvar _c;\n$RefreshReg$(_c, \"VersionList\");","map":{"version":3,"mappings":"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","names":["ExclamationCircleOutlined","Button","message","Modal","t","React","useState","useNavigate","PATH_URL","useFetch","formatDateTimeTable","ComTable","versionApi","VersionList","navigate","refetch","setRefetch","pagination","setPagination","page","limit","keyword","loading","value","ourRequest","getVersions","handleCreate","VERSION_MANAGERMENT","CREATE","handleSearch","keyWord","curState","trim","handleChangeTable","currentPage","totalItemPerPage","handleEditVersion","e","version","stopPropagation","EDIT","state","handleDeleteVersion","versionId","deleteVersion","then","success","catch","error","confirm","icon","centered","content","okText","cancelText","onOk","columns","title","dataIndex","align","render","time","width","className","type","onClick","id","totalPage","paginate","paginationProps","position","total","current","showSizeChanger","onChange","data","onAddTable","onSearch"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/version/VersionList.jsx"],"sourcesContent":["import { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { Button, message, Modal } from \"antd\";\nimport { t } from \"i18next\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport PATH_URL from \"@common/config/pathURL\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport { formatDateTimeTable } from \"@common/utils/dateHelper\";\nimport ComTable from \"@components/common/ComTable\";\nimport { versionApi } from \"@services/apis/version\";\n\nfunction VersionList() {\n  const navigate = useNavigate();\n\n  const [refetch, setRefetch] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\",\n  });\n\n  const { loading, value } = useFetch(\n    (ourRequest) => versionApi.getVersions(pagination, ourRequest),\n    [pagination, refetch],\n  );\n\n  const handleCreate = () => {\n    navigate(PATH_URL.VERSION_MANAGERMENT.CREATE);\n  };\n\n  const handleSearch = (keyWord) => {\n    setPagination((curState) => ({\n      ...curState,\n      keyword: keyWord?.trim(),\n      page: 1,\n    }));\n  };\n\n  const handleChangeTable = (currentPage, totalItemPerPage) => {\n    setPagination((curState) => ({\n      ...curState,\n      page: currentPage,\n      limit: totalItemPerPage,\n    }));\n  };\n\n  const handleEditVersion = (e, version) => {\n    e.stopPropagation();\n    navigate(PATH_URL.VERSION_MANAGERMENT.EDIT, { state: version });\n  };\n\n  const handleDeleteVersion = (versionId) => {\n    versionApi\n      .deleteVersion(versionId)\n      .then(() => {\n        setRefetch(`deleteUser-${versionId}`);\n        message.success(t(\"versionManagement.message.deleteSuccess\"));\n      })\n      .catch(() => {\n        message.error(t(\"versionManagement.message.deleteErr\"));\n      });\n  };\n\n  const confirm = (versionId) => {\n    Modal.confirm({\n      icon: <ExclamationCircleOutlined />,\n      centered: true,\n      content: t(\"versionManagement.modal.textConfirmDel\"),\n      okText: t(\"versionManagement.modal.textYes\"),\n      cancelText: t(\"versionManagement.modal.textNo\"),\n      onOk: () => handleDeleteVersion(versionId),\n    });\n  };\n\n  const columns = [\n    {\n      title: t(\"versionManagement.list.device\"),\n      dataIndex: \"device\",\n      align: \"center\",\n    },\n    {\n      title: t(\"versionManagement.list.version\"),\n      dataIndex: \"version\",\n      align: \"center\",\n    },\n    {\n      title: t(\"versionManagement.list.title\"),\n      dataIndex: \"title\",\n      align: \"center\",\n    },\n    {\n      title: t(\"versionManagement.list.description\"),\n      dataIndex: \"description\",\n      align: \"center\",\n    },\n    {\n      title: t(\"versionManagement.list.createdAt\"),\n      dataIndex: \"createdAt\",\n      align: \"center\",\n      render: (time) => <span>{formatDateTimeTable(time)}</span>,\n    },\n    {\n      title: t(\"versionManagement.list.operation\"),\n      align: \"center\",\n      width: 200,\n      render: (version) => (\n        <div className=\"full-height full-width\">\n          <Button\n            type=\"primary\"\n            className=\"mr-10\"\n            onClick={(e) => handleEditVersion(e, version)}\n          >\n            {t(\"table.btnEdit\")}\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={(e) => {\n              e.stopPropagation();\n              confirm(version.id);\n            }}\n          >\n            {t(\"table.btnDel\")}\n          </Button>\n        </div>\n      ),\n    },\n  ];\n\n  const totalPage = value?.paginate?.totalPage;\n  const paginationProps = {\n    position: [\"bottomRight\"],\n    total: totalPage * 10,\n    current: pagination.page,\n    showSizeChanger: true,\n    onChange: handleChangeTable,\n  };\n\n  return (\n    <ComTable\n      title={t(\"versionManagement.title\")}\n      loading={loading}\n      columns={columns}\n      data={value?.data}\n      pagination={paginationProps}\n      onAddTable={handleCreate}\n      onSearch={handleSearch}\n    />\n  );\n}\n\nexport default VersionList;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}