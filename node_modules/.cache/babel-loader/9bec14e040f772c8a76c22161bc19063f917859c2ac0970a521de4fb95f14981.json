{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, message, Modal } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport ComTable from \"@components/common/ComTable\";\nimport TYPE_COLLECTION from \"@common/constant/collection\";\nimport { collectionApi } from \"@services/apis/collection\";\nimport { useTranslation } from \"react-i18next\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nfunction CollectionList() {\n  _s();\n  var _value$data, _value$paginate;\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  const [refresh, setRefresh] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\",\n    isGuides: 1\n  });\n  const {\n    loading,\n    value\n  } = useFetch(ourRequest => collectionApi.getCollections(pagination, ourRequest), [pagination, refresh]);\n  const dataSource = value === null || value === void 0 ? void 0 : (_value$data = value.data) === null || _value$data === void 0 ? void 0 : _value$data.map(record => {\n    var _record$courses;\n    return {\n      ...record,\n      nameRoutes: record === null || record === void 0 ? void 0 : (_record$courses = record.courses) === null || _record$courses === void 0 ? void 0 : _record$courses.map(item => {\n        return item.title;\n      }),\n      type: 1\n    };\n  });\n  const totalPage = value === null || value === void 0 ? void 0 : (_value$paginate = value.paginate) === null || _value$paginate === void 0 ? void 0 : _value$paginate.totalPage;\n  const paginationProp = {\n    position: [\"bottomRight\"],\n    total: totalPage * pagination.limit,\n    current: pagination.page,\n    showSizeChanger: true\n  };\n  const handleCreate = () => {\n    navigate(PATH_URL.MANAGER_COLLECTION.CREATE);\n  };\n  const handleChangeTable = (paginate, filter, sorter) => {\n    setPagination(curState => ({\n      ...curState,\n      page: paginate === null || paginate === void 0 ? void 0 : paginate.current,\n      limit: paginate === null || paginate === void 0 ? void 0 : paginate.pageSize,\n      sort: sorter.field && `${sorter === null || sorter === void 0 ? void 0 : sorter.field}:${(sorter === null || sorter === void 0 ? void 0 : sorter.order) === \"ascend\" ? \"asc\" : \"desc\"}`\n    }));\n  };\n  const handleSearch = keyWord => {\n    setPagination(curState => ({\n      ...curState,\n      page: 1,\n      keyword: keyWord === null || keyWord === void 0 ? void 0 : keyWord.trim()\n    }));\n  };\n  const handleEdit = async (e, record) => {\n    e.stopPropagation();\n    try {\n      const res = await collectionApi.getDetailCollection(record === null || record === void 0 ? void 0 : record.id);\n      navigate(PATH_URL.MANAGER_COLLECTION.EDIT, {\n        state: res\n      });\n    } catch (error) {\n      message.error(error);\n    }\n  };\n  const handleDetail = async detail => {\n    try {\n      const res = await collectionApi.getDetailCollection(detail === null || detail === void 0 ? void 0 : detail.id);\n      navigate(PATH_URL.MANAGER_COLLECTION.DETAIL, {\n        state: {\n          ...res,\n          mode: \"DETAIL\"\n        }\n      });\n    } catch (error) {\n      message.error(error);\n    }\n  };\n  const handleDelete = async collectionId => {\n    try {\n      const res = await collectionApi.delete(collectionId);\n      if (!res) return;\n      if (res.success) {\n        message.success(t(\"managementCollections.noti.deleteSuccess\"));\n        setRefresh(`deleteCol-${collectionId}`);\n      } else message.errort(t(\"managementCollections.noti.deleteFail\"));\n    } catch (error) {\n      message.error(error);\n    }\n  };\n  const confirm = collectionId => {\n    Modal.confirm({\n      icon: /*#__PURE__*/React.createElement(ExclamationCircleOutlined, null),\n      centered: true,\n      content: t(\"managementCollections.modal.textConfirmDel\"),\n      okText: t(\"managementCollections.modal.btnOK\"),\n      cancelText: t(\"managementCollections.modal.btnCancel\"),\n      onOk: () => handleDelete(collectionId)\n    });\n  };\n  const columns = [{\n    title: t(\"managementCollections.list.id\"),\n    dataIndex: \"id\",\n    sorter: true,\n    align: \"center\",\n    width: 150\n  }, {\n    title: t(\"managementCollections.list.nameCollection\"),\n    dataIndex: \"title\",\n    align: \"center\",\n    sorter: true\n  }, {\n    title: t(\"managementCollections.list.nameRoute\"),\n    dataIndex: \"nameRoutes\",\n    render: nameRoutes => {\n      return nameRoutes === null || nameRoutes === void 0 ? void 0 : nameRoutes.map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n        key: i\n      }, item));\n    },\n    align: \"center\",\n    width: 300\n  }, {\n    title: t(\"managementCollections.list.description\"),\n    dataIndex: \"description\",\n    align: \"center\",\n    render: description => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"truncate\"\n    }, description),\n    width: 300\n  }, {\n    title: t(\"managementCollections.list.type\"),\n    align: \"center\",\n    render: values => {\n      var _values$checkPoints;\n      return values !== null && values !== void 0 && values.courseCount || values !== null && values !== void 0 && (_values$checkPoints = values.checkPoints) !== null && _values$checkPoints !== void 0 && _values$checkPoints.length ? TYPE_COLLECTION[1].label : TYPE_COLLECTION[0].label;\n    },\n    width: 140\n  }, {\n    title: t(\"managementCollections.list.buttonEdit\"),\n    align: \"center\",\n    width: 200,\n    render: record => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"full-height full-width\"\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      className: \"mr-10\",\n      onClick: e => handleEdit(e, record)\n    }, t(\"table.btnEdit\")), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: e => {\n        e.stopPropagation();\n        confirm(record.id);\n      }\n    }, t(\"managementCollections.list.btnDel\")))\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(ComTable, {\n    title: t(\"managementCollections.titleList\"),\n    loading: loading,\n    columns: columns,\n    pagination: paginationProp,\n    data: dataSource,\n    onAddTable: handleCreate,\n    onSearch: handleSearch,\n    onChangeTable: handleChangeTable,\n    onClickRow: handleDetail\n  }));\n}\n_s(CollectionList, \"O4ZCOP2RUcAeUKUSQzDre+efHyM=\", false, function () {\n  return [useTranslation, useNavigate, useFetch];\n});\n_c = CollectionList;\nCollectionList.propTypes = {};\nexport default CollectionList;\nvar _c;\n$RefreshReg$(_c, \"CollectionList\");","map":{"version":3,"mappings":"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","names":["React","useState","Button","message","Modal","useNavigate","PATH_URL","useFetch","ComTable","TYPE_COLLECTION","collectionApi","useTranslation","ExclamationCircleOutlined","CollectionList","t","navigate","refresh","setRefresh","pagination","setPagination","page","limit","keyword","isGuides","loading","value","ourRequest","getCollections","dataSource","data","map","record","nameRoutes","courses","item","title","type","totalPage","paginate","paginationProp","position","total","current","showSizeChanger","handleCreate","MANAGER_COLLECTION","CREATE","handleChangeTable","filter","sorter","curState","pageSize","sort","field","order","handleSearch","keyWord","trim","handleEdit","e","stopPropagation","res","getDetailCollection","id","EDIT","state","error","handleDetail","detail","DETAIL","mode","handleDelete","collectionId","delete","success","errort","confirm","icon","centered","content","okText","cancelText","onOk","columns","dataIndex","align","width","render","i","key","description","className","values","courseCount","checkPoints","length","label","onClick","onAddTable","onSearch","onChangeTable","onClickRow","propTypes"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/collection/CollectionList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, message, Modal } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport PATH_URL from \"@common/config/pathURL\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport ComTable from \"@components/common/ComTable\";\nimport TYPE_COLLECTION from \"@common/constant/collection\";\nimport { collectionApi } from \"@services/apis/collection\";\nimport { useTranslation } from \"react-i18next\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\n\nfunction CollectionList() {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [refresh, setRefresh] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\",\n    isGuides: 1,\n  });\n\n  const { loading, value } = useFetch(\n    (ourRequest) => collectionApi.getCollections(pagination, ourRequest),\n    [pagination, refresh],\n  );\n\n  const dataSource = value?.data?.map((record) => {\n    return {\n      ...record,\n      nameRoutes: record?.courses?.map((item) => {\n        return item.title;\n      }),\n      type: 1,\n    };\n  });\n\n  const totalPage = value?.paginate?.totalPage;\n  const paginationProp = {\n    position: [\"bottomRight\"],\n    total: totalPage * pagination.limit,\n    current: pagination.page,\n    showSizeChanger: true,\n  };\n\n  const handleCreate = () => {\n    navigate(PATH_URL.MANAGER_COLLECTION.CREATE);\n  };\n\n  const handleChangeTable = (paginate, filter, sorter) => {\n    setPagination((curState) => ({\n      ...curState,\n      page: paginate?.current,\n      limit: paginate?.pageSize,\n      sort:\n        sorter.field &&\n        `${sorter?.field}:${sorter?.order === \"ascend\" ? \"asc\" : \"desc\"}`,\n    }));\n  };\n\n  const handleSearch = (keyWord) => {\n    setPagination((curState) => ({\n      ...curState,\n      page: 1,\n      keyword: keyWord?.trim(),\n    }));\n  };\n\n  const handleEdit = async (e, record) => {\n    e.stopPropagation();\n    try {\n      const res = await collectionApi.getDetailCollection(record?.id);\n      navigate(PATH_URL.MANAGER_COLLECTION.EDIT, { state: res });\n    } catch (error) {\n      message.error(error);\n    }\n  };\n\n  const handleDetail = async (detail) => {\n    try {\n      const res = await collectionApi.getDetailCollection(detail?.id);\n      navigate(PATH_URL.MANAGER_COLLECTION.DETAIL, {\n        state: { ...res, mode: \"DETAIL\" },\n      });\n    } catch (error) {\n      message.error(error);\n    }\n  };\n\n  const handleDelete = async (collectionId) => {\n    try {\n      const res = await collectionApi.delete(collectionId);\n\n      if (!res) return;\n\n      if (res.success) {\n        message.success(t(\"managementCollections.noti.deleteSuccess\"));\n        setRefresh(`deleteCol-${collectionId}`);\n      } else message.errort(t(\"managementCollections.noti.deleteFail\"));\n    } catch (error) {\n      message.error(error);\n    }\n  };\n\n  const confirm = (collectionId) => {\n    Modal.confirm({\n      icon: <ExclamationCircleOutlined />,\n      centered: true,\n      content: t(\"managementCollections.modal.textConfirmDel\"),\n      okText: t(\"managementCollections.modal.btnOK\"),\n      cancelText: t(\"managementCollections.modal.btnCancel\"),\n      onOk: () => handleDelete(collectionId),\n    });\n  };\n\n  const columns = [\n    {\n      title: t(\"managementCollections.list.id\"),\n      dataIndex: \"id\",\n      sorter: true,\n      align: \"center\",\n      width: 150,\n    },\n    {\n      title: t(\"managementCollections.list.nameCollection\"),\n      dataIndex: \"title\",\n      align: \"center\",\n      sorter: true,\n    },\n    {\n      title: t(\"managementCollections.list.nameRoute\"),\n      dataIndex: \"nameRoutes\",\n      render: (nameRoutes) => {\n        return nameRoutes?.map((item, i) => <div key={i}>{item}</div>);\n      },\n      align: \"center\",\n      width: 300,\n    },\n    {\n      title: t(\"managementCollections.list.description\"),\n      dataIndex: \"description\",\n      align: \"center\",\n      render: (description) => <div className=\"truncate\">{description}</div>,\n      width: 300,\n    },\n    {\n      title: t(\"managementCollections.list.type\"),\n      align: \"center\",\n      render: (values) => {\n        return values?.courseCount || values?.checkPoints?.length\n          ? TYPE_COLLECTION[1].label\n          : TYPE_COLLECTION[0].label;\n      },\n      width: 140,\n    },\n    {\n      title: t(\"managementCollections.list.buttonEdit\"),\n      align: \"center\",\n      width: 200,\n      render: (record) => (\n        <div className=\"full-height full-width\">\n          <Button\n            type=\"primary\"\n            className=\"mr-10\"\n            onClick={(e) => handleEdit(e, record)}\n          >\n            {t(\"table.btnEdit\")}\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={(e) => {\n              e.stopPropagation();\n              confirm(record.id);\n            }}\n          >\n            {t(\"managementCollections.list.btnDel\")}\n          </Button>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <ComTable\n        title={t(\"managementCollections.titleList\")}\n        loading={loading}\n        columns={columns}\n        pagination={paginationProp}\n        data={dataSource}\n        onAddTable={handleCreate}\n        onSearch={handleSearch}\n        onChangeTable={handleChangeTable}\n        onClickRow={handleDetail}\n      />\n    </div>\n  );\n}\n\nCollectionList.propTypes = {};\n\nexport default CollectionList;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}