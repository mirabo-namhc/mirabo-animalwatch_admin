{"ast":null,"code":"var _s = $RefreshSig$();\nimport { Button, Card, Form, Row, Spin, message } from \"antd\";\nimport { useForm, useWatch } from \"antd/es/form/Form\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport { COLDEF, TYPE_FIELD } from \"@common/constant/form\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport { renderFieldForm } from \"@common/utils/renderFieldForm\";\nimport { groupApi } from \"@services/apis/group\";\nimport { userApi } from \"@services/apis/user\";\nimport { validate } from \"@validate/index\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nfunction GroupForm() {\n  _s();\n  var _state$users, _state$users2;\n  const {\n    t\n  } = useTranslation();\n  const [form] = useForm();\n  const {\n    state\n  } = useLocation();\n  const isDetailPage = window.location.href.includes(\"detail\");\n  const [loading, setLoading] = useState(false);\n  const listUserSelect = useWatch(\"userId\", form);\n  const navigate = useNavigate();\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\"\n  });\n  const initialValues = {\n    ...state,\n    userId: state === null || state === void 0 ? void 0 : (_state$users = state.users) === null || _state$users === void 0 ? void 0 : _state$users.map(item => {\n      return {\n        key: item === null || item === void 0 ? void 0 : item.id,\n        value: item === null || item === void 0 ? void 0 : item.id,\n        label: item === null || item === void 0 ? void 0 : item.username\n      };\n    })\n  };\n  const {\n    loading: loadingFetchUser,\n    value: listUser\n  } = useFetch(ourRequest => {\n    return userApi.getAllUsers(ourRequest);\n  }, [pagination]);\n  const handleCancel = () => {\n    navigate(PATH_URL.GROUP_MANAGERMENT.INDEX);\n  };\n  const filterOption = (input, option) => {\n    var _option$children;\n    return ((_option$children = option === null || option === void 0 ? void 0 : option.children) !== null && _option$children !== void 0 ? _option$children : \"\").toLowerCase().includes(input.toLowerCase());\n  };\n  const convertListOptions = list => {\n    if (!list) return [];\n    return list === null || list === void 0 ? void 0 : list.map(item => ({\n      key: item === null || item === void 0 ? void 0 : item.id,\n      value: item === null || item === void 0 ? void 0 : item.id,\n      label: item === null || item === void 0 ? void 0 : item.username\n    }));\n  };\n  const handleLinkEditPage = e => {\n    if (isDetailPage) {\n      e.preventDefault();\n      navigate(`../${PATH_URL.GROUP_MANAGERMENT.EDIT}`, {\n        state: {\n          ...state\n        }\n      });\n    }\n  };\n  const showTitle = () => {\n    if (isDetailPage) return t(\"groupManagement.titleDetail\");\n    return state ? t(\"groupManagement.titleEdit\") : t(\"groupManagement.titleCreate\");\n  };\n  const dataForm = [{\n    colwidth: COLDEF,\n    type: TYPE_FIELD.INPUT,\n    name: \"name\",\n    maxLength: 50,\n    label: t(\"groupManagement.list.name\"),\n    readOnly: isDetailPage,\n    rules: [{\n      required: true,\n      message: \"\"\n    }, {\n      max: 50,\n      message: t(\"validate.maxCharacter\", {\n        number: 50\n      })\n    }, validate.empty(t(\"validate.notEmpty\", {\n      fieldName: t(\"groupManagement.list.name\")\n    }))]\n  }, {\n    type: isDetailPage ? TYPE_FIELD.FORM_DETAIL : TYPE_FIELD.SELECT,\n    name: \"userId\",\n    label: isDetailPage ? t(\"groupManagement.titleListUser\") : t(\"groupManagement.titleAddUser\"),\n    title: isDetailPage ? t(\"groupManagement.titleListUser\") : null,\n    listOptions: convertListOptions(listUser),\n    mode: \"multiple\",\n    filterOption: (input, option) => filterOption(input, option),\n    className: isDetailPage ? \"list-user\" : \"select-users\",\n    content: state !== null && state !== void 0 && state.users ? state === null || state === void 0 ? void 0 : (_state$users2 = state.users) === null || _state$users2 === void 0 ? void 0 : _state$users2.map((user, i) => /*#__PURE__*/React.createElement(Link, {\n      key: i,\n      className: \"mr-10\",\n      to: `${PATH_URL.MANAGER_USER.INDEX}/${PATH_URL.MANAGER_USER.DETAIL}`,\n      state: {\n        id: user === null || user === void 0 ? void 0 : user.id\n      }\n    }, user.username)) : \"-\",\n    rules: [{\n      required: !(listUserSelect !== null && listUserSelect !== void 0 && listUserSelect.length),\n      message: t(\"validate.notEmpty\", {\n        fieldName: t(\"groupManagement.list.user\")\n      })\n    }]\n  }];\n  const handleFinish = async values => {\n    if (state) {\n      try {\n        var _values$userId;\n        setLoading(true);\n        await groupApi.putGroup(state === null || state === void 0 ? void 0 : state.id, {\n          ...values,\n          userId: values === null || values === void 0 ? void 0 : (_values$userId = values.userId) === null || _values$userId === void 0 ? void 0 : _values$userId.map(item => {\n            if (item.value) {\n              return item === null || item === void 0 ? void 0 : item.value;\n            }\n            return item;\n          })\n        });\n        message.success(t(\"groupManagement.message.editSuccess\"));\n        handleCancel();\n      } catch (error) {\n        message.error(t(\"groupManagement.message.editError\"));\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      try {\n        var _values$userId2;\n        setLoading(true);\n        await groupApi.postGroup({\n          ...values,\n          userId: values === null || values === void 0 ? void 0 : (_values$userId2 = values.userId) === null || _values$userId2 === void 0 ? void 0 : _values$userId2.map(item => {\n            if (item.value) {\n              return item === null || item === void 0 ? void 0 : item.value;\n            }\n            return item;\n          })\n        });\n        message.success(t(\"groupManagement.message.createSuccess\"));\n        handleCancel();\n      } catch (error) {\n        message.error(t(\"groupManagement.message.createError\"));\n        message.error(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  useEffect(() => {\n    form.validateFields([\"userId\"]);\n  }, [listUserSelect]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"course-form form-default\"\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    className: \"full-width header-table\"\n  }, /*#__PURE__*/React.createElement(\"h3\", null, showTitle())), loadingFetchUser ? /*#__PURE__*/React.createElement(Spin, {\n    size: \"large\",\n    style: {\n      margin: \"10px auto\",\n      width: \"100%\"\n    }\n  }) : /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    colon: false,\n    layout: \"vertical\",\n    initialValues: state ? initialValues : {},\n    onFinish: handleFinish,\n    autoComplete: \"off\"\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [48, 8]\n  }, renderFieldForm(dataForm)), /*#__PURE__*/React.createElement(Row, {\n    className: \"flex jc-center gap-20 mt-15 full-width\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    className: \"fw-600 cancel-btn\",\n    onClick: handleCancel\n  }, t(\"form.btnBack\")), /*#__PURE__*/React.createElement(Button, {\n    loading: loading,\n    disabled: loading,\n    className: \"fw-600 submit-btn\",\n    type: \"primary\",\n    htmlType: isDetailPage ? \"button\" : \"submit\",\n    onClick: e => handleLinkEditPage(e)\n  }, state ? t(\"form.btnEdit\") : t(\"form.btnCreate\"))))));\n}\n_s(GroupForm, \"N+RHoAgOuqWIpY3M1UlOAhQvRS4=\", false, function () {\n  return [useTranslation, useForm, useLocation, useWatch, useNavigate, useFetch];\n});\n_c = GroupForm;\nGroupForm.propTypes = {};\nexport default GroupForm;\nvar _c;\n$RefreshReg$(_c, \"GroupForm\");","map":{"version":3,"mappings":"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","names":["Button","Card","Form","Row","Spin","message","useForm","useWatch","React","useEffect","useState","useTranslation","PATH_URL","COLDEF","TYPE_FIELD","useFetch","renderFieldForm","groupApi","userApi","validate","Link","useLocation","useNavigate","GroupForm","t","form","state","isDetailPage","window","location","href","includes","loading","setLoading","listUserSelect","navigate","pagination","setPagination","page","limit","keyword","initialValues","userId","users","map","item","key","id","value","label","username","loadingFetchUser","listUser","ourRequest","getAllUsers","handleCancel","GROUP_MANAGERMENT","INDEX","filterOption","input","option","children","toLowerCase","convertListOptions","list","handleLinkEditPage","e","preventDefault","EDIT","showTitle","dataForm","colwidth","type","INPUT","name","maxLength","readOnly","rules","required","max","number","empty","fieldName","FORM_DETAIL","SELECT","title","listOptions","mode","className","content","user","i","to","MANAGER_USER","DETAIL","length","handleFinish","values","putGroup","success","error","postGroup","validateFields","align","size","style","margin","width","colon","layout","onFinish","autoComplete","gutter","onClick","disabled","htmlType","propTypes"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/group/GroupForm.jsx"],"sourcesContent":["import { Button, Card, Form, Row, Spin, message } from \"antd\";\nimport { useForm, useWatch } from \"antd/es/form/Form\";\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport PATH_URL from \"@common/config/pathURL\";\nimport { COLDEF, TYPE_FIELD } from \"@common/constant/form\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport { renderFieldForm } from \"@common/utils/renderFieldForm\";\nimport { groupApi } from \"@services/apis/group\";\nimport { userApi } from \"@services/apis/user\";\nimport { validate } from \"@validate/index\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\n\nfunction GroupForm() {\n  const { t } = useTranslation();\n  const [form] = useForm();\n  const { state } = useLocation();\n  const isDetailPage = window.location.href.includes(\"detail\");\n  const [loading, setLoading] = useState(false);\n  const listUserSelect = useWatch(\"userId\", form);\n  const navigate = useNavigate();\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\",\n  });\n  const initialValues = {\n    ...state,\n    userId: state?.users?.map((item) => {\n      return { key: item?.id, value: item?.id, label: item?.username };\n    }),\n  };\n\n  const { loading: loadingFetchUser, value: listUser } = useFetch(\n    (ourRequest) => {\n      return userApi.getAllUsers(ourRequest);\n    },\n    [pagination],\n  );\n\n  const handleCancel = () => {\n    navigate(PATH_URL.GROUP_MANAGERMENT.INDEX);\n  };\n\n  const filterOption = (input, option) => {\n    return (option?.children ?? \"\").toLowerCase().includes(input.toLowerCase());\n  };\n\n  const convertListOptions = (list) => {\n    if (!list) return [];\n    return list?.map((item) => ({\n      key: item?.id,\n      value: item?.id,\n      label: item?.username,\n    }));\n  };\n\n  const handleLinkEditPage = (e) => {\n    if (isDetailPage) {\n      e.preventDefault();\n      navigate(`../${PATH_URL.GROUP_MANAGERMENT.EDIT}`, {\n        state: { ...state },\n      });\n    }\n  };\n\n  const showTitle = () => {\n    if (isDetailPage) return t(\"groupManagement.titleDetail\");\n    return state\n      ? t(\"groupManagement.titleEdit\")\n      : t(\"groupManagement.titleCreate\");\n  };\n\n  const dataForm = [\n    {\n      colwidth: COLDEF,\n      type: TYPE_FIELD.INPUT,\n      name: \"name\",\n      maxLength: 50,\n      label: t(\"groupManagement.list.name\"),\n      readOnly: isDetailPage,\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        {\n          max: 50,\n          message: t(\"validate.maxCharacter\", { number: 50 }),\n        },\n        validate.empty(\n          t(\"validate.notEmpty\", {\n            fieldName: t(\"groupManagement.list.name\"),\n          }),\n        ),\n      ],\n    },\n    {\n      type: isDetailPage ? TYPE_FIELD.FORM_DETAIL : TYPE_FIELD.SELECT,\n      name: \"userId\",\n      label: isDetailPage\n        ? t(\"groupManagement.titleListUser\")\n        : t(\"groupManagement.titleAddUser\"),\n      title: isDetailPage ? t(\"groupManagement.titleListUser\") : null,\n      listOptions: convertListOptions(listUser),\n      mode: \"multiple\",\n      filterOption: (input, option) => filterOption(input, option),\n      className: isDetailPage ? \"list-user\" : \"select-users\",\n      content: state?.users\n        ? state?.users?.map((user, i) => (\n            <Link\n              key={i}\n              className=\"mr-10\"\n              to={`${PATH_URL.MANAGER_USER.INDEX}/${PATH_URL.MANAGER_USER.DETAIL}`}\n              state={{ id: user?.id }}\n            >\n              {user.username}\n            </Link>\n          ))\n        : \"-\",\n      rules: [\n        {\n          required: !listUserSelect?.length,\n          message: t(\"validate.notEmpty\", {\n            fieldName: t(\"groupManagement.list.user\"),\n          }),\n        },\n      ],\n    },\n  ];\n\n  const handleFinish = async (values) => {\n    if (state) {\n      try {\n        setLoading(true);\n        await groupApi.putGroup(state?.id, {\n          ...values,\n          userId: values?.userId?.map((item) => {\n            if (item.value) {\n              return item?.value;\n            }\n            return item;\n          }),\n        });\n        message.success(t(\"groupManagement.message.editSuccess\"));\n        handleCancel();\n      } catch (error) {\n        message.error(t(\"groupManagement.message.editError\"));\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      try {\n        setLoading(true);\n        await groupApi.postGroup({\n          ...values,\n          userId: values?.userId?.map((item) => {\n            if (item.value) {\n              return item?.value;\n            }\n            return item;\n          }),\n        });\n        message.success(t(\"groupManagement.message.createSuccess\"));\n        handleCancel();\n      } catch (error) {\n        message.error(t(\"groupManagement.message.createError\"));\n        message.error(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    form.validateFields([\"userId\"]);\n  }, [listUserSelect]);\n\n  return (\n    <div className=\"course-form form-default\">\n      <Row align=\"middle\" className=\"full-width header-table\">\n        <h3>{showTitle()}</h3>\n      </Row>\n\n      {loadingFetchUser ? (\n        <Spin size=\"large\" style={{ margin: \"10px auto\", width: \"100%\" }} />\n      ) : (\n        <Card>\n          <Form\n            form={form}\n            colon={false}\n            layout=\"vertical\"\n            initialValues={state ? initialValues : {}}\n            onFinish={handleFinish}\n            autoComplete=\"off\"\n          >\n            <Row gutter={[48, 8]}>{renderFieldForm(dataForm)}</Row>\n            <Row className=\"flex jc-center gap-20 mt-15 full-width\">\n              <Button\n                type=\"default\"\n                className=\"fw-600 cancel-btn\"\n                onClick={handleCancel}\n              >\n                {t(\"form.btnBack\")}\n              </Button>\n              <Button\n                loading={loading}\n                disabled={loading}\n                className=\"fw-600 submit-btn\"\n                type=\"primary\"\n                htmlType={isDetailPage ? \"button\" : \"submit\"}\n                onClick={(e) => handleLinkEditPage(e)}\n              >\n                {state ? t(\"form.btnEdit\") : t(\"form.btnCreate\")}\n              </Button>\n            </Row>\n          </Form>\n        </Card>\n      )}\n    </div>\n  );\n}\n\nGroupForm.propTypes = {};\n\nexport default GroupForm;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}