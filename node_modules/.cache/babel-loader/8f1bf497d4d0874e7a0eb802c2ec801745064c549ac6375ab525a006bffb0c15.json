{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport { breadcrumb } from \"@common/constant/breadcumb\";\nimport { authStore } from \"@store/slices/authSlice\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport Sider from \"./Sider\";\nimport Header from \"./Header\";\nimport BreadcrumbComp from \"./Breadcrumb\";\nconst {\n  Content\n} = Layout;\nfunction LayoutComp(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    token\n  } = useSelector(authStore);\n  const [collapsed, setCollapsed] = useState(false);\n  useEffect(() => {\n    if (!token) {\n      navigate(PATH_URL.LOGIN);\n    }\n  }, [token]);\n  return /*#__PURE__*/React.createElement(Layout, null, /*#__PURE__*/React.createElement(Sider, {\n    collapsed: collapsed,\n    setCollapsed: setCollapsed\n  }), /*#__PURE__*/React.createElement(Layout, null, /*#__PURE__*/React.createElement(Header, null), /*#__PURE__*/React.createElement(Content, {\n    className: `layout-wraper-content ${collapsed ? \"collapsed\" : \"uncollapsed\"}`\n  }, /*#__PURE__*/React.createElement(BreadcrumbComp, {\n    breadcrumbNameData: breadcrumb\n  }), children)));\n}\n_s(LayoutComp, \"bU9aF4nTgUfR9P0CUD/GC7O72Ls=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c = LayoutComp;\nLayoutComp.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\nexport default LayoutComp;\nvar _c;\n$RefreshReg$(_c, \"LayoutComp\");","map":{"version":3,"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,MAAM;AAC7B,SAASC,UAAU,QAAQ,4BAA4B;AAEvD,SAASC,SAAS,QAAQ,yBAAyB;AACnD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,cAAc,MAAM,cAAc;AAEzC,MAAM;EAAEC;AAAQ,CAAC,GAAGP,MAAM;AAC1B,SAASQ,UAAU,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAC9B,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAE9B,MAAM;IAAEY;EAAM,CAAC,GAAGb,WAAW,CAACI,SAAS,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEjDD,SAAS,CAAC,MAAM;IACd,IAAI,CAACgB,KAAK,EAAE;MACVD,QAAQ,CAACP,QAAQ,CAACW,KAAK,CAAC;IAC1B;EACF,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,oBACEjB,oBAACM,MAAM,qBACLN,oBAACU,KAAK;IAACQ,SAAS,EAAEA,SAAU;IAACC,YAAY,EAAEA;EAAa,EAAG,eAC3DnB,oBAACM,MAAM,qBACLN,oBAACW,MAAM,OAAG,eACVX,oBAACa,OAAO;IACNQ,SAAS,EAAG,yBACVH,SAAS,GAAG,WAAW,GAAG,aAC3B;EAAE,gBAEHlB,oBAACY,cAAc;IAACU,kBAAkB,EAAEf;EAAW,EAAG,EACjDQ,QAAQ,CACD,CACH,CACF;AAEb;AAAA,GA5BSD,UAAU;EAAA,QACAT,WAAW,EAEVD,WAAW;AAAA;AAAA,KAHtBU,UAAU;AA8BnBA,UAAU,CAACS,SAAS,GAAG;EACrBR,QAAQ,EAAEZ,SAAS,CAACqB,SAAS,CAAC,CAC5BrB,SAAS,CAACsB,OAAO,CAACtB,SAAS,CAACuB,IAAI,CAAC,EACjCvB,SAAS,CAACuB,IAAI,CACf;AACH,CAAC;AAED,eAAeZ,UAAU;AAAA;AAAA","names":["React","useEffect","useState","PropTypes","useSelector","useNavigate","Layout","breadcrumb","authStore","PATH_URL","Sider","Header","BreadcrumbComp","Content","LayoutComp","children","navigate","token","collapsed","setCollapsed","LOGIN","className","breadcrumbNameData","propTypes","oneOfType","arrayOf","node"],"sources":["/home/huynd/animalwatch_admin/src/components/layout/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport { breadcrumb } from \"@common/constant/breadcumb\";\n\nimport { authStore } from \"@store/slices/authSlice\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport Sider from \"./Sider\";\nimport Header from \"./Header\";\nimport BreadcrumbComp from \"./Breadcrumb\";\n\nconst { Content } = Layout;\nfunction LayoutComp({ children }) {\n  const navigate = useNavigate();\n\n  const { token } = useSelector(authStore);\n  const [collapsed, setCollapsed] = useState(false);\n\n  useEffect(() => {\n    if (!token) {\n      navigate(PATH_URL.LOGIN);\n    }\n  }, [token]);\n\n  return (\n    <Layout>\n      <Sider collapsed={collapsed} setCollapsed={setCollapsed} />\n      <Layout>\n        <Header />\n        <Content\n          className={`layout-wraper-content ${\n            collapsed ? \"collapsed\" : \"uncollapsed\"\n          }`}\n        >\n          <BreadcrumbComp breadcrumbNameData={breadcrumb} />\n          {children}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nLayoutComp.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default LayoutComp;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}