{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Form, message, Row } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { authStore, loginSuccess } from \"@store/slices/authSlice\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport { validate } from \"@validate/index\";\nimport { authApi } from \"@services/apis/auth\";\nimport { MyComponents } from \"@components/form\";\nimport logoCC from \"@assets/imgs/CCLogo.png\";\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\nfunction Login() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    token\n  } = useSelector(authStore);\n  const [visible, setVisible] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleFinish = value => {\n    authApi.login(value).then(res => {\n      dispatch(loginSuccess(res));\n      message.success(t(\"auth.message.loginSuccess\"));\n    }).catch(err => {\n      if (err.response.data.error === \"you_are_logged\") message.error(t(\"auth.message.logined\"));\n      message.error(t(\"auth.message.loginFailure\"));\n    });\n  };\n  const handleRedirectToForgotPassword = () => {\n    navigate(PATH_URL.FORGOT_PASSWORD);\n  };\n  useEffect(() => {\n    if (token) {\n      navigate(PATH_URL.DASHBOARD);\n    }\n  }, [token]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\"\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoCC,\n    alt: \"logo\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-center px-30 mt-10\"\n  }, /*#__PURE__*/React.createElement(Form, {\n    name: \"normal_login\",\n    className: \"login-form\",\n    layout: \"vertical\",\n    onFinish: handleFinish\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"fz-23 mb-30 fw-400 color-black-light\"\n  }, t(\"auth.title\")), /*#__PURE__*/React.createElement(MyComponents.TextField, {\n    name: \"email\",\n    clsInput: \"input-email\",\n    className: \"full-width\",\n    label: t(\"auth.email\"),\n    placeholder: t(\"auth.email\"),\n    rules: [validate.email(t)]\n  }), /*#__PURE__*/React.createElement(MyComponents.TextField, {\n    type: visible ? \"text\" : \"password\",\n    name: \"password\",\n    clsInput: \"input-email\",\n    className: \"full-width\",\n    label: t(\"auth.password\"),\n    placeholder: t(\"auth.password\")\n    // right now not use because password invalid\n    ,\n\n    rules: [validate.validatePassword(t)],\n    suffix: visible ? /*#__PURE__*/React.createElement(EyeTwoTone, {\n      onClick: () => setVisible(false)\n    }) : /*#__PURE__*/React.createElement(EyeInvisibleOutlined, {\n      onClick: () => setVisible(true)\n    })\n  }), /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    justify: \"center\"\n  }, /*#__PURE__*/React.createElement(\"span\", null, t(\"auth.forgotPassword\"), \":\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    onClick: handleRedirectToForgotPassword\n  }, t(\"auth.btnForgetPassword\"))), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"button-submit\"\n  }, t(\"auth.btnLogin\")))));\n}\n_s(Login, \"WNdRrCOdZCGbVXwIJlZsCwXsOTQ=\", false, function () {\n  return [useTranslation, useSelector, useNavigate, useDispatch];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"mappings":"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","names":["React","useEffect","useState","useDispatch","useSelector","Button","Form","message","Row","useNavigate","useTranslation","authStore","loginSuccess","PATH_URL","validate","authApi","MyComponents","logoCC","EyeInvisibleOutlined","EyeTwoTone","Login","t","token","visible","setVisible","navigate","dispatch","handleFinish","value","login","then","res","success","catch","err","response","data","error","handleRedirectToForgotPassword","FORGOT_PASSWORD","DASHBOARD","className","src","alt","name","layout","onFinish","TextField","clsInput","label","placeholder","rules","email","type","validatePassword","suffix","onClick","align","justify","htmlType"],"sources":["/home/huynd/animalwatch_admin/src/pages/auth/Login.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Form, message, Row } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { authStore, loginSuccess } from \"@store/slices/authSlice\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport { validate } from \"@validate/index\";\nimport { authApi } from \"@services/apis/auth\";\nimport { MyComponents } from \"@components/form\";\nimport logoCC from \"@assets/imgs/CCLogo.png\";\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\n\nfunction Login() {\n  const { t } = useTranslation();\n  const { token } = useSelector(authStore);\n  const [visible, setVisible] = useState(false);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleFinish = (value) => {\n    authApi\n      .login(value)\n      .then((res) => {\n        dispatch(loginSuccess(res));\n        message.success(t(\"auth.message.loginSuccess\"));\n      })\n      .catch((err) => {\n        if (err.response.data.error === \"you_are_logged\")\n          message.error(t(\"auth.message.logined\"));\n        message.error(t(\"auth.message.loginFailure\"));\n      });\n  };\n\n  const handleRedirectToForgotPassword = () => {\n    navigate(PATH_URL.FORGOT_PASSWORD);\n  };\n\n  useEffect(() => {\n    if (token) {\n      navigate(PATH_URL.DASHBOARD);\n    }\n  }, [token]);\n\n  return (\n    <div className=\"login\">\n      <div className=\"logo\">\n        <img src={logoCC} alt=\"logo\" />\n      </div>\n      <div className=\"flex-center px-30 mt-10\">\n        <Form\n          name=\"normal_login\"\n          className=\"login-form\"\n          layout=\"vertical\"\n          onFinish={handleFinish}\n        >\n          <h1 className=\"fz-23 mb-30 fw-400 color-black-light\">\n            {t(\"auth.title\")}\n          </h1>\n\n          <MyComponents.TextField\n            name=\"email\"\n            clsInput=\"input-email\"\n            className=\"full-width\"\n            label={t(\"auth.email\")}\n            placeholder={t(\"auth.email\")}\n            rules={[validate.email(t)]}\n          />\n\n          <MyComponents.TextField\n            type={visible ? \"text\" : \"password\"}\n            name=\"password\"\n            clsInput=\"input-email\"\n            className=\"full-width\"\n            label={t(\"auth.password\")}\n            placeholder={t(\"auth.password\")}\n            // right now not use because password invalid\n            rules={[validate.validatePassword(t)]}\n            suffix={\n              visible ? (\n                <EyeTwoTone onClick={() => setVisible(false)} />\n              ) : (\n                <EyeInvisibleOutlined onClick={() => setVisible(true)} />\n              )\n            }\n          />\n\n          <Row align=\"middle\" justify=\"center\">\n            <span>{t(\"auth.forgotPassword\")}:</span>\n            <Button type=\"link\" onClick={handleRedirectToForgotPassword}>\n              {t(\"auth.btnForgetPassword\")}\n            </Button>\n          </Row>\n\n          <Button type=\"primary\" htmlType=\"submit\" className=\"button-submit\">\n            {t(\"auth.btnLogin\")}\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}