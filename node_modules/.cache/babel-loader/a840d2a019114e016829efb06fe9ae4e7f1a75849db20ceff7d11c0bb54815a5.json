{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { IMAGE_URL } from \"@common/config/endpoint\";\nimport { DATE_TIME_FORMAT_MINUTE } from \"@common/constant/date\";\nimport { COLDEF, COL_HAFT, TYPE_FIELD } from \"@common/constant/form\";\nimport { HASH_TAG_EVENT, LEVEL_EVENT, TYPE_EVENT } from \"@common/constant/masterData\";\nimport { appendFormData } from \"@common/utils/appendFormData\";\nimport { renderFieldForm } from \"@common/utils/renderFieldForm\";\nimport { eventApi } from \"@services/apis/eventApi\";\nimport { validate } from \"@validate/index\";\nimport { coordinates, numberPreventInput } from \"@validate/validate\";\nimport { Button, Card, Form, Row, message } from \"antd\";\nimport dayjs from \"dayjs\";\nimport isToday from \"dayjs/plugin/isToday\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { disableAfterDateWithParams, disableBeforeDateWithParams, disableDateBefore, disableRangeTime, disableTimeAfter, disableTimeBefore, isBeforeFromToday } from \"@common/utils/dateHelper\";\nimport { courseApi } from \"@services/apis/course\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport { levelApi } from \"@services/apis/level\";\ndayjs.extend(isToday);\nfunction EventForm() {\n  _s();\n  var _state$courses$, _state$courses;\n  const {\n    t\n  } = useTranslation();\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [isEventOutside, setIsEventOutside] = useState(false);\n  const [isCyclingEvent, setCyclingEvent] = useState(false);\n  const [startDate, setStartDate] = useState();\n  const [addedArr, setAddedArr] = useState([]);\n  const [deletedArr, setDeletedArr] = useState([]);\n  const [listDeletedId, setListDeletedId] = useState([]);\n  const defaultDeadline = useRef();\n  const initValues = {\n    ...state,\n    type: state === null || state === void 0 ? void 0 : state.type.toString(),\n    startDate: state && dayjs(state === null || state === void 0 ? void 0 : state.startDate),\n    endDate: (state === null || state === void 0 ? void 0 : state.endDate) && dayjs(state === null || state === void 0 ? void 0 : state.endDate),\n    deadlineDate: (state === null || state === void 0 ? void 0 : state.deadlineDate) && dayjs(state === null || state === void 0 ? void 0 : state.deadlineDate),\n    imagesEvent: state === null || state === void 0 ? void 0 : state.images,\n    hashtag: state === null || state === void 0 ? void 0 : state.hashtag.toString(),\n    listEventCoursesId: state === null || state === void 0 ? void 0 : (_state$courses$ = state.courses[0]) === null || _state$courses$ === void 0 ? void 0 : _state$courses$.id,\n    level: state === null || state === void 0 ? void 0 : state.levelId,\n    totalDistance: state !== null && state !== void 0 && state.totalDistance ? state === null || state === void 0 ? void 0 : state.totalDistance : null,\n    maxHeight: state !== null && state !== void 0 && state.maxHeight ? state === null || state === void 0 ? void 0 : state.maxHeight : null\n  };\n  const fetchData = async condition => {\n    const response = await courseApi.getCourses(condition);\n    return response.data;\n  };\n  const {\n    value: valueUserJoined\n  } = useFetch(() => eventApi.getUsersJoinEvent(state === null || state === void 0 ? void 0 : state.id, {\n    status: true\n  }), [state === null || state === void 0 ? void 0 : state.id]);\n  const handleChangeType = type => {\n    setIsEventOutside(type === \"2\");\n    setCyclingEvent(type === \"0\");\n  };\n  const handleValuesChange = values => {\n    if (!Object.keys(values).includes(\"startDate\")) return;\n    form.setFieldValue(\"endDate\", null);\n    form.setFieldValue(\"deadlineDate\", null);\n  };\n  const handleDisableTime = (current, hour, minute) => {\n    if (!dayjs(current).isToday()) return null;\n    return disableTimeBefore(hour, hour === dayjs(current).hour() ? minute : 0);\n  };\n  const handleDisableAfterTime = (current, hour, minute) => {\n    if (!dayjs(current).isSame(startDate, \"day\")) return null;\n    return disableTimeAfter(minute === 0 ? hour - 1 : hour, hour - 1 === dayjs(current).hour() ? minute : 60);\n  };\n  const handleDisableBeforeDeadline = (current, hour, minute) => {\n    return disableTimeBefore(hour, hour === dayjs(current).hour() ? minute + 1 : 0);\n  };\n  const handleDisableBeforeTime = (current, hour, minute) => {\n    if (!dayjs(current).isSame(startDate, \"day\")) return null;\n    return disableTimeBefore(hour, hour === dayjs(current).hour() ? minute + 1 : 0);\n  };\n  const handleDisableRangeTime = (current, startHour, endHour, startMinute, endMinute) => {\n    if (!dayjs(current).isSame(startDate, \"day\") && !dayjs(current).isSame(dayjs(), \"day\")) return null;\n    if (dayjs(current).isSame(dayjs(), \"day\") && !dayjs(startDate).isSame(dayjs(), \"day\")) return handleDisableBeforeDeadline(current, startHour, startMinute);\n    if (dayjs(current).isSame(startDate, \"day\") && !dayjs(current).isSame(dayjs(), \"day\")) return handleDisableAfterTime(current, endHour, endMinute);\n    return disableRangeTime(startHour, endHour, startMinute, endMinute, current);\n  };\n  const handleGetLevel = async params => {\n    const response = await levelApi.getLevels(params);\n    return response.data;\n  };\n  useEffect(() => {\n    if ((state === null || state === void 0 ? void 0 : state.type) === 2) {\n      setIsEventOutside(true);\n    }\n    if ((state === null || state === void 0 ? void 0 : state.type) === 0) {\n      setCyclingEvent(true);\n    }\n    setStartDate(state === null || state === void 0 ? void 0 : state.startDate);\n  }, [state]);\n  const listField = [{\n    type: TYPE_FIELD.INPUT,\n    name: \"title\",\n    label: t(\"events.form.nameEvent\"),\n    colwidth: COL_HAFT,\n    rules: [{\n      required: true,\n      message: t(\"events.validate.notEmpty\", {\n        fieldName: t(\"events.form.nameEvent\")\n      })\n    }, {\n      max: 50,\n      message: t(\"validate.maxCharacter\", {\n        number: 50\n      })\n    }],\n    maxLength: 50\n  }, {\n    type: TYPE_FIELD.SELECT,\n    name: \"type\",\n    label: t(\"events.form.type\"),\n    colwidth: COL_HAFT,\n    listOptions: TYPE_EVENT,\n    disabled: Boolean(state),\n    onChange: handleChangeType,\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"events.validate.notEmpty\", {\n      fieldName: t(\"events.form.type\")\n    }))]\n  }, {\n    type: TYPE_FIELD.TEXT_AREA,\n    name: \"description\",\n    colwidth: COL_HAFT,\n    label: t(\"events.form.content\"),\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"events.validate.notEmpty\", {\n      fieldName: t(\"events.form.content\")\n    }))]\n  }, {\n    type: TYPE_FIELD.INPUT,\n    name: \"link\",\n    label: t(\"events.form.link\"),\n    hideField: !isEventOutside,\n    colwidth: COLDEF,\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"events.validate.notEmpty\", {\n      fieldName: t(\"events.form.link\")\n    }))]\n  }, {\n    type: TYPE_FIELD.INPUT,\n    name: \"coupon\",\n    label: t(\"events.form.coupon\"),\n    hideField: !isEventOutside,\n    colwidth: COL_HAFT,\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"events.validate.notEmpty\", {\n      fieldName: t(\"events.form.coupon\")\n    }))]\n  }, {\n    type: TYPE_FIELD.INPUT,\n    name: \"place\",\n    label: t(\"events.form.position\"),\n    colwidth: COL_HAFT,\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"events.validate.notEmpty\", {\n      fieldName: t(\"events.form.position\")\n    })), {\n      max: 100,\n      message: t(\"validate.maxCharacter\", {\n        number: 100\n      })\n    }],\n    maxLength: 100\n  }, {\n    type: TYPE_FIELD.TEXT_AREA,\n    name: \"couponContent\",\n    label: t(\"events.form.couponContent\"),\n    hideField: !isEventOutside,\n    hidden: !isEventOutside,\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"events.validate.notEmpty\", {\n      fieldName: t(\"events.form.couponContent\")\n    })), {\n      max: 200,\n      message: t(\"validate.maxCharacter\", {\n        number: 200\n      })\n    }],\n    maxLength: 200\n  }, {\n    type: TYPE_FIELD.SELECT_SCROLL_LOADING,\n    name: \"level\",\n    colwidth: COL_HAFT,\n    label: t(\"events.form.level\"),\n    setListDeletedId,\n    listDeletedId,\n    hideField: !isEventOutside,\n    fetchData: handleGetLevel,\n    listInitialId: [state === null || state === void 0 ? void 0 : state.levelId],\n    returnOption: item => ({\n      key: item === null || item === void 0 ? void 0 : item.id,\n      label: item === null || item === void 0 ? void 0 : item.name,\n      value: item === null || item === void 0 ? void 0 : item.id\n    }),\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"events.validate.notEmpty\", {\n      fieldName: t(\"events.form.level\")\n    }))]\n  }, {\n    type: TYPE_FIELD.INPUT,\n    name: \"maxHeight\",\n    label: t(\"events.form.maxHeight\"),\n    colwidth: COL_HAFT,\n    hideField: isEventOutside,\n    onChange: e => numberPreventInput(e.target.value, form, \"maxHeight\", 2)\n  }, {\n    type: TYPE_FIELD.INPUT,\n    name: \"totalDistance\",\n    label: t(\"events.form.runningDistance\"),\n    colwidth: COL_HAFT,\n    hideField: isEventOutside,\n    onChange: e => numberPreventInput(e.target.value, form, \"totalDistance\", 2)\n  }, {\n    type: TYPE_FIELD.DATE_PICKER,\n    name: \"startDate\",\n    label: t(\"events.form.dateStartEvent\"),\n    className: \"full-width\",\n    colwidth: COL_HAFT,\n    showNow: false,\n    showTime: {\n      // default is 8h if current time is greater than 8h\n      defaultValue: dayjs().hour() < 8 && dayjs(startDate).isToday() ? dayjs(\"08:00\", \"HH:mm\") : dayjs(`${dayjs(startDate).hour()}:${dayjs(startDate).minute()}`, \"HH:mm\")\n    },\n    inputReadOnly: true,\n    format: DATE_TIME_FORMAT_MINUTE,\n    disableDate: disableDateBefore,\n    disabledTime: current => handleDisableTime(current, dayjs().hour(), dayjs().minute()),\n    onChange: value => setStartDate(value || undefined),\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"events.validate.notEmpty\", {\n      fieldName: t(\"events.form.dateStartEvent\")\n    }))]\n  }, {\n    type: TYPE_FIELD.DATE_PICKER,\n    name: \"endDate\",\n    label: t(\"events.form.dateEndEvent\"),\n    colwidth: COL_HAFT,\n    className: \"full-width\",\n    showTime: {\n      defaultValue: dayjs(`${dayjs(startDate).hour()}:${dayjs(startDate).minute() + 1}`, \"HH:mm\")\n    },\n    showNow: false,\n    inputReadOnly: true,\n    format: DATE_TIME_FORMAT_MINUTE,\n    disableDate: current => disableBeforeDateWithParams(current, startDate),\n    disabledTime: current => handleDisableBeforeTime(current, dayjs(startDate).hour(), dayjs(startDate).minute()),\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"events.validate.notEmpty\", {\n      fieldName: t(\"events.form.dateEndEvent\")\n    }))]\n  }, {\n    type: TYPE_FIELD.DATE_PICKER,\n    name: \"deadlineDate\",\n    label: t(\"events.form.deadlineDate\"),\n    colwidth: COL_HAFT,\n    className: \"full-width\",\n    hidden: isEventOutside,\n    showNow: false,\n    showTime: {\n      defaultValue: dayjs(\"08:00\", \"HH:mm\")\n    },\n    inputReadOnly: true,\n    format: DATE_TIME_FORMAT_MINUTE,\n    disableDate: current => disableAfterDateWithParams(current, dayjs(startDate)) || disableDateBefore(current),\n    disabledTime: current => handleDisableRangeTime(current, dayjs().hour(), dayjs(startDate).hour() + 1, dayjs().minute(), dayjs(startDate).minute()),\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"events.validate.notEmpty\", {\n      fieldName: t(\"events.form.deadlineDate\")\n    }))]\n  }, {\n    type: TYPE_FIELD.INPUT,\n    name: \"termsTitle\",\n    hideField: isEventOutside,\n    label: t(\"events.form.termsTitle\"),\n    colwidth: COL_HAFT,\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"events.validate.notEmpty\", {\n      fieldName: t(\"events.form.termsTitle\")\n    })), {\n      max: 40,\n      message: t(\"validate.maxCharacter\", {\n        number: 40\n      })\n    }],\n    maxLength: 40\n  }, {\n    type: TYPE_FIELD.TEXT_AREA,\n    name: \"termsContent\",\n    hideField: isEventOutside,\n    hidden: isEventOutside,\n    label: t(\"events.form.termsContent\"),\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"events.validate.notEmpty\", {\n      fieldName: t(\"events.form.termsContent\")\n    }))]\n  }, {\n    type: TYPE_FIELD.INPUT,\n    name: \"limit\",\n    hideField: isEventOutside,\n    label: t(\"events.form.limit\"),\n    colwidth: COL_HAFT,\n    disabled: isBeforeFromToday(state === null || state === void 0 ? void 0 : state.deadlineDate, \"minute\"),\n    rules: !isCyclingEvent ? [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"events.validate.notEmpty\", {\n      fieldName: t(\"events.form.limit\")\n    }))] : [],\n    onChange: e => coordinates(e.target.value, form, \"limit\", (valueUserJoined === null || valueUserJoined === void 0 ? void 0 : valueUserJoined.data.length) || 0)\n  }, {\n    type: TYPE_FIELD.SELECT,\n    name: \"hashtag\",\n    label: t(\"events.form.hashtag\"),\n    colwidth: isEventOutside ? COLDEF : COL_HAFT,\n    listOptions: HASH_TAG_EVENT,\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.empty(t(\"events.validate.notEmpty\", {\n      fieldName: t(\"events.form.hashtag\")\n    }))]\n  }, {\n    type: TYPE_FIELD.SELECT_SCROLL_LOADING,\n    name: \"listEventCoursesId\",\n    label: t(\"checkpoint.form.routeId\"),\n    hideField: !isEventOutside,\n    fetchData,\n    setListDeletedId,\n    listDeletedId,\n    listInitialId: state === null || state === void 0 ? void 0 : (_state$courses = state.courses) === null || _state$courses === void 0 ? void 0 : _state$courses.map(item => {\n      return item === null || item === void 0 ? void 0 : item.id;\n    }),\n    returnOption: item => ({\n      key: item === null || item === void 0 ? void 0 : item.id,\n      label: item === null || item === void 0 ? void 0 : item.title,\n      value: item === null || item === void 0 ? void 0 : item.id\n    })\n  }, {\n    type: TYPE_FIELD.UPLOAD,\n    name: \"imagesEvent\",\n    label: t(\"events.form.images\"),\n    initialFileList: state ? state === null || state === void 0 ? void 0 : state.images.map(item => {\n      return {\n        uid: item,\n        url: `${IMAGE_URL}${item}/original.jpg`\n      };\n    }) : [],\n    deletedArr,\n    setAddedArr,\n    setDeletedArr,\n    rules: [{\n      required: true,\n      message: \"\"\n    }, validate.emptyImg(t(\"events.validate.notEmpty\", {\n      fieldName: t(\"events.form.images\")\n    }))]\n  }].filter(col => !col.hidden);\n  const onSubmitForm = values => {\n    if (!values.endDate) delete values.endDate;\n    if (!values.totalDistance) delete values.totalDistance;\n    if (!values.maxHeight) delete values.maxHeight;\n    setLoading(true);\n    const result = {\n      ...values,\n      imagesEvent: addedArr,\n      deleteImageIds: deletedArr || [],\n      levelId: values === null || values === void 0 ? void 0 : values.level\n    };\n    const formData = appendFormData(result);\n    if (!state) {\n      eventApi.postEvent(formData).then(() => {\n        message.success(t(\"events.message.createSuccess\"));\n        navigate(\"..\");\n      }).catch(() => {\n        message.error(t(\"events.message.createErr\"));\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n    eventApi.editEvent(formData, state.id).then(() => {\n      message.success(t(\"events.message.createSuccess\"));\n      navigate(\"..\");\n    }).catch(() => {\n      message.error(t(\"events.message.createErr\"));\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-default checkpoint-form\"\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    className: \"full-width header-table\"\n  }, /*#__PURE__*/React.createElement(\"h1\", null, state ? t(\"events.editTitle\") : t(\"events.createTitle\"))), /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(Form, {\n    colon: false,\n    form: form,\n    layout: \"vertical\",\n    initialValues: state ? initValues : {},\n    onValuesChange: handleValuesChange,\n    onFinish: onSubmitForm\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [48, 8]\n  }, renderFieldForm(listField)), /*#__PURE__*/React.createElement(Row, {\n    justify: \"center\",\n    className: \"flex gap-20\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    onClick: () => navigate(\"..\")\n  }, t(\"events.form.btnBack\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    disabled: loading\n  }, state ? t(\"events.form.btnSave\") : t(\"events.form.btnSubmit\"))))));\n}\n_s(EventForm, \"VL2dB3VRjLXg7THD5eapH8tTQ1E=\", false, function () {\n  return [useTranslation, useLocation, useNavigate, Form.useForm, useFetch];\n});\n_c = EventForm;\nEventForm.propTypes = {};\nexport default EventForm;\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","useRef","IMAGE_URL","DATE_TIME_FORMAT_MINUTE","COLDEF","COL_HAFT","TYPE_FIELD","HASH_TAG_EVENT","LEVEL_EVENT","TYPE_EVENT","appendFormData","renderFieldForm","eventApi","validate","coordinates","numberPreventInput","Button","Card","Form","Row","message","dayjs","isToday","useTranslation","useLocation","useNavigate","disableAfterDateWithParams","disableBeforeDateWithParams","disableDateBefore","disableRangeTime","disableTimeAfter","disableTimeBefore","isBeforeFromToday","courseApi","useFetch","levelApi","extend","EventForm","t","state","navigate","form","useForm","loading","setLoading","isEventOutside","setIsEventOutside","isCyclingEvent","setCyclingEvent","startDate","setStartDate","addedArr","setAddedArr","deletedArr","setDeletedArr","listDeletedId","setListDeletedId","defaultDeadline","initValues","type","toString","endDate","deadlineDate","imagesEvent","images","hashtag","listEventCoursesId","courses","id","level","levelId","totalDistance","maxHeight","fetchData","condition","response","getCourses","data","value","valueUserJoined","getUsersJoinEvent","status","handleChangeType","handleValuesChange","values","Object","keys","includes","setFieldValue","handleDisableTime","current","hour","minute","handleDisableAfterTime","isSame","handleDisableBeforeDeadline","handleDisableBeforeTime","handleDisableRangeTime","startHour","endHour","startMinute","endMinute","handleGetLevel","params","getLevels","listField","INPUT","name","label","colwidth","rules","required","fieldName","max","number","maxLength","SELECT","listOptions","disabled","Boolean","onChange","empty","TEXT_AREA","hideField","hidden","SELECT_SCROLL_LOADING","listInitialId","returnOption","item","key","e","target","DATE_PICKER","className","showNow","showTime","defaultValue","inputReadOnly","format","disableDate","disabledTime","undefined","length","map","title","UPLOAD","initialFileList","uid","url","emptyImg","filter","col","onSubmitForm","result","deleteImageIds","formData","postEvent","then","success","catch","error","finally","editEvent","align","colon","layout","initialValues","onValuesChange","onFinish","gutter","justify","onClick","htmlType","propTypes"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/event/EventForm.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { IMAGE_URL } from \"@common/config/endpoint\";\nimport { DATE_TIME_FORMAT_MINUTE } from \"@common/constant/date\";\nimport { COLDEF, COL_HAFT, TYPE_FIELD } from \"@common/constant/form\";\nimport {\n  HASH_TAG_EVENT,\n  LEVEL_EVENT,\n  TYPE_EVENT,\n} from \"@common/constant/masterData\";\nimport { appendFormData } from \"@common/utils/appendFormData\";\nimport { renderFieldForm } from \"@common/utils/renderFieldForm\";\nimport { eventApi } from \"@services/apis/eventApi\";\nimport { validate } from \"@validate/index\";\nimport { coordinates, numberPreventInput } from \"@validate/validate\";\nimport { Button, Card, Form, Row, message } from \"antd\";\nimport dayjs from \"dayjs\";\nimport isToday from \"dayjs/plugin/isToday\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport {\n  disableAfterDateWithParams,\n  disableBeforeDateWithParams,\n  disableDateBefore,\n  disableRangeTime,\n  disableTimeAfter,\n  disableTimeBefore,\n  isBeforeFromToday,\n} from \"@common/utils/dateHelper\";\nimport { courseApi } from \"@services/apis/course\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport { levelApi } from \"@services/apis/level\";\n\ndayjs.extend(isToday);\n\nfunction EventForm() {\n  const { t } = useTranslation();\n  const { state } = useLocation();\n  const navigate = useNavigate();\n\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [isEventOutside, setIsEventOutside] = useState(false);\n  const [isCyclingEvent, setCyclingEvent] = useState(false);\n  const [startDate, setStartDate] = useState();\n  const [addedArr, setAddedArr] = useState([]);\n  const [deletedArr, setDeletedArr] = useState([]);\n  const [listDeletedId, setListDeletedId] = useState([]);\n  const defaultDeadline = useRef();\n\n  const initValues = {\n    ...state,\n    type: state?.type.toString(),\n    startDate: state && dayjs(state?.startDate),\n    endDate: state?.endDate && dayjs(state?.endDate),\n    deadlineDate: state?.deadlineDate && dayjs(state?.deadlineDate),\n    imagesEvent: state?.images,\n    hashtag: state?.hashtag.toString(),\n    listEventCoursesId: state?.courses[0]?.id,\n    level: state?.levelId,\n    totalDistance: state?.totalDistance ? state?.totalDistance : null,\n    maxHeight: state?.maxHeight ? state?.maxHeight : null,\n  };\n\n  const fetchData = async (condition) => {\n    const response = await courseApi.getCourses(condition);\n    return response.data;\n  };\n\n  const { value: valueUserJoined } = useFetch(\n    () => eventApi.getUsersJoinEvent(state?.id, { status: true }),\n    [state?.id],\n  );\n\n  const handleChangeType = (type) => {\n    setIsEventOutside(type === \"2\");\n    setCyclingEvent(type === \"0\");\n  };\n\n  const handleValuesChange = (values) => {\n    if (!Object.keys(values).includes(\"startDate\")) return;\n    form.setFieldValue(\"endDate\", null);\n    form.setFieldValue(\"deadlineDate\", null);\n  };\n\n  const handleDisableTime = (current, hour, minute) => {\n    if (!dayjs(current).isToday()) return null;\n    return disableTimeBefore(hour, hour === dayjs(current).hour() ? minute : 0);\n  };\n\n  const handleDisableAfterTime = (current, hour, minute) => {\n    if (!dayjs(current).isSame(startDate, \"day\")) return null;\n    return disableTimeAfter(\n      minute === 0 ? hour - 1 : hour,\n      hour - 1 === dayjs(current).hour() ? minute : 60,\n    );\n  };\n\n  const handleDisableBeforeDeadline = (current, hour, minute) => {\n    return disableTimeBefore(\n      hour,\n      hour === dayjs(current).hour() ? minute + 1 : 0,\n    );\n  };\n\n  const handleDisableBeforeTime = (current, hour, minute) => {\n    if (!dayjs(current).isSame(startDate, \"day\")) return null;\n    return disableTimeBefore(\n      hour,\n      hour === dayjs(current).hour() ? minute + 1 : 0,\n    );\n  };\n\n  const handleDisableRangeTime = (\n    current,\n    startHour,\n    endHour,\n    startMinute,\n    endMinute,\n  ) => {\n    if (\n      !dayjs(current).isSame(startDate, \"day\") &&\n      !dayjs(current).isSame(dayjs(), \"day\")\n    )\n      return null;\n    if (\n      dayjs(current).isSame(dayjs(), \"day\") &&\n      !dayjs(startDate).isSame(dayjs(), \"day\")\n    )\n      return handleDisableBeforeDeadline(current, startHour, startMinute);\n    if (\n      dayjs(current).isSame(startDate, \"day\") &&\n      !dayjs(current).isSame(dayjs(), \"day\")\n    )\n      return handleDisableAfterTime(current, endHour, endMinute);\n    return disableRangeTime(\n      startHour,\n      endHour,\n      startMinute,\n      endMinute,\n      current,\n    );\n  };\n\n  const handleGetLevel = async (params) => {\n    const response = await levelApi.getLevels(params);\n    return response.data;\n  };\n\n  useEffect(() => {\n    if (state?.type === 2) {\n      setIsEventOutside(true);\n    }\n    if (state?.type === 0) {\n      setCyclingEvent(true);\n    }\n    setStartDate(state?.startDate);\n  }, [state]);\n\n  const listField = [\n    {\n      type: TYPE_FIELD.INPUT,\n      name: \"title\",\n      label: t(\"events.form.nameEvent\"),\n      colwidth: COL_HAFT,\n      rules: [\n        {\n          required: true,\n          message: t(\"events.validate.notEmpty\", {\n            fieldName: t(\"events.form.nameEvent\"),\n          }),\n        },\n        {\n          max: 50,\n          message: t(\"validate.maxCharacter\", { number: 50 }),\n        },\n      ],\n      maxLength: 50,\n    },\n    {\n      type: TYPE_FIELD.SELECT,\n      name: \"type\",\n      label: t(\"events.form.type\"),\n      colwidth: COL_HAFT,\n      listOptions: TYPE_EVENT,\n      disabled: Boolean(state),\n      onChange: handleChangeType,\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        validate.empty(\n          t(\"events.validate.notEmpty\", {\n            fieldName: t(\"events.form.type\"),\n          }),\n        ),\n      ],\n    },\n    {\n      type: TYPE_FIELD.TEXT_AREA,\n      name: \"description\",\n      colwidth: COL_HAFT,\n      label: t(\"events.form.content\"),\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        validate.empty(\n          t(\"events.validate.notEmpty\", {\n            fieldName: t(\"events.form.content\"),\n          }),\n        ),\n      ],\n    },\n    {\n      type: TYPE_FIELD.INPUT,\n      name: \"link\",\n      label: t(\"events.form.link\"),\n      hideField: !isEventOutside,\n      colwidth: COLDEF,\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        validate.empty(\n          t(\"events.validate.notEmpty\", {\n            fieldName: t(\"events.form.link\"),\n          }),\n        ),\n      ],\n    },\n    {\n      type: TYPE_FIELD.INPUT,\n      name: \"coupon\",\n      label: t(\"events.form.coupon\"),\n      hideField: !isEventOutside,\n      colwidth: COL_HAFT,\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        validate.empty(\n          t(\"events.validate.notEmpty\", {\n            fieldName: t(\"events.form.coupon\"),\n          }),\n        ),\n      ],\n    },\n    {\n      type: TYPE_FIELD.INPUT,\n      name: \"place\",\n      label: t(\"events.form.position\"),\n      colwidth: COL_HAFT,\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        validate.empty(\n          t(\"events.validate.notEmpty\", {\n            fieldName: t(\"events.form.position\"),\n          }),\n        ),\n        {\n          max: 100,\n          message: t(\"validate.maxCharacter\", { number: 100 }),\n        },\n      ],\n      maxLength: 100,\n    },\n    {\n      type: TYPE_FIELD.TEXT_AREA,\n      name: \"couponContent\",\n      label: t(\"events.form.couponContent\"),\n      hideField: !isEventOutside,\n      hidden: !isEventOutside,\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        validate.empty(\n          t(\"events.validate.notEmpty\", {\n            fieldName: t(\"events.form.couponContent\"),\n          }),\n        ),\n        {\n          max: 200,\n          message: t(\"validate.maxCharacter\", { number: 200 }),\n        },\n      ],\n      maxLength: 200,\n    },\n    {\n      type: TYPE_FIELD.SELECT_SCROLL_LOADING,\n      name: \"level\",\n      colwidth: COL_HAFT,\n      label: t(\"events.form.level\"),\n      setListDeletedId,\n      listDeletedId,\n      hideField: !isEventOutside,\n      fetchData: handleGetLevel,\n      listInitialId: [state?.levelId],\n      returnOption: (item) => ({\n        key: item?.id,\n        label: item?.name,\n        value: item?.id,\n      }),\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        validate.empty(\n          t(\"events.validate.notEmpty\", {\n            fieldName: t(\"events.form.level\"),\n          }),\n        ),\n      ],\n    },\n    {\n      type: TYPE_FIELD.INPUT,\n      name: \"maxHeight\",\n      label: t(\"events.form.maxHeight\"),\n      colwidth: COL_HAFT,\n      hideField: isEventOutside,\n      onChange: (e) => numberPreventInput(e.target.value, form, \"maxHeight\", 2),\n    },\n    {\n      type: TYPE_FIELD.INPUT,\n      name: \"totalDistance\",\n      label: t(\"events.form.runningDistance\"),\n      colwidth: COL_HAFT,\n      hideField: isEventOutside,\n      onChange: (e) =>\n        numberPreventInput(e.target.value, form, \"totalDistance\", 2),\n    },\n    {\n      type: TYPE_FIELD.DATE_PICKER,\n      name: \"startDate\",\n      label: t(\"events.form.dateStartEvent\"),\n      className: \"full-width\",\n      colwidth: COL_HAFT,\n      showNow: false,\n      showTime: {\n        // default is 8h if current time is greater than 8h\n        defaultValue:\n          dayjs().hour() < 8 && dayjs(startDate).isToday()\n            ? dayjs(\"08:00\", \"HH:mm\")\n            : dayjs(\n                `${dayjs(startDate).hour()}:${dayjs(startDate).minute()}`,\n                \"HH:mm\",\n              ),\n      },\n      inputReadOnly: true,\n      format: DATE_TIME_FORMAT_MINUTE,\n      disableDate: disableDateBefore,\n      disabledTime: (current) =>\n        handleDisableTime(current, dayjs().hour(), dayjs().minute()),\n      onChange: (value) => setStartDate(value || undefined),\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        validate.empty(\n          t(\"events.validate.notEmpty\", {\n            fieldName: t(\"events.form.dateStartEvent\"),\n          }),\n        ),\n      ],\n    },\n    {\n      type: TYPE_FIELD.DATE_PICKER,\n      name: \"endDate\",\n      label: t(\"events.form.dateEndEvent\"),\n      colwidth: COL_HAFT,\n      className: \"full-width\",\n      showTime: {\n        defaultValue: dayjs(\n          `${dayjs(startDate).hour()}:${dayjs(startDate).minute() + 1}`,\n          \"HH:mm\",\n        ),\n      },\n      showNow: false,\n      inputReadOnly: true,\n      format: DATE_TIME_FORMAT_MINUTE,\n      disableDate: (current) => disableBeforeDateWithParams(current, startDate),\n      disabledTime: (current) =>\n        handleDisableBeforeTime(\n          current,\n          dayjs(startDate).hour(),\n          dayjs(startDate).minute(),\n        ),\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        validate.empty(\n          t(\"events.validate.notEmpty\", {\n            fieldName: t(\"events.form.dateEndEvent\"),\n          }),\n        ),\n      ],\n    },\n    {\n      type: TYPE_FIELD.DATE_PICKER,\n      name: \"deadlineDate\",\n      label: t(\"events.form.deadlineDate\"),\n      colwidth: COL_HAFT,\n      className: \"full-width\",\n      hidden: isEventOutside,\n      showNow: false,\n      showTime: {\n        defaultValue: dayjs(\"08:00\", \"HH:mm\"),\n      },\n      inputReadOnly: true,\n      format: DATE_TIME_FORMAT_MINUTE,\n      disableDate: (current) =>\n        disableAfterDateWithParams(current, dayjs(startDate)) ||\n        disableDateBefore(current),\n      disabledTime: (current) =>\n        handleDisableRangeTime(\n          current,\n          dayjs().hour(),\n          dayjs(startDate).hour() + 1,\n          dayjs().minute(),\n          dayjs(startDate).minute(),\n        ),\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        validate.empty(\n          t(\"events.validate.notEmpty\", {\n            fieldName: t(\"events.form.deadlineDate\"),\n          }),\n        ),\n      ],\n    },\n    {\n      type: TYPE_FIELD.INPUT,\n      name: \"termsTitle\",\n      hideField: isEventOutside,\n      label: t(\"events.form.termsTitle\"),\n      colwidth: COL_HAFT,\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        validate.empty(\n          t(\"events.validate.notEmpty\", {\n            fieldName: t(\"events.form.termsTitle\"),\n          }),\n        ),\n        {\n          max: 40,\n          message: t(\"validate.maxCharacter\", { number: 40 }),\n        },\n      ],\n      maxLength: 40,\n    },\n    {\n      type: TYPE_FIELD.TEXT_AREA,\n      name: \"termsContent\",\n      hideField: isEventOutside,\n      hidden: isEventOutside,\n      label: t(\"events.form.termsContent\"),\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        validate.empty(\n          t(\"events.validate.notEmpty\", {\n            fieldName: t(\"events.form.termsContent\"),\n          }),\n        ),\n      ],\n    },\n    {\n      type: TYPE_FIELD.INPUT,\n      name: \"limit\",\n      hideField: isEventOutside,\n      label: t(\"events.form.limit\"),\n      colwidth: COL_HAFT,\n      disabled: isBeforeFromToday(state?.deadlineDate, \"minute\"),\n      rules: !isCyclingEvent\n        ? [\n            {\n              required: true,\n              message: \"\",\n            },\n            validate.empty(\n              t(\"events.validate.notEmpty\", {\n                fieldName: t(\"events.form.limit\"),\n              }),\n            ),\n          ]\n        : [],\n      onChange: (e) =>\n        coordinates(\n          e.target.value,\n          form,\n          \"limit\",\n          valueUserJoined?.data.length || 0,\n        ),\n    },\n    {\n      type: TYPE_FIELD.SELECT,\n      name: \"hashtag\",\n      label: t(\"events.form.hashtag\"),\n      colwidth: isEventOutside ? COLDEF : COL_HAFT,\n      listOptions: HASH_TAG_EVENT,\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        validate.empty(\n          t(\"events.validate.notEmpty\", {\n            fieldName: t(\"events.form.hashtag\"),\n          }),\n        ),\n      ],\n    },\n    {\n      type: TYPE_FIELD.SELECT_SCROLL_LOADING,\n      name: \"listEventCoursesId\",\n      label: t(\"checkpoint.form.routeId\"),\n      hideField: !isEventOutside,\n      fetchData,\n      setListDeletedId,\n      listDeletedId,\n      listInitialId: state?.courses?.map((item) => {\n        return item?.id;\n      }),\n      returnOption: (item) => ({\n        key: item?.id,\n        label: item?.title,\n        value: item?.id,\n      }),\n    },\n    {\n      type: TYPE_FIELD.UPLOAD,\n      name: \"imagesEvent\",\n      label: t(\"events.form.images\"),\n      initialFileList: state\n        ? state?.images.map((item) => {\n            return {\n              uid: item,\n              url: `${IMAGE_URL}${item}/original.jpg`,\n            };\n          })\n        : [],\n      deletedArr,\n      setAddedArr,\n      setDeletedArr,\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        validate.emptyImg(\n          t(\"events.validate.notEmpty\", {\n            fieldName: t(\"events.form.images\"),\n          }),\n        ),\n      ],\n    },\n  ].filter((col) => !col.hidden);\n\n  const onSubmitForm = (values) => {\n    if (!values.endDate) delete values.endDate;\n    if (!values.totalDistance) delete values.totalDistance;\n    if (!values.maxHeight) delete values.maxHeight;\n\n    setLoading(true);\n    const result = {\n      ...values,\n      imagesEvent: addedArr,\n      deleteImageIds: deletedArr || [],\n      levelId: values?.level,\n    };\n    const formData = appendFormData(result);\n\n    if (!state) {\n      eventApi\n        .postEvent(formData)\n        .then(() => {\n          message.success(t(\"events.message.createSuccess\"));\n          navigate(\"..\");\n        })\n        .catch(() => {\n          message.error(t(\"events.message.createErr\"));\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n\n    eventApi\n      .editEvent(formData, state.id)\n      .then(() => {\n        message.success(t(\"events.message.createSuccess\"));\n        navigate(\"..\");\n      })\n      .catch(() => {\n        message.error(t(\"events.message.createErr\"));\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div className=\"form-default checkpoint-form\">\n      <Row align=\"middle\" className=\"full-width header-table\">\n        <h1>{state ? t(\"events.editTitle\") : t(\"events.createTitle\")}</h1>\n      </Row>\n      <Card>\n        <Form\n          colon={false}\n          form={form}\n          layout=\"vertical\"\n          initialValues={state ? initValues : {}}\n          onValuesChange={handleValuesChange}\n          onFinish={onSubmitForm}\n        >\n          <Row gutter={[48, 8]}>{renderFieldForm(listField)}</Row>\n\n          <Row justify=\"center\" className=\"flex gap-20\">\n            <Button type=\"default\" onClick={() => navigate(\"..\")}>\n              {t(\"events.form.btnBack\")}\n            </Button>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              loading={loading}\n              disabled={loading}\n            >\n              {state ? t(\"events.form.btnSave\") : t(\"events.form.btnSubmit\")}\n            </Button>\n          </Row>\n        </Form>\n      </Card>\n    </div>\n  );\n}\n\nEventForm.propTypes = {};\n\nexport default EventForm;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}