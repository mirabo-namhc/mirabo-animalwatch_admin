{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, message, Modal, Tag } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport listOptionLevel from \"@common/constant/course\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport ComTable from \"@components/common/ComTable\";\nimport { courseApi } from \"@services/apis/course\";\nimport { useTranslation } from \"react-i18next\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nfunction CourseList() {\n  _s();\n  var _value$paginate;\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  const [refresh, setRefresh] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\"\n  });\n  const {\n    loading,\n    value\n  } = useFetch(ourRequest => courseApi.getCourses(pagination, ourRequest), [pagination, refresh]);\n  const totalPage = value === null || value === void 0 ? void 0 : (_value$paginate = value.paginate) === null || _value$paginate === void 0 ? void 0 : _value$paginate.totalPage;\n  const paginationProp = {\n    position: [\"bottomRight\"],\n    total: totalPage * pagination.limit,\n    current: pagination.page,\n    showSizeChanger: true\n  };\n  const handleCreate = () => {\n    navigate(PATH_URL.MANAGER_COURSE.CREATE);\n  };\n  const handleChangeTable = (paginate, filter, sorter) => {\n    setPagination(curState => ({\n      ...curState,\n      page: paginate === null || paginate === void 0 ? void 0 : paginate.current,\n      limit: paginate === null || paginate === void 0 ? void 0 : paginate.pageSize,\n      sort: sorter.field && `${sorter === null || sorter === void 0 ? void 0 : sorter.field}:${(sorter === null || sorter === void 0 ? void 0 : sorter.order) === \"ascend\" ? \"asc\" : \"desc\"}`\n    }));\n  };\n  const handleSearch = keyWord => {\n    setPagination(curState => ({\n      ...curState,\n      page: 1,\n      keyword: keyWord === null || keyWord === void 0 ? void 0 : keyWord.trim()\n    }));\n  };\n  const handleEdit = async (e, record) => {\n    e.stopPropagation();\n    try {\n      const res = await courseApi.getDetailCourse(record === null || record === void 0 ? void 0 : record.id);\n      navigate(PATH_URL.MANAGER_COURSE.EDIT, {\n        state: res\n      });\n    } catch (error) {\n      message.error(error);\n    }\n  };\n  const handleDetail = async record => {\n    navigate(PATH_URL.MANAGER_COURSE.DETAIL, {\n      state: record\n    });\n  };\n  const handleDelete = async courseId => {\n    try {\n      const res = await courseApi.delete(courseId);\n      if (!res) return;\n      if (res.success) {\n        message.success(t(\"managementCourses.noti.deleteSuccess\"));\n        setRefresh(`deleteCol-${courseId}`);\n      } else message.error(t(\"managementCourses.noti.deleteFail\"));\n    } catch (error) {\n      message.error(t(\"managementCourses.noti.deleteFail\"));\n    }\n  };\n  const confirm = courseId => {\n    Modal.confirm({\n      icon: /*#__PURE__*/React.createElement(ExclamationCircleOutlined, null),\n      centered: true,\n      content: t(\"managementCourses.modal.textConfirmDel\"),\n      okText: t(\"managementCourses.modal.textYes\"),\n      cancelText: t(\"managementCourses.modal.textNo\"),\n      onOk: () => handleDelete(courseId)\n    });\n  };\n  const columns = [{\n    title: t(\"managementCourses.list.id\"),\n    dataIndex: \"id\",\n    sorter: true,\n    align: \"center\",\n    width: 120\n  }, {\n    title: t(\"managementCourses.list.title\"),\n    dataIndex: \"title\",\n    align: \"center\",\n    sorter: true,\n    width: 220\n  }, {\n    title: t(\"managementCourses.list.place\"),\n    dataIndex: \"place\",\n    align: \"center\",\n    width: 220\n  }, {\n    title: t(\"managementCourses.list.totalDistance\"),\n    dataIndex: \"totalDistance\",\n    render: totalDistance => /*#__PURE__*/React.createElement(Tag, {\n      color: \"magenta\"\n    }, totalDistance, \" KM\"),\n    align: \"center\"\n  }, {\n    title: t(\"managementCourses.list.description\"),\n    dataIndex: \"description\",\n    align: \"center\",\n    render: description => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"truncate\"\n    }, description),\n    width: 300\n  }, {\n    title: t(\"managementCourses.list.level\"),\n    dataIndex: \"newLevel\",\n    align: \"center\",\n    width: 130,\n    render: newLevel => /*#__PURE__*/React.createElement(\"span\", null, newLevel === null || newLevel === void 0 ? void 0 : newLevel.name)\n  }, {\n    title: t(\"managementCourses.list.checkPoint\"),\n    dataIndex: \"checkPoint\",\n    render: checkPoint => /*#__PURE__*/React.createElement(\"span\", null, checkPoint === null || checkPoint === void 0 ? void 0 : checkPoint.length),\n    width: 250,\n    align: \"center\"\n  }, {\n    title: t(\"managementCourses.list.event\"),\n    dataIndex: \"events\",\n    render: events => /*#__PURE__*/React.createElement(\"span\", null, events === null || events === void 0 ? void 0 : events.map(event => /*#__PURE__*/React.createElement(Tag, null, event === null || event === void 0 ? void 0 : event.title))),\n    align: \"center\"\n  }, {\n    title: t(\"managementCourses.list.buttonEdit\"),\n    align: \"center\",\n    width: 250,\n    render: record => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"full-height full-width\"\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      className: \"mr-10\",\n      onClick: e => handleEdit(e, record)\n    }, t(\"table.btnEdit\")), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: e => {\n        e.stopPropagation();\n        confirm(record.id);\n      }\n    }, t(\"table.btnDel\")))\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(ComTable, {\n    title: t(\"managementCourses.title\"),\n    maxWidth: 2500,\n    loading: loading,\n    columns: columns,\n    pagination: paginationProp,\n    data: value === null || value === void 0 ? void 0 : value.data,\n    onAddTable: handleCreate,\n    onSearch: handleSearch,\n    onChangeTable: handleChangeTable,\n    onClickRow: handleDetail\n  }));\n}\n_s(CourseList, \"SgsRMMvsk3CQVpwAnqf/mW+4tIo=\", false, function () {\n  return [useTranslation, useNavigate, useFetch];\n});\n_c = CourseList;\nCourseList.propTypes = {};\nexport default CourseList;\nvar _c;\n$RefreshReg$(_c, \"CourseList\");","map":{"version":3,"mappings":"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","names":["React","useState","Button","message","Modal","Tag","useNavigate","PATH_URL","listOptionLevel","useFetch","ComTable","courseApi","useTranslation","ExclamationCircleOutlined","CourseList","t","navigate","refresh","setRefresh","pagination","setPagination","page","limit","keyword","loading","value","ourRequest","getCourses","totalPage","paginate","paginationProp","position","total","current","showSizeChanger","handleCreate","MANAGER_COURSE","CREATE","handleChangeTable","filter","sorter","curState","pageSize","sort","field","order","handleSearch","keyWord","trim","handleEdit","e","record","stopPropagation","res","getDetailCourse","id","EDIT","state","error","handleDetail","DETAIL","handleDelete","courseId","delete","success","confirm","icon","centered","content","okText","cancelText","onOk","columns","title","dataIndex","align","width","render","totalDistance","color","description","className","newLevel","name","checkPoint","length","events","map","event","type","onClick","maxWidth","data","onAddTable","onSearch","onChangeTable","onClickRow","propTypes"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/course/CourseList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, message, Modal, Tag } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport PATH_URL from \"@common/config/pathURL\";\nimport listOptionLevel from \"@common/constant/course\";\nimport useFetch from \"@common/hooks/useFetch\";\nimport ComTable from \"@components/common/ComTable\";\nimport { courseApi } from \"@services/apis/course\";\nimport { useTranslation } from \"react-i18next\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\n\nfunction CourseList() {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [refresh, setRefresh] = useState(\"\");\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    keyword: \"\",\n  });\n\n  const { loading, value } = useFetch(\n    (ourRequest) => courseApi.getCourses(pagination, ourRequest),\n    [pagination, refresh],\n  );\n\n  const totalPage = value?.paginate?.totalPage;\n  const paginationProp = {\n    position: [\"bottomRight\"],\n    total: totalPage * pagination.limit,\n    current: pagination.page,\n    showSizeChanger: true,\n  };\n\n  const handleCreate = () => {\n    navigate(PATH_URL.MANAGER_COURSE.CREATE);\n  };\n\n  const handleChangeTable = (paginate, filter, sorter) => {\n    setPagination((curState) => ({\n      ...curState,\n      page: paginate?.current,\n      limit: paginate?.pageSize,\n      sort:\n        sorter.field &&\n        `${sorter?.field}:${sorter?.order === \"ascend\" ? \"asc\" : \"desc\"}`,\n    }));\n  };\n\n  const handleSearch = (keyWord) => {\n    setPagination((curState) => ({\n      ...curState,\n      page: 1,\n      keyword: keyWord?.trim(),\n    }));\n  };\n\n  const handleEdit = async (e, record) => {\n    e.stopPropagation();\n    try {\n      const res = await courseApi.getDetailCourse(record?.id);\n      navigate(PATH_URL.MANAGER_COURSE.EDIT, { state: res });\n    } catch (error) {\n      message.error(error);\n    }\n  };\n\n  const handleDetail = async (record) => {\n    navigate(PATH_URL.MANAGER_COURSE.DETAIL, {\n      state: record,\n    });\n  };\n\n  const handleDelete = async (courseId) => {\n    try {\n      const res = await courseApi.delete(courseId);\n\n      if (!res) return;\n\n      if (res.success) {\n        message.success(t(\"managementCourses.noti.deleteSuccess\"));\n        setRefresh(`deleteCol-${courseId}`);\n      } else message.error(t(\"managementCourses.noti.deleteFail\"));\n    } catch (error) {\n      message.error(t(\"managementCourses.noti.deleteFail\"));\n    }\n  };\n\n  const confirm = (courseId) => {\n    Modal.confirm({\n      icon: <ExclamationCircleOutlined />,\n      centered: true,\n      content: t(\"managementCourses.modal.textConfirmDel\"),\n      okText: t(\"managementCourses.modal.textYes\"),\n      cancelText: t(\"managementCourses.modal.textNo\"),\n      onOk: () => handleDelete(courseId),\n    });\n  };\n\n  const columns = [\n    {\n      title: t(\"managementCourses.list.id\"),\n      dataIndex: \"id\",\n      sorter: true,\n      align: \"center\",\n      width: 120,\n    },\n    {\n      title: t(\"managementCourses.list.title\"),\n      dataIndex: \"title\",\n      align: \"center\",\n      sorter: true,\n      width: 220,\n    },\n    {\n      title: t(\"managementCourses.list.place\"),\n      dataIndex: \"place\",\n      align: \"center\",\n      width: 220,\n    },\n    {\n      title: t(\"managementCourses.list.totalDistance\"),\n      dataIndex: \"totalDistance\",\n      render: (totalDistance) => <Tag color=\"magenta\">{totalDistance} KM</Tag>,\n      align: \"center\",\n    },\n    {\n      title: t(\"managementCourses.list.description\"),\n      dataIndex: \"description\",\n      align: \"center\",\n      render: (description) => <div className=\"truncate\">{description}</div>,\n      width: 300,\n    },\n    {\n      title: t(\"managementCourses.list.level\"),\n      dataIndex: \"newLevel\",\n      align: \"center\",\n      width: 130,\n      render: (newLevel) => <span>{newLevel?.name}</span>,\n    },\n    {\n      title: t(\"managementCourses.list.checkPoint\"),\n      dataIndex: \"checkPoint\",\n      render: (checkPoint) => <span>{checkPoint?.length}</span>,\n      width: 250,\n      align: \"center\",\n    },\n    {\n      title: t(\"managementCourses.list.event\"),\n      dataIndex: \"events\",\n      render: (events) => (\n        <span>\n          {events?.map((event) => (\n            <Tag>{event?.title}</Tag>\n          ))}\n        </span>\n      ),\n      align: \"center\",\n    },\n    {\n      title: t(\"managementCourses.list.buttonEdit\"),\n      align: \"center\",\n      width: 250,\n      render: (record) => (\n        <div className=\"full-height full-width\">\n          <Button\n            type=\"primary\"\n            className=\"mr-10\"\n            onClick={(e) => handleEdit(e, record)}\n          >\n            {t(\"table.btnEdit\")}\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={(e) => {\n              e.stopPropagation();\n              confirm(record.id);\n            }}\n          >\n            {t(\"table.btnDel\")}\n          </Button>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <ComTable\n        title={t(\"managementCourses.title\")}\n        maxWidth={2500}\n        loading={loading}\n        columns={columns}\n        pagination={paginationProp}\n        data={value?.data}\n        onAddTable={handleCreate}\n        onSearch={handleSearch}\n        onChangeTable={handleChangeTable}\n        onClickRow={handleDetail}\n      />\n    </div>\n  );\n}\n\nCourseList.propTypes = {};\n\nexport default CourseList;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}