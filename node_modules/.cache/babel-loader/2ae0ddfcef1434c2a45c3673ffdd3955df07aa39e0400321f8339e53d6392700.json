{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { checkBeforeUpload } from \"@validate/validate\";\nimport { Col, Form, Image, Modal, Upload } from \"antd\";\nimport { t } from \"i18next\";\nimport PropTypes from \"prop-types\";\nconst getBase64 = file => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = () => resolve(reader.result);\n  reader.onerror = error => reject(error);\n});\nfunction MyUpload(_ref) {\n  _s();\n  let {\n    initialFileList,\n    label,\n    name,\n    placeholder,\n    length = 4,\n    deletedArr,\n    setAddedArr,\n    setDeletedArr,\n    rules,\n    disabled,\n    ...props\n  } = _ref;\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState(\"\");\n  const [previewTitle, setPreviewTitle] = useState(\"\");\n  const [fileList, setFileList] = useState(initialFileList || []);\n  const handleCancel = () => setPreviewVisible(false);\n  const handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1));\n  };\n  const handleChange = _ref2 => {\n    let {\n      fileList: newFileList,\n      file\n    } = _ref2;\n    const resultFileList = newFileList.filter(item => item === null || item === void 0 ? void 0 : item.originFileObj);\n    setAddedArr(resultFileList);\n    setFileList(newFileList);\n    const uidArr = initialFileList.map(item => item === null || item === void 0 ? void 0 : item.uid);\n    if (uidArr.includes(file.uid) && file.status === \"removed\") {\n      setDeletedArr([...deletedArr, file === null || file === void 0 ? void 0 : file.uid]);\n    }\n  };\n  const uploadButton = /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(PlusOutlined, {\n    className: \"fz-60 icon-upload\"\n  }));\n  return /*#__PURE__*/React.createElement(Col, {\n    className: \"form-image-input\",\n    xs: 24\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: label,\n    name: name,\n    rules: rules\n  }, /*#__PURE__*/React.createElement(Upload, {\n    listType: \"picture-card\",\n    fileList: fileList,\n    onPreview: handlePreview,\n    onChange: handleChange,\n    beforeUpload: file => checkBeforeUpload(t, file, 2),\n    accept: \"image/*\",\n    disabled: disabled\n  }, fileList.length >= length ? null : uploadButton)), /*#__PURE__*/React.createElement(Modal, {\n    open: previewVisible,\n    title: t(\"managementCourses.form.images\"),\n    footer: null,\n    onCancel: handleCancel\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"example\",\n    className: \"full-width\",\n    src: previewImage\n  })));\n}\n_s(MyUpload, \"yQTym/OBPkz0acsINrE0/8iuGDk=\");\n_c = MyUpload;\nMyUpload.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  length: PropTypes.number,\n  initialFileList: PropTypes.array,\n  deletedArr: PropTypes.array,\n  setAddedArr: PropTypes.func,\n  setDeletedArr: PropTypes.func,\n  rules: PropTypes.array,\n  disabled: PropTypes.bool\n};\nexport default MyUpload;\nvar _c;\n$RefreshReg$(_c, \"MyUpload\");","map":{"version":3,"mappings":"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","names":["React","useState","PlusOutlined","checkBeforeUpload","Col","Form","Image","Modal","Upload","t","PropTypes","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","MyUpload","initialFileList","label","name","placeholder","length","deletedArr","setAddedArr","setDeletedArr","rules","disabled","props","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","fileList","setFileList","handleCancel","handlePreview","url","preview","originFileObj","substring","lastIndexOf","handleChange","_ref2","newFileList","resultFileList","filter","item","uidArr","map","uid","includes","status","uploadButton","className","xs","Item","listType","onPreview","onChange","beforeUpload","accept","open","title","footer","onCancel","alt","src","propTypes","string","number","array","func","bool"],"sources":["/home/huynd/animalwatch_admin/src/components/form/MyUpload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { checkBeforeUpload } from \"@validate/validate\";\r\nimport { Col, Form, Image, Modal, Upload } from \"antd\";\r\nimport { t } from \"i18next\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst getBase64 = (file) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n\r\n    reader.onload = () => resolve(reader.result);\r\n\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nfunction MyUpload({\r\n  initialFileList,\r\n  label,\r\n  name,\r\n  placeholder,\r\n  length = 4,\r\n  deletedArr,\r\n  setAddedArr,\r\n  setDeletedArr,\r\n  rules,\r\n  disabled,\r\n  ...props\r\n}) {\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n  const [previewTitle, setPreviewTitle] = useState(\"\");\r\n  const [fileList, setFileList] = useState(initialFileList || []);\r\n\r\n  const handleCancel = () => setPreviewVisible(false);\r\n\r\n  const handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    setPreviewImage(file.url || file.preview);\r\n    setPreviewVisible(true);\r\n    setPreviewTitle(\r\n      file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1),\r\n    );\r\n  };\r\n\r\n  const handleChange = ({ fileList: newFileList, file }) => {\r\n    const resultFileList = newFileList.filter((item) => item?.originFileObj);\r\n    setAddedArr(resultFileList);\r\n    setFileList(newFileList);\r\n    const uidArr = initialFileList.map((item) => item?.uid);\r\n    if (uidArr.includes(file.uid) && file.status === \"removed\") {\r\n      setDeletedArr([...deletedArr, file?.uid]);\r\n    }\r\n  };\r\n  const uploadButton = (\r\n    <div>\r\n      <PlusOutlined className=\"fz-60 icon-upload\" />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Col className=\"form-image-input\" xs={24}>\r\n      <Form.Item label={label} name={name} rules={rules}>\r\n        <Upload\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={handlePreview}\r\n          onChange={handleChange}\r\n          beforeUpload={(file) => checkBeforeUpload(t, file, 2)}\r\n          accept=\"image/*\"\r\n          disabled={disabled}\r\n        >\r\n          {fileList.length >= length ? null : uploadButton}\r\n        </Upload>\r\n      </Form.Item>\r\n      <Modal\r\n        open={previewVisible}\r\n        title={t(\"managementCourses.form.images\")}\r\n        footer={null}\r\n        onCancel={handleCancel}\r\n      >\r\n        <img alt=\"example\" className=\"full-width\" src={previewImage} />\r\n      </Modal>\r\n    </Col>\r\n  );\r\n}\r\n\r\nMyUpload.propTypes = {\r\n  label: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  className: PropTypes.string,\r\n  length: PropTypes.number,\r\n  initialFileList: PropTypes.array,\r\n  deletedArr: PropTypes.array,\r\n  setAddedArr: PropTypes.func,\r\n  setDeletedArr: PropTypes.func,\r\n  rules: PropTypes.array,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nexport default MyUpload;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}