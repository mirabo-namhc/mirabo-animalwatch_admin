{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport dayjs from \"dayjs\";\nimport { t } from \"i18next\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { Button, Card, Row, Form, message } from \"antd\";\nimport { COLDEF, COL_HAFT, TYPE_FIELD, TYPE_IMAGE_CSV } from \"@common/constant/form\";\nimport { renderFieldForm } from \"@common/utils/renderFieldForm\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { checkBeforeUploadFile, empty } from \"@validate/validate\";\nimport { validate, validates } from \"@validate/index\";\nimport { appendFormData } from \"@common/utils/appendFormData\";\nimport { mailApi } from \"@services/apis/mail\";\nimport { DATE_TIME_FORMAT_MINUTE } from \"@common/constant/date\";\nimport { disableTimeBefore, disableBeforeDateWithParams } from \"@common/utils/dateHelper\";\nfunction MailForm() {\n  _s();\n  const [form] = useForm();\n  const navigate = useNavigate();\n  const quillRef = useRef();\n\n  // 10 minutes\n  const allowMinutes = 600000;\n  const {\n    state\n  } = useLocation();\n  const initValues = {\n    ...state,\n    sendAt: dayjs(state === null || state === void 0 ? void 0 : state.sendAt)\n  };\n  const handleBack = () => {\n    navigate(\"..\");\n  };\n  const handleDisableBeforeTime = (current, hour, minute) => {\n    if (!dayjs(current).isSame(dayjs(), \"day\")) return null;\n    return disableTimeBefore(minute >= 60 ? hour + 1 : hour, hour === dayjs(current).hour() ? minute : 0);\n  };\n  const handleCreate = values => {\n    mailApi.post(values).then(() => {\n      message.success(t(\"mail.message.createSuccess\"));\n    }).catch(() => {\n      message.error(t(\"mail.message.createError\"));\n    }).finally(() => navigate(\"../\"));\n  };\n  const handleEdit = (mailId, values) => {\n    mailApi.put(mailId, values).then(() => {\n      message.success(t(\"mail.message.editSuccess\"));\n    }).catch(() => {\n      message.error(t(\"mail.message.editError\"));\n    }).finally(() => navigate(\"../\"));\n  };\n  const handleFinish = values => {\n    if (dayjs(values.sendAt).diff(dayjs()) < allowMinutes) {\n      message.error(t(\"mail.validate.selectAfter10minutes\"));\n      return;\n    }\n    if (quillRef.current) {\n      const quillInstance = quillRef.current.getEditor();\n      const bodyContent = quillInstance.root.innerHTML;\n      const payload = {\n        name: values.name,\n        title: values.title,\n        body: bodyContent,\n        fileSendMailCsv: values.nameFileCsv.file,\n        sendAtCsv: values.sendAt\n      };\n      const payloadEdit = {\n        name: values.name,\n        title: values.title,\n        body: bodyContent,\n        fileSendMailCsv: values.nameFileCsv.file,\n        sendAtCsv: values.sendAt,\n        isSend: false\n      };\n      const formateFormData = appendFormData(payload);\n      const formateFormDataEdit = appendFormData(payloadEdit);\n      if (state) handleEdit(state === null || state === void 0 ? void 0 : state.id, formateFormDataEdit);else handleCreate(formateFormData);\n    }\n  };\n  const fieldForm = [{\n    colwidth: COL_HAFT,\n    type: TYPE_FIELD.INPUT,\n    name: \"name\",\n    label: t(\"mail.form.name\"),\n    style: {\n      height: \"44px\"\n    },\n    rules: [{\n      required: true,\n      message: \"\"\n    }, empty(t(\"managementCollections.validate.notEmpty\", {\n      fieldName: t(\"mail.form.name\")\n    }))]\n  }, {\n    colwidth: COL_HAFT,\n    type: TYPE_FIELD.INPUT,\n    name: \"title\",\n    label: t(\"mail.form.title\"),\n    style: {\n      height: \"44px\"\n    },\n    rules: [{\n      required: true,\n      message: \"\"\n    }, empty(t(\"managementCollections.validate.notEmpty\", {\n      fieldName: t(\"mail.form.title\")\n    }))]\n  }, {\n    colwidth: COLDEF,\n    type: TYPE_FIELD.TEXT_EDITOR,\n    quillRef,\n    name: \"body\",\n    label: t(\"mail.form.content\"),\n    style: {\n      height: \"150px\"\n    },\n    rules: [{\n      required: true,\n      message: t(\"managementCollections.validate.notEmpty\", {\n        fieldName: t(\"mail.form.content\")\n      })\n    }]\n  }, {\n    colwidth: COL_HAFT,\n    type: TYPE_FIELD.UPLOAD_FIELD,\n    name: \"nameFileCsv\",\n    label: t(\"mail.form.choseFileCsv\"),\n    maxFile: 1,\n    messageError: t(\"mail.validate.correctFile\"),\n    rules: [validate.emptyImg(t(\"managementCollections.validate.notEmpty\", {\n      fieldName: t(\"mail.form.choseFileCsv\")\n    }))],\n    allowFileWindow: TYPE_IMAGE_CSV,\n    hidden: state,\n    children: /*#__PURE__*/React.createElement(Button, {\n      icon: /*#__PURE__*/React.createElement(UploadOutlined, null)\n    }, t(\"mail.form.nameFileCsv\")),\n    beforeUpload: checkBeforeUploadFile\n  }, {\n    colwidth: COL_HAFT,\n    type: TYPE_FIELD.DATE_PICKER,\n    showTime: true,\n    showNow: false,\n    format: DATE_TIME_FORMAT_MINUTE,\n    name: \"sendAt\",\n    label: t(\"mail.form.estimatedEmailDeliveryDate\"),\n    className: \"full-width\",\n    rules: [{\n      required: true,\n      message: t(\"managementCollections.validate.notEmpty\", {\n        fieldName: t(\"mail.form.estimatedEmailDeliveryDate\")\n      })\n    }],\n    inputReadOnly: true,\n    disableDate: current => disableBeforeDateWithParams(current, dayjs()),\n    disabledTime: current => handleDisableBeforeTime(current, dayjs().hour(), dayjs().minute() + 10)\n  }].filter(column => !column.hidden);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"course-form form-default\"\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    className: \"full-width header-table\"\n  }, state ? /*#__PURE__*/React.createElement(\"h1\", null, t(\"mail.edit\")) : /*#__PURE__*/React.createElement(\"h1\", null, t(\"mail.create\"))), /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    colon: false,\n    layout: \"vertical\",\n    initialValues: state ? initValues : {},\n    onFinish: handleFinish\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [48, 8]\n  }, renderFieldForm(fieldForm)), /*#__PURE__*/React.createElement(Row, {\n    className: \"flex jc-center gap-20 full-width\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"default\",\n    className: \"fw-600 cancel-btn\",\n    onClick: handleBack\n  }, t(\"mail.form.btnBack\")), /*#__PURE__*/React.createElement(Button, {\n    className: \"fw-600 submit-btn\",\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, t(\"mail.form.btnCreate\"))))));\n}\n_s(MailForm, \"OsCYJ2RK5yZlq8e7P18oO2FAh8Q=\", false, function () {\n  return [useForm, useNavigate, useLocation];\n});\n_c = MailForm;\nMailForm.propTypes = {};\nexport default MailForm;\nvar _c;\n$RefreshReg$(_c, \"MailForm\");","map":{"version":3,"mappings":"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","names":["React","useEffect","useRef","PropTypes","dayjs","t","useForm","Button","Card","Row","Form","message","COLDEF","COL_HAFT","TYPE_FIELD","TYPE_IMAGE_CSV","renderFieldForm","useLocation","useNavigate","UploadOutlined","checkBeforeUploadFile","empty","validate","validates","appendFormData","mailApi","DATE_TIME_FORMAT_MINUTE","disableTimeBefore","disableBeforeDateWithParams","MailForm","form","navigate","quillRef","allowMinutes","state","initValues","sendAt","handleBack","handleDisableBeforeTime","current","hour","minute","isSame","handleCreate","values","post","then","success","catch","error","finally","handleEdit","mailId","put","handleFinish","diff","quillInstance","getEditor","bodyContent","root","innerHTML","payload","name","title","body","fileSendMailCsv","nameFileCsv","file","sendAtCsv","payloadEdit","isSend","formateFormData","formateFormDataEdit","id","fieldForm","colwidth","type","INPUT","label","style","height","rules","required","fieldName","TEXT_EDITOR","UPLOAD_FIELD","maxFile","messageError","emptyImg","allowFileWindow","hidden","children","icon","beforeUpload","DATE_PICKER","showTime","showNow","format","className","inputReadOnly","disableDate","disabledTime","filter","column","align","colon","layout","initialValues","onFinish","gutter","onClick","htmlType","propTypes"],"sources":["/home/huynd/animalwatch_admin/src/pages/manager/mail/MailForm.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport dayjs from \"dayjs\";\nimport { t } from \"i18next\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { Button, Card, Row, Form, message } from \"antd\";\n\nimport {\n  COLDEF,\n  COL_HAFT,\n  TYPE_FIELD,\n  TYPE_IMAGE_CSV,\n} from \"@common/constant/form\";\nimport { renderFieldForm } from \"@common/utils/renderFieldForm\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { checkBeforeUploadFile, empty } from \"@validate/validate\";\nimport { validate, validates } from \"@validate/index\";\nimport { appendFormData } from \"@common/utils/appendFormData\";\nimport { mailApi } from \"@services/apis/mail\";\nimport { DATE_TIME_FORMAT_MINUTE } from \"@common/constant/date\";\nimport {\n  disableTimeBefore,\n  disableBeforeDateWithParams,\n} from \"@common/utils/dateHelper\";\n\nfunction MailForm() {\n  const [form] = useForm();\n  const navigate = useNavigate();\n  const quillRef = useRef();\n\n  // 10 minutes\n  const allowMinutes = 600000;\n\n  const { state } = useLocation();\n  const initValues = {\n    ...state,\n    sendAt: dayjs(state?.sendAt),\n  };\n\n  const handleBack = () => {\n    navigate(\"..\");\n  };\n\n  const handleDisableBeforeTime = (current, hour, minute) => {\n    if (!dayjs(current).isSame(dayjs(), \"day\")) return null;\n    return disableTimeBefore(\n      minute >= 60 ? hour + 1 : hour,\n      hour === dayjs(current).hour() ? minute : 0,\n    );\n  };\n\n  const handleCreate = (values) => {\n    mailApi\n      .post(values)\n      .then(() => {\n        message.success(t(\"mail.message.createSuccess\"));\n      })\n      .catch(() => {\n        message.error(t(\"mail.message.createError\"));\n      })\n      .finally(() => navigate(\"../\"));\n  };\n\n  const handleEdit = (mailId, values) => {\n    mailApi\n      .put(mailId, values)\n      .then(() => {\n        message.success(t(\"mail.message.editSuccess\"));\n      })\n      .catch(() => {\n        message.error(t(\"mail.message.editError\"));\n      })\n      .finally(() => navigate(\"../\"));\n  };\n\n  const handleFinish = (values) => {\n    if (dayjs(values.sendAt).diff(dayjs()) < allowMinutes) {\n      message.error(t(\"mail.validate.selectAfter10minutes\"));\n      return;\n    }\n\n    if (quillRef.current) {\n      const quillInstance = quillRef.current.getEditor();\n      const bodyContent = quillInstance.root.innerHTML;\n      const payload = {\n        name: values.name,\n        title: values.title,\n        body: bodyContent,\n        fileSendMailCsv: values.nameFileCsv.file,\n        sendAtCsv: values.sendAt,\n      };\n\n      const payloadEdit = {\n        name: values.name,\n        title: values.title,\n        body: bodyContent,\n        fileSendMailCsv: values.nameFileCsv.file,\n        sendAtCsv: values.sendAt,\n        isSend: false,\n      };\n\n      const formateFormData = appendFormData(payload);\n      const formateFormDataEdit = appendFormData(payloadEdit);\n\n      if (state) handleEdit(state?.id, formateFormDataEdit);\n      else handleCreate(formateFormData);\n    }\n  };\n\n  const fieldForm = [\n    {\n      colwidth: COL_HAFT,\n      type: TYPE_FIELD.INPUT,\n      name: \"name\",\n      label: t(\"mail.form.name\"),\n      style: { height: \"44px\" },\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        empty(\n          t(\"managementCollections.validate.notEmpty\", {\n            fieldName: t(\"mail.form.name\"),\n          }),\n        ),\n      ],\n    },\n    {\n      colwidth: COL_HAFT,\n      type: TYPE_FIELD.INPUT,\n      name: \"title\",\n      label: t(\"mail.form.title\"),\n      style: { height: \"44px\" },\n      rules: [\n        {\n          required: true,\n          message: \"\",\n        },\n        empty(\n          t(\"managementCollections.validate.notEmpty\", {\n            fieldName: t(\"mail.form.title\"),\n          }),\n        ),\n      ],\n    },\n    {\n      colwidth: COLDEF,\n      type: TYPE_FIELD.TEXT_EDITOR,\n      quillRef,\n      name: \"body\",\n      label: t(\"mail.form.content\"),\n      style: { height: \"150px\" },\n      rules: [\n        {\n          required: true,\n          message: t(\"managementCollections.validate.notEmpty\", {\n            fieldName: t(\"mail.form.content\"),\n          }),\n        },\n      ],\n    },\n    {\n      colwidth: COL_HAFT,\n      type: TYPE_FIELD.UPLOAD_FIELD,\n      name: \"nameFileCsv\",\n      label: t(\"mail.form.choseFileCsv\"),\n      maxFile: 1,\n      messageError: t(\"mail.validate.correctFile\"),\n      rules: [\n        validate.emptyImg(\n          t(\"managementCollections.validate.notEmpty\", {\n            fieldName: t(\"mail.form.choseFileCsv\"),\n          }),\n        ),\n      ],\n      allowFileWindow: TYPE_IMAGE_CSV,\n      hidden: state,\n      children: (\n        <Button icon={<UploadOutlined />}>{t(\"mail.form.nameFileCsv\")}</Button>\n      ),\n      beforeUpload: checkBeforeUploadFile,\n    },\n    {\n      colwidth: COL_HAFT,\n      type: TYPE_FIELD.DATE_PICKER,\n      showTime: true,\n      showNow: false,\n      format: DATE_TIME_FORMAT_MINUTE,\n      name: \"sendAt\",\n      label: t(\"mail.form.estimatedEmailDeliveryDate\"),\n      className: \"full-width\",\n      rules: [\n        {\n          required: true,\n          message: t(\"managementCollections.validate.notEmpty\", {\n            fieldName: t(\"mail.form.estimatedEmailDeliveryDate\"),\n          }),\n        },\n      ],\n      inputReadOnly: true,\n\n      disableDate: (current) => disableBeforeDateWithParams(current, dayjs()),\n      disabledTime: (current) =>\n        handleDisableBeforeTime(current, dayjs().hour(), dayjs().minute() + 10),\n    },\n  ].filter((column) => !column.hidden);\n\n  return (\n    <div className=\"course-form form-default\">\n      <Row align=\"middle\" className=\"full-width header-table\">\n        {state ? <h1>{t(\"mail.edit\")}</h1> : <h1>{t(\"mail.create\")}</h1>}\n      </Row>\n\n      <Card>\n        <Form\n          form={form}\n          colon={false}\n          layout=\"vertical\"\n          initialValues={state ? initValues : {}}\n          onFinish={handleFinish}\n        >\n          <Row gutter={[48, 8]}>{renderFieldForm(fieldForm)}</Row>\n\n          <Row className=\"flex jc-center gap-20 full-width\">\n            <Button\n              type=\"default\"\n              className=\"fw-600 cancel-btn\"\n              onClick={handleBack}\n            >\n              {t(\"mail.form.btnBack\")}\n            </Button>\n            <Button\n              className=\"fw-600 submit-btn\"\n              type=\"primary\"\n              htmlType=\"submit\"\n            >\n              {t(\"mail.form.btnCreate\")}\n            </Button>\n          </Row>\n        </Form>\n      </Card>\n    </div>\n  );\n}\n\nMailForm.propTypes = {};\n\nexport default MailForm;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}