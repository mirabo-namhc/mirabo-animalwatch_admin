{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Form, ColorPicker } from \"antd\";\nfunction MyColorPicker(_ref) {\n  let {\n    label,\n    name,\n    rules,\n    picker,\n    colwidth,\n    setDataColor,\n    ...props\n  } = _ref;\n  const handleChange = (value, colorObj) => {\n    if (colorObj) setDataColor(colorObj);\n  };\n  return /*#__PURE__*/React.createElement(Col, {\n    xs: colwidth || 24\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: label,\n    name: name,\n    rules: rules\n  }, /*#__PURE__*/React.createElement(ColorPicker, _extends({\n    showText: true\n  }, props, {\n    onChange: handleChange\n  }))));\n}\n_c = MyColorPicker;\nexport default MyColorPicker;\nMyColorPicker.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.any,\n  rules: PropTypes.array,\n  picker: PropTypes.string,\n  colwidth: PropTypes.number,\n  setDataColor: PropTypes.func\n};\nvar _c;\n$RefreshReg$(_c, \"MyColorPicker\");","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,GAAG,EAAEC,IAAI,EAAEC,WAAW,QAAQ,MAAM;AAE7C,SAASC,aAAa,OAQnB;EAAA,IARoB;IACrBC,KAAK;IACLC,IAAI;IACJC,KAAK;IACLC,MAAM;IACNC,QAAQ;IACRC,YAAY;IACZ,GAAGC;EACL,CAAC;EACC,MAAMC,YAAY,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxC,IAAIA,QAAQ,EAAEJ,YAAY,CAACI,QAAQ,CAAC;EACtC,CAAC;EACD,oBACEf,oBAACE,GAAG;IAACc,EAAE,EAAEN,QAAQ,IAAI;EAAG,gBACtBV,oBAACG,IAAI,CAACc,IAAI;IAACX,KAAK,EAAEA,KAAM;IAACC,IAAI,EAAEA,IAAK;IAACC,KAAK,EAAEA;EAAM,gBAChDR,oBAACI,WAAW;IAACc,QAAQ;EAAA,GAAKN,KAAK;IAAEO,QAAQ,EAAEN;EAAa,GAAG,CACjD,CACR;AAEV;AAAA,KAnBSR,aAAa;AAqBtB,eAAeA,aAAa;AAE5BA,aAAa,CAACe,SAAS,GAAG;EACxBd,KAAK,EAAEL,SAAS,CAACoB,MAAM;EACvBd,IAAI,EAAEN,SAAS,CAACqB,GAAG;EACnBd,KAAK,EAAEP,SAAS,CAACsB,KAAK;EACtBd,MAAM,EAAER,SAAS,CAACoB,MAAM;EACxBX,QAAQ,EAAET,SAAS,CAACuB,MAAM;EAC1Bb,YAAY,EAAEV,SAAS,CAACwB;AAC1B,CAAC;AAAA;AAAA","names":["React","PropTypes","Col","Form","ColorPicker","MyColorPicker","label","name","rules","picker","colwidth","setDataColor","props","handleChange","value","colorObj","xs","Item","showText","onChange","propTypes","string","any","array","number","func"],"sources":["/home/huynd/animalwatch_admin/src/components/form/MyColorPicker.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Form, ColorPicker } from \"antd\";\n\nfunction MyColorPicker({\n  label,\n  name,\n  rules,\n  picker,\n  colwidth,\n  setDataColor,\n  ...props\n}) {\n  const handleChange = (value, colorObj) => {\n    if (colorObj) setDataColor(colorObj);\n  };\n  return (\n    <Col xs={colwidth || 24}>\n      <Form.Item label={label} name={name} rules={rules}>\n        <ColorPicker showText {...props} onChange={handleChange} />\n      </Form.Item>\n    </Col>\n  );\n}\n\nexport default MyColorPicker;\n\nMyColorPicker.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.any,\n  rules: PropTypes.array,\n  picker: PropTypes.string,\n  colwidth: PropTypes.number,\n  setDataColor: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}