{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from \"react\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Space } from \"antd\";\nfunction MyFormList() {\n  const onFinish = values => {};\n  return /*#__PURE__*/React.createElement(Form.List, {\n    name: \"users\"\n  }, (fields, _ref) => {\n    let {\n      add,\n      remove\n    } = _ref;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, fields.map(_ref2 => {\n      let {\n        key,\n        name,\n        ...restField\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(Space, {\n        key: key,\n        style: {\n          display: \"flex\",\n          marginBottom: 8\n        },\n        align: \"baseline\"\n      }, /*#__PURE__*/React.createElement(Form.Item, _extends({}, restField, {\n        name: [name, \"first\"],\n        rules: [{\n          required: true,\n          message: \"Missing first name\"\n        }]\n      }), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"First Name\"\n      })), /*#__PURE__*/React.createElement(Form.Item, _extends({}, restField, {\n        name: [name, \"last\"],\n        rules: [{\n          required: true,\n          message: \"Missing last name\"\n        }]\n      }), /*#__PURE__*/React.createElement(Input, {\n        placeholder: \"Last Name\"\n      })), /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n        onClick: () => remove(name)\n      }));\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"dashed\",\n      onClick: () => add(),\n      block: true,\n      icon: /*#__PURE__*/React.createElement(PlusOutlined, null)\n    }, \"Add field\"));\n  });\n}\n_c = MyFormList;\nexport default MyFormList;\nvar _c;\n$RefreshReg$(_c, \"MyFormList\");","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,EAAEC,YAAY,QAAQ,mBAAmB;AACrE,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,MAAM;AAEjD,SAASC,UAAU,GAAG;EACpB,MAAMC,QAAQ,GAAIC,MAAM,IAAK,CAAC,CAAC;EAC/B,oBACET,oBAACI,IAAI,CAACM,IAAI;IAACC,IAAI,EAAC;EAAO,GACpB,CAACC,MAAM;IAAA,IAAE;MAAEC,GAAG;MAAEC;IAAO,CAAC;IAAA,oBACvBd,0CACGY,MAAM,CAACG,GAAG,CAACC;MAAA,IAAC;QAAEC,GAAG;QAAEN,IAAI;QAAE,GAAGO;MAAU,CAAC;MAAA,oBACtClB,oBAACM,KAAK;QACJW,GAAG,EAAEA,GAAI;QACTE,KAAK,EAAE;UACLC,OAAO,EAAE,MAAM;UACfC,YAAY,EAAE;QAChB,CAAE;QACFC,KAAK,EAAC;MAAU,gBAEhBtB,oBAACI,IAAI,CAACmB,IAAI,eACJL,SAAS;QACbP,IAAI,EAAE,CAACA,IAAI,EAAE,OAAO,CAAE;QACtBa,KAAK,EAAE,CACL;UACEC,QAAQ,EAAE,IAAI;UACdC,OAAO,EAAE;QACX,CAAC;MACD,iBAEF1B,oBAACK,KAAK;QAACsB,WAAW,EAAC;MAAY,EAAG,CACxB,eACZ3B,oBAACI,IAAI,CAACmB,IAAI,eACJL,SAAS;QACbP,IAAI,EAAE,CAACA,IAAI,EAAE,MAAM,CAAE;QACrBa,KAAK,EAAE,CACL;UACEC,QAAQ,EAAE,IAAI;UACdC,OAAO,EAAE;QACX,CAAC;MACD,iBAEF1B,oBAACK,KAAK;QAACsB,WAAW,EAAC;MAAW,EAAG,CACvB,eACZ3B,oBAACC,mBAAmB;QAAC2B,OAAO,EAAE,MAAMd,MAAM,CAACH,IAAI;MAAE,EAAG,CAC9C;IAAA,CACT,CAAC,eAEFX,oBAACG,MAAM;MACL0B,IAAI,EAAC,QAAQ;MACbD,OAAO,EAAE,MAAMf,GAAG,EAAG;MACrBiB,KAAK;MACLC,IAAI,eAAE/B,oBAACE,YAAY;IAAI,eAGhB,CACR;EAAA,CACJ,CACS;AAEhB;AAAA,KAvDSK,UAAU;AAwDnB,eAAeA,UAAU;AAAA;AAAA","names":["React","MinusCircleOutlined","PlusOutlined","Button","Form","Input","Space","MyFormList","onFinish","values","List","name","fields","add","remove","map","_ref2","key","restField","style","display","marginBottom","align","Item","rules","required","message","placeholder","onClick","type","block","icon"],"sources":["/home/huynd/animalwatch_admin/src/components/form/MyFormList.jsx"],"sourcesContent":["import React from \"react\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Space } from \"antd\";\n\nfunction MyFormList() {\n  const onFinish = (values) => {};\n  return (\n    <Form.List name=\"users\">\n      {(fields, { add, remove }) => (\n        <>\n          {fields.map(({ key, name, ...restField }) => (\n            <Space\n              key={key}\n              style={{\n                display: \"flex\",\n                marginBottom: 8,\n              }}\n              align=\"baseline\"\n            >\n              <Form.Item\n                {...restField}\n                name={[name, \"first\"]}\n                rules={[\n                  {\n                    required: true,\n                    message: \"Missing first name\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"First Name\" />\n              </Form.Item>\n              <Form.Item\n                {...restField}\n                name={[name, \"last\"]}\n                rules={[\n                  {\n                    required: true,\n                    message: \"Missing last name\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"Last Name\" />\n              </Form.Item>\n              <MinusCircleOutlined onClick={() => remove(name)} />\n            </Space>\n          ))}\n\n          <Button\n            type=\"dashed\"\n            onClick={() => add()}\n            block\n            icon={<PlusOutlined />}\n          >\n            Add field\n          </Button>\n        </>\n      )}\n    </Form.List>\n  );\n}\nexport default MyFormList;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}