{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport PATH_URL from \"@common/config/pathURL\";\nimport { COLDEF, ISNUMBER, TYPE_FIELD } from \"@common/constant/form\";\nimport { appendFormData } from \"@common/utils/appendFormData\";\nimport { renderFieldForm } from \"@common/utils/renderFieldForm\";\nimport { postApi } from \"@services/post\";\nimport { validate } from \"@validate/index\";\nimport { Button, Card, Form, Row, message } from \"antd\";\nimport dayjs from \"dayjs\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nfunction PostForm() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const navigate = useNavigate();\n  const disabledDate = current => current.isBefore(dayjs().subtract(1, \"day\"));\n  const listField = [{\n    type: TYPE_FIELD.INPUT,\n    name: \"title\",\n    label: \"title\",\n    colwidth: COLDEF\n  }, {\n    type: TYPE_FIELD.INPUT,\n    name: \"description\",\n    label: \"description\",\n    colwidth: COLDEF,\n    rules: [{\n      required: true,\n      message: t(\"validate.notEmpty\", {\n        fieldName: \"description\"\n      })\n    }, {\n      max: 50,\n      message: t(\"validate.maxCharacter\", {\n        number: 50\n      })\n    }]\n  }, {\n    type: TYPE_FIELD.DATE_PICKER,\n    name: \"date\",\n    label: \"date\",\n    isDateTimePicker: true,\n    colwidth: COLDEF,\n    disabledDate: e => disabledDate(e)\n  }, {\n    type: TYPE_FIELD.INPUT,\n    name: \"heartRate\",\n    label: \"heartRate\",\n    colwidth: COLDEF,\n    isInputNumber: ISNUMBER,\n    defaultValue: 1,\n    onKeyPress: e => validate.handleOnKeyPress(e)\n  }, {\n    type: TYPE_FIELD.INPUT,\n    name: \"distant\",\n    label: \"distant\",\n    colwidth: COLDEF,\n    isInputNumber: ISNUMBER,\n    defaultValue: 1,\n    onKeyPress: e => validate.handleOnKeyPress(e)\n  }, {\n    type: TYPE_FIELD.INPUT,\n    name: \"height\",\n    label: \"height\",\n    colwidth: COLDEF,\n    isInputNumber: ISNUMBER,\n    defaultValue: 1,\n    onKeyPress: e => validate.handleOnKeyPress(e)\n  }, {\n    type: TYPE_FIELD.UPLOAD,\n    name: \"files\",\n    label: \"files\",\n    colwidth: COLDEF\n  }];\n  const onSubmit = values => {\n    const payload = {\n      ...values\n    };\n    const formData = appendFormData(payload);\n    postApi.createPost(formData).then(response => {\n      if (response.success === true) {\n        message.success(\"Created post\");\n      } else {\n        message.error(\"Create post failed\");\n      }\n    }).catch(() => {\n      message.error(\"Create post failed\");\n    });\n  };\n  const handleRedirectListPage = () => {\n    navigate(PATH_URL.POST.INDEX);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-form\"\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    className: \"full-width header-table\"\n  }, /*#__PURE__*/React.createElement(\"h1\", null, \"Create Post\")), /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(Form, {\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 10\n    },\n    colon: false,\n    onFinish: onSubmit\n  }, renderFieldForm(listField), /*#__PURE__*/React.createElement(Row, {\n    className: \"flex jc-center gap-20\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleRedirectListPage,\n    className: \"fw-600 cancel-btn\",\n    type: \"default\"\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"fw-600 submit-btn\"\n  }, \"Submit\")))));\n}\n_s(PostForm, \"qYo9QM37pCMkn355LTl4bSmxPCw=\", false, function () {\n  return [useTranslation, useNavigate];\n});\n_c = PostForm;\nPostForm.propTypes = {};\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"mappings":"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","names":["React","PATH_URL","COLDEF","ISNUMBER","TYPE_FIELD","appendFormData","renderFieldForm","postApi","validate","Button","Card","Form","Row","message","dayjs","useTranslation","useNavigate","PostForm","t","navigate","disabledDate","current","isBefore","subtract","listField","type","INPUT","name","label","colwidth","rules","required","fieldName","max","number","DATE_PICKER","isDateTimePicker","e","isInputNumber","defaultValue","onKeyPress","handleOnKeyPress","UPLOAD","onSubmit","values","payload","formData","createPost","then","response","success","error","catch","handleRedirectListPage","POST","INDEX","className","align","labelCol","span","wrapperCol","colon","onFinish","onClick","htmlType","propTypes"],"sources":["/home/huynd/animalwatch_admin/src/pages/posts/PostForm.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PATH_URL from \"@common/config/pathURL\";\r\nimport { COLDEF, ISNUMBER, TYPE_FIELD } from \"@common/constant/form\";\r\nimport { appendFormData } from \"@common/utils/appendFormData\";\r\nimport { renderFieldForm } from \"@common/utils/renderFieldForm\";\r\nimport { postApi } from \"@services/post\";\r\nimport { validate } from \"@validate/index\";\r\nimport { Button, Card, Form, Row, message } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction PostForm() {\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const disabledDate = (current) =>\r\n    current.isBefore(dayjs().subtract(1, \"day\"));\r\n\r\n  const listField = [\r\n    {\r\n      type: TYPE_FIELD.INPUT,\r\n      name: \"title\",\r\n      label: \"title\",\r\n      colwidth: COLDEF,\r\n    },\r\n    {\r\n      type: TYPE_FIELD.INPUT,\r\n      name: \"description\",\r\n      label: \"description\",\r\n      colwidth: COLDEF,\r\n      rules: [\r\n        {\r\n          required: true,\r\n          message: t(\"validate.notEmpty\", {\r\n            fieldName: \"description\",\r\n          }),\r\n        },\r\n        {\r\n          max: 50,\r\n          message: t(\"validate.maxCharacter\", { number: 50 }),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      type: TYPE_FIELD.DATE_PICKER,\r\n      name: \"date\",\r\n      label: \"date\",\r\n      isDateTimePicker: true,\r\n      colwidth: COLDEF,\r\n      disabledDate: (e) => disabledDate(e),\r\n    },\r\n    {\r\n      type: TYPE_FIELD.INPUT,\r\n      name: \"heartRate\",\r\n      label: \"heartRate\",\r\n      colwidth: COLDEF,\r\n      isInputNumber: ISNUMBER,\r\n      defaultValue: 1,\r\n      onKeyPress: (e) => validate.handleOnKeyPress(e),\r\n    },\r\n    {\r\n      type: TYPE_FIELD.INPUT,\r\n      name: \"distant\",\r\n      label: \"distant\",\r\n      colwidth: COLDEF,\r\n      isInputNumber: ISNUMBER,\r\n      defaultValue: 1,\r\n      onKeyPress: (e) => validate.handleOnKeyPress(e),\r\n    },\r\n    {\r\n      type: TYPE_FIELD.INPUT,\r\n      name: \"height\",\r\n      label: \"height\",\r\n      colwidth: COLDEF,\r\n      isInputNumber: ISNUMBER,\r\n      defaultValue: 1,\r\n      onKeyPress: (e) => validate.handleOnKeyPress(e),\r\n    },\r\n    {\r\n      type: TYPE_FIELD.UPLOAD,\r\n      name: \"files\",\r\n      label: \"files\",\r\n      colwidth: COLDEF,\r\n    },\r\n  ];\r\n\r\n  const onSubmit = (values) => {\r\n    const payload = {\r\n      ...values,\r\n    };\r\n    const formData = appendFormData(payload);\r\n    postApi\r\n      .createPost(formData)\r\n      .then((response) => {\r\n        if (response.success === true) {\r\n          message.success(\"Created post\");\r\n        } else {\r\n          message.error(\"Create post failed\");\r\n        }\r\n      })\r\n      .catch(() => {\r\n        message.error(\"Create post failed\");\r\n      });\r\n  };\r\n\r\n  const handleRedirectListPage = () => {\r\n    navigate(PATH_URL.POST.INDEX);\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-form\">\r\n      <Row align=\"middle\" className=\"full-width header-table\">\r\n        <h1>Create Post</h1>\r\n      </Row>\r\n\r\n      <Card>\r\n        <Form\r\n          labelCol={{\r\n            span: 8,\r\n          }}\r\n          wrapperCol={{\r\n            span: 10,\r\n          }}\r\n          colon={false}\r\n          onFinish={onSubmit}\r\n        >\r\n          {renderFieldForm(listField)}\r\n          <Row className=\"flex jc-center gap-20\">\r\n            <Button\r\n              onClick={handleRedirectListPage}\r\n              className=\"fw-600 cancel-btn\"\r\n              type=\"default\"\r\n            >\r\n              Back\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"fw-600 submit-btn\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Row>\r\n        </Form>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nPostForm.propTypes = {};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}